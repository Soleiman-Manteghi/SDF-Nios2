
Nios2_Actor.elf:     file format elf32-littlenios2
Nios2_Actor.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000224

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00010bd4 memsz 0x00010bd4 flags r-x
    LOAD off    0x00011bf4 vaddr 0x00010bf4 paddr 0x000127cc align 2**12
         filesz 0x00001bd8 memsz 0x00001bd8 flags rw-
    LOAD off    0x000003a4 vaddr 0x000143a4 paddr 0x000143a4 align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000204  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010354  00000224  00000224  00001224  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000067c  00010578  00010578  00011578  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bd8  00010bf4  000127cc  00011bf4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  000143a4  000143a4  000143a4  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00014500  00014500  000137cc  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  000137cc  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001090  00000000  00000000  00013800  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   0002d888  00000000  00000000  00014890  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000be40  00000000  00000000  00042118  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   00010f53  00000000  00000000  0004df58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00002658  00000000  00000000  0005eeac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    00002950  00000000  00000000  00061504  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_alt_sim_info 00000010  00000000  00000000  00063e54  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000070  00000000  00000000  00063e68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line_str 00002205  00000000  00000000  00063ed8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_loclists 0001506b  00000000  00000000  000660dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_rnglists 00001791  00000000  00000000  0007b148  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .thread_model 00000003  00000000  00000000  0007feee  2**0
                  CONTENTS, READONLY
 20 .cpu          0000000c  00000000  00000000  0007fef1  2**0
                  CONTENTS, READONLY
 21 .qsys         00000001  00000000  00000000  0007fefd  2**0
                  CONTENTS, READONLY
 22 .simulation_enabled 00000001  00000000  00000000  0007fefe  2**0
                  CONTENTS, READONLY
 23 .stderr_dev   0000000b  00000000  00000000  0007feff  2**0
                  CONTENTS, READONLY
 24 .stdin_dev    0000000b  00000000  00000000  0007ff0a  2**0
                  CONTENTS, READONLY
 25 .stdout_dev   0000000b  00000000  00000000  0007ff15  2**0
                  CONTENTS, READONLY
 26 .sopc_system_name 0000000f  00000000  00000000  0007ff20  2**0
                  CONTENTS, READONLY
 27 .quartus_project_dir 00000052  00000000  00000000  0007ff2f  2**0
                  CONTENTS, READONLY
 28 .jdi          00005876  00000000  00000000  0007ff81  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     00049fac  00000000  00000000  000857f7  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000224 l    d  .text	00000000 .text
00010578 l    d  .rodata	00000000 .rodata
00010bf4 l    d  .rwdata	00000000 .rwdata
000143a4 l    d  .bss	00000000 .bss
00014500 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 crt0.o
0000025c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
000105e4 l     O .rodata	00000010 zeroes.0
00002978 l     F .text	000000c4 __sbprintf
000105f4 l     O .rodata	00000010 blanks.1
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00002b88 l     F .text	00000218 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00004874 l     F .text	00000008 __fp_lock
00004888 l     F .text	00000008 __fp_unlock
00004890 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00010bf4 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000106a8 l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
00007de8 l     F .text	000000f4 __sprint_r.part.0
000107cc l     O .rodata	00000010 zeroes.0
00009190 l     F .text	000000c4 __sbprintf
000107dc l     O .rodata	00000010 blanks.1
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000d940 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000da58 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000dac0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0000dbd8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0000dcc4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000ddf0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000dedc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000e0bc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000127bc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000e328 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000e468 l     F .text	00000034 alt_dev_reg
00011734 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_fifo_util.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000ec44 l     F .text	00000214 altera_avalon_jtag_uart_irq
0000ee58 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000f624 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000fa88 l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0000fbd8 l     F .text	0000003c alt_get_errno
0000fc14 l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
000143d4 g     O .bss	00000004 alt_instruction_exception_handler
00007510 g     F .text	00000070 _mprec_log10
000075fc g     F .text	00000060 __any_on
000098bc g     F .text	00000058 _isatty_r
000106b4 g     O .rodata	00000028 __mprec_tinytens
0000dff8 g     F .text	0000007c alt_main
00000334 g     F .text	000000d0 _puts_r
00014400 g     O .bss	00000100 alt_irq
00009a08 g     F .text	00000064 _lseek_r
0000e7ac g     F .text	00000058 altera_avalon_fifo_write_almostfull
000127cc g       *ABS*	00000000 __flash_rwdata_start
0000c2a8 g     F .text	00000094 .hidden __eqdf2
00014500 g       *ABS*	00000000 __alt_heap_start
0000a344 g     F .text	00000060 _kill_r
000002fc g     F .text	00000038 printf
00009d3c g     F .text	0000006c _wcrtomb_r
00009ee0 g     F .text	00000090 _signal_r
00007d84 g     F .text	0000005c __sseek
00004bb8 g     F .text	00000010 __sinit
00009bdc g     F .text	00000148 __swbuf_r
00009914 g     F .text	00000074 _setlocale_r
000049f8 g     F .text	00000078 __sfmoreglue
0000e098 g     F .text	00000024 __malloc_unlock
00006210 g     F .text	00000128 memmove
0000e528 g     F .text	00000098 altera_avalon_fifo_init
00004ba4 g     F .text	00000014 _cleanup
0000e85c g     F .text	00000058 altera_avalon_fifo_write_fifo
00006478 g     F .text	000000a4 _Balloc
0000c33c g     F .text	000000fc .hidden __gtdf2
00010020 g     F .text	00000024 altera_nios2_gen2_irq_init
000094f0 g     F .text	0000000c __errno
00000000 g     F .entry	0000000c __reset
00005614 g     F .text	00000008 __localeconv_l
0000e9f8 g     F .text	00000028 altera_avalon_fifo_read_backpressure
00000020 g       *ABS*	00000000 __flash_exceptions_start
0000985c g     F .text	00000060 _fstat_r
000143b0 g     O .bss	00000004 errno
00007cfc g     F .text	00000008 __seofread
000143bc g     O .bss	00000004 alt_argv
0001a794 g       *ABS*	00000000 _gp
0000dbb8 g     F .text	00000020 getpid
0000e6f4 g     F .text	00000060 altera_avalon_fifo_clear_event
000115b4 g     O .rwdata	00000180 alt_fd_list
00010044 g     F .text	00000090 alt_find_dev
00006110 g     F .text	00000100 memcpy
0000487c g     F .text	0000000c _cleanup_r
0000d7a8 g     F .text	000000b8 .hidden __floatsidf
0000fb5c g     F .text	0000007c alt_io_redirect
0000c438 g     F .text	000000f8 .hidden __ltdf2
00010578 g       *ABS*	00000000 __DTOR_END__
00000404 g     F .text	00000010 puts
00010294 g     F .text	00000074 alt_exception_cause_generated_bad_addr
0000746c g     F .text	000000a4 __ratio
00009174 g     F .text	0000001c __vfiprintf_internal
0000f05c g     F .text	00000220 altera_avalon_jtag_uart_read
000002cc g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0000afd0 g     F .text	00000064 .hidden __udivsi3
0000dc14 g     F .text	000000b0 isatty
00009f70 g     F .text	000000b0 _raise_r
00009310 g     F .text	00000064 __assert_func
00010704 g     O .rodata	000000c8 __mprec_tens
000143ac g     O .bss	00000004 __malloc_top_pad
0000a3a4 g     F .text	00000004 _getpid_r
0000561c g     F .text	0000000c _localeconv_r
000068f0 g     F .text	000000b0 __i2b
0000502c g     F .text	000004a8 __sfvwrite_r
0000a020 g     F .text	000000bc __sigtramp_r
00007c50 g     F .text	00000058 _sbrk_r
00009abc g     F .text	00000064 _read_r
000127b4 g     O .rwdata	00000004 alt_max_fd
000094fc g     F .text	000000f8 _fclose_r
000047f0 g     F .text	00000084 fflush
000143a8 g     O .bss	00000004 __malloc_max_sbrked_mem
0000b0b8 g     F .text	00000904 .hidden __adddf3
00007214 g     F .text	00000100 __b2d
0000a980 g     F .text	0000055c .hidden __umoddi3
0000df18 g     F .text	000000e0 lseek
00012794 g     O .rwdata	00000004 _global_impure_ptr
0000765c g     F .text	000005f4 _realloc_r
00014500 g       *ABS*	00000000 __bss_end
0000f9a0 g     F .text	000000e8 alt_iic_isr_register
0000fef4 g     F .text	0000012c alt_tick
0000a3a8 g     F .text	000005d8 .hidden __udivdi3
000097c0 g     F .text	00000024 _fputwc_r
000106dc g     O .rodata	00000028 __mprec_bigtens
00006694 g     F .text	00000138 __s2b
00009e6c g     F .text	00000018 abort
0000d860 g     F .text	00000090 .hidden __floatunsidf
00006f2c g     F .text	00000058 __mcmp
00004bd8 g     F .text	00000014 __fp_lock_all
0000f954 g     F .text	0000004c alt_ic_irq_enabled
0000fe50 g     F .text	000000a4 alt_alarm_stop
000143c4 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000c8 alt_irq_handler
0001158c g     O .rwdata	00000028 alt_dev_null
0000f604 g     F .text	00000020 alt_dcache_flush_all
000067cc g     F .text	00000074 __hi0bits
0000d728 g     F .text	00000080 .hidden __fixdfsi
0000e754 g     F .text	00000058 altera_avalon_fifo_write_ienable
000127cc g       *ABS*	00000000 __ram_rwdata_end
0000e664 g     F .text	0000002c altera_avalon_fifo_read_almostempty
000127ac g     O .rwdata	00000008 alt_dev_list
0000e364 g     F .text	00000104 write
00010bf4 g       *ABS*	00000000 __ram_rodata_end
0000dafc g     F .text	000000bc fstat
0000dd00 g     F .text	000000f0 kill
0000c438 g     F .text	000000f8 .hidden __ledf2
00006c64 g     F .text	00000140 __pow5mult
00007ef4 g     F .text	00001280 ___vfiprintf_internal_r
0000b034 g     F .text	0000005c .hidden __umodsi3
00014500 g       *ABS*	00000000 end
0000eb84 g     F .text	000000c0 altera_avalon_jtag_uart_init
000001c4 g     F .exceptions	00000060 alt_instruction_exception_entry
0000e690 g     F .text	0000003c altera_avalon_fifo_read_event
00010578 g       *ABS*	00000000 __CTOR_LIST__
00025800 g       *ABS*	00000000 __alt_stack_pointer
0000d8f0 g     F .text	00000050 .hidden __clzsi2
0000f27c g     F .text	00000228 altera_avalon_jtag_uart_write
00004bc8 g     F .text	00000004 __sfp_lock_acquire
0000e920 g     F .text	0000004c altera_avalon_fifo_read_fifo
00006014 g     F .text	000000fc memchr
000004ac g     F .text	000024b0 ___vfprintf_internal_r
00004d24 g     F .text	00000308 _free_r
00010940 g     O .rodata	00000180 _ctype_b
00009988 g     F .text	0000000c __locale_mb_cur_max
00010458 g     F .text	00000120 __call_exitprocs
0001279c g     O .rwdata	00000004 __malloc_sbrk_base
00000224 g     F .text	0000003c _start
000143c8 g     O .bss	00000004 _alt_tick_rate
00006da4 g     F .text	00000188 __lshift
000143cc g     O .bss	00000008 _alt_nticks
0000a190 g     F .text	00000098 signal
0000e0f8 g     F .text	00000108 read
0000e4d8 g     F .text	00000050 alt_sys_init
000103c8 g     F .text	00000090 __register_exitproc
000069a0 g     F .text	000002c4 __multiply
0000ef00 g     F .text	00000068 altera_avalon_jtag_uart_close
0000b090 g     F .text	00000028 .hidden __mulsi3
00010bf4 g       *ABS*	00000000 __ram_rwdata_start
00010578 g       *ABS*	00000000 __ram_rodata_start
000143d8 g     O .bss	00000028 __malloc_current_mallinfo
00007314 g     F .text	00000158 __d2b
0000ea20 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
000101dc g     F .text	000000b8 alt_get_fd
000092b8 g     F .text	00000058 _close_r
00010350 g     F .text	00000078 memcmp
0000eae0 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00014500 g       *ABS*	00000000 __alt_stack_base
0000eb30 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00002a3c g     F .text	0000014c __swsetup_r
0000e5c0 g     F .text	0000003c altera_avalon_fifo_read_status
0000b9bc g     F .text	000008ec .hidden __divdf3
00004a70 g     F .text	00000134 __sfp
00007580 g     F .text	0000007c __copybits
00011018 g     O .rwdata	00000408 __malloc_av_
00004bd4 g     F .text	00000004 __sinit_lock_release
0000c530 g     F .text	00000808 .hidden __muldf3
00007ca8 g     F .text	00000054 __sread
0000e9cc g     F .text	0000002c altera_avalon_fifo_read_other_info
000100d4 g     F .text	00000108 alt_find_file
0000f660 g     F .text	000000a8 alt_dev_llist_insert
0000e074 g     F .text	00000024 __malloc_lock
0000e270 g     F .text	000000b8 sbrk
00004790 g     F .text	00000060 _fflush_r
00009388 g     F .text	00000168 _calloc_r
000143a4 g       *ABS*	00000000 __bss_start
00006338 g     F .text	00000140 memset
00000260 g     F .text	0000006c main
000143c0 g     O .bss	00000004 alt_envp
000143a4 g     O .bss	00000004 __malloc_max_total_mem
0000ea80 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0000e6cc g     F .text	00000028 altera_avalon_fifo_read_level
00009d24 g     F .text	00000018 __swbuf
00007de0 g     F .text	00000008 __sclose
00025800 g       *ABS*	00000000 __alt_heap_limit
000095f4 g     F .text	00000010 fclose
00002da0 g     F .text	000017e8 _dtoa_r
00005860 g     F .text	000007b4 _malloc_r
00009e3c g     F .text	00000030 __ascii_wctomb
000127b8 g     O .rwdata	00000004 alt_errno
00009604 g     F .text	00000020 _fiprintf_r
0000a228 g     F .text	00000060 _init_signal
000054d4 g     F .text	00000098 _fwalk
00009a6c g     F .text	0000000c _mbtowc_r
0000aedc g     F .text	00000080 .hidden __divsi3
00004c00 g     F .text	00000124 _malloc_trim_r
00010578 g       *ABS*	00000000 __CTOR_END__
00009b20 g     F .text	000000b8 strcmp
00010578 g       *ABS*	00000000 __flash_rodata_start
00010578 g       *ABS*	00000000 __DTOR_LIST__
0000c2a8 g     F .text	00000094 .hidden __nedf2
0000e49c g     F .text	0000003c alt_irq_init
0000e200 g     F .text	00000070 alt_release_fd
00010ac0 g     O .rodata	00000100 .hidden __clz_tab
000143b4 g     O .bss	00000004 _PathLocale
00010308 g     F .text	00000014 atexit
00009254 g     F .text	00000064 _write_r
00009994 g     F .text	00000074 setlocale
00012798 g     O .rwdata	00000004 _impure_ptr
000143b8 g     O .bss	00000004 alt_argc
00004588 g     F .text	00000208 __sflush_r
0000f76c g     F .text	00000064 _do_dtors
00000020 g       .exceptions	00000000 alt_irq_entry
00009a78 g     F .text	00000044 __ascii_mbtowc
000071b4 g     F .text	00000060 __ulp
00004bec g     F .text	00000014 __fp_unlock_all
000127a4 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
00005628 g     F .text	0000000c localeconv
000057d4 g     F .text	0000008c __swhatbuf_r
0000e96c g     F .text	00000060 altera_avalon_fifo_write_other_info
0000f7f0 g     F .text	00000050 alt_ic_isr_register
000127cc g       *ABS*	00000000 _edata
00014500 g       *ABS*	00000000 _end
0000965c g     F .text	00000164 __fputwc
00000224 g       *ABS*	00000000 __ram_exceptions_end
0000ef68 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0000f8c8 g     F .text	0000008c alt_ic_irq_disable
00007d04 g     F .text	00000080 __swrite
000127a0 g     O .rwdata	00000004 __malloc_trim_threshold
0001031c g     F .text	00000034 exit
00009624 g     F .text	00000038 fiprintf
00009bd8 g     F .text	00000004 _vfiprintf_r
0000556c g     F .text	000000a8 _fwalk_reent
00006f84 g     F .text	00000230 __mdiff
0000af5c g     F .text	00000074 .hidden __modsi3
0000e5fc g     F .text	0000003c altera_avalon_fifo_read_ienable
00025800 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00004bcc g     F .text	00000004 __sfp_lock_release
0001083c g     O .rodata	00000101 _ctype_
0000d6d4 g     F .text	00000054 .hidden __unorddf2
0000da84 g     F .text	0000003c _exit
0000f4a4 g     F .text	00000160 alt_alarm_start
0000e638 g     F .text	0000002c altera_avalon_fifo_read_almostfull
00005634 g     F .text	000001a0 __smakebuf_r
00000414 g     F .text	00000098 strlen
00009e84 g     F .text	0000005c _init_signal_r
0000fcf0 g     F .text	00000160 open
0000e8b4 g     F .text	0000006c altera_avalon_read_fifo
0000c33c g     F .text	000000fc .hidden __gedf2
00009374 g     F .text	00000014 __assert
00007edc g     F .text	00000018 __sprint_r
0000f7d0 g     F .text	00000020 alt_icache_flush_all
000127c0 g     O .rwdata	00000004 alt_priority_mask
0000f840 g     F .text	00000088 alt_ic_irq_enable
0000295c g     F .text	0000001c __vfprintf_internal
00009e30 g     F .text	0000000c _wctomb_r
0000cd38 g     F .text	0000099c .hidden __subdf3
00006840 g     F .text	000000b0 __lo0bits
0000e804 g     F .text	00000058 altera_avalon_fifo_write_almostempty
000127c4 g     O .rwdata	00000008 alt_alarm_list
0000f708 g     F .text	00000064 _do_ctors
0000a288 g     F .text	000000bc __sigtramp
00009da8 g     F .text	00000088 wcrtomb
0000d97c g     F .text	000000dc close
00011420 g     O .rwdata	0000016c __global_locale
0000de58 g     F .text	00000084 alt_load
000097e4 g     F .text	00000078 fputwc
0000a0dc g     F .text	000000b4 raise
00004bd0 g     F .text	00000004 __sinit_lock_acquire
00006540 g     F .text	00000154 __multadd
0000651c g     F .text	00000024 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408914 	ori	at,at,548
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
  94:	e93fff04 	addi	r4,ea,-4
  98:	00001c40 	call	1c4 <alt_instruction_exception_entry>
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>
  a0:	ebffff04 	addi	r15,ea,-4
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffc15 	stw	r2,-16(fp)

  return active;
 118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0ffff17 	ldw	r3,-4(fp)
 130:	e0bffe17 	ldw	r2,-8(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001126 	beq	r2,zero,180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	e0bffd17 	ldw	r2,-12(fp)
 140:	100690fa 	slli	r3,r2,3
 144:	00800074 	movhi	r2,1
 148:	1885883a 	add	r2,r3,r2
 14c:	10d10017 	ldw	r3,17408(r2)
 150:	e0bffd17 	ldw	r2,-12(fp)
 154:	100890fa 	slli	r4,r2,3
 158:	00800074 	movhi	r2,1
 15c:	2085883a 	add	r2,r4,r2
 160:	10910117 	ldw	r2,17412(r2)
 164:	1009883a 	mov	r4,r2
 168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 16c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
 170:	0005313a 	rdctl	r2,ipending
 174:	e0bffb15 	stw	r2,-20(fp)
  return active;
 178:	e0bffb17 	ldw	r2,-20(fp)
 17c:	00000706 	br	19c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
 180:	e0bffe17 	ldw	r2,-8(fp)
 184:	1085883a 	add	r2,r2,r2
 188:	e0bffe15 	stw	r2,-8(fp)
      i++;
 18c:	e0bffd17 	ldw	r2,-12(fp)
 190:	10800044 	addi	r2,r2,1
 194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
 198:	003fe406 	br	12c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
 19c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 1a0:	e0bfff17 	ldw	r2,-4(fp)
 1a4:	103fde1e 	bne	r2,zero,120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1a8:	0001883a 	nop
}
 1ac:	0001883a 	nop
 1b0:	e037883a 	mov	sp,fp
 1b4:	dfc00117 	ldw	ra,4(sp)
 1b8:	df000017 	ldw	fp,0(sp)
 1bc:	dec00204 	addi	sp,sp,8
 1c0:	f800283a 	ret

000001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1c4:	defffb04 	addi	sp,sp,-20
 1c8:	dfc00415 	stw	ra,16(sp)
 1cc:	df000315 	stw	fp,12(sp)
 1d0:	df000304 	addi	fp,sp,12
 1d4:	e13ffd15 	stw	r4,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1d8:	00bfffc4 	movi	r2,-1
 1dc:	e0bfff15 	stw	r2,-4(fp)
  badaddr = 0;
 1e0:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1e4:	d0a71017 	ldw	r2,-25536(gp)
 1e8:	10000726 	beq	r2,zero,208 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1ec:	d0a71017 	ldw	r2,-25536(gp)
 1f0:	e0ffff17 	ldw	r3,-4(fp)
 1f4:	e1bffe17 	ldw	r6,-8(fp)
 1f8:	e17ffd17 	ldw	r5,-12(fp)
 1fc:	1809883a 	mov	r4,r3
 200:	103ee83a 	callr	r2
 204:	00000206 	br	210 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 208:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 20c:	0005883a 	mov	r2,zero
}
 210:	e037883a 	mov	sp,fp
 214:	dfc00117 	ldw	ra,4(sp)
 218:	df000017 	ldw	fp,0(sp)
 21c:	dec00204 	addi	sp,sp,8
 220:	f800283a 	ret

Disassembly of section .text:

00000224 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     224:	06c000b4 	movhi	sp,2
    ori sp, sp, %lo(__alt_stack_pointer)
     228:	ded60014 	ori	sp,sp,22528
    movhi gp, %hi(_gp)
     22c:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     230:	d6a9e514 	ori	gp,gp,42900
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     234:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     238:	1090e914 	ori	r2,r2,17316

    movhi r3, %hi(__bss_end)
     23c:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     240:	18d14014 	ori	r3,r3,17664

    beq r2, r3, 1f
     244:	10c00326 	beq	r2,r3,254 <_start+0x30>

0:
    stw zero, (r2)
     248:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     24c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     250:	10fffd36 	bltu	r2,r3,248 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     254:	000de580 	call	de58 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     258:	000dff80 	call	dff8 <alt_main>

0000025c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     25c:	003fff06 	br	25c <alt_after_alt_main>

00000260 <main>:
#include <system.h>
#include <altera_avalon_fifo_regs.h>
#include <altera_avalon_fifo_util.h>

int main()
{
     260:	defffd04 	addi	sp,sp,-12
     264:	dfc00215 	stw	ra,8(sp)
     268:	df000115 	stw	fp,4(sp)
     26c:	df000104 	addi	fp,sp,4
	printf("Hello from Nios II!\n");
     270:	01000074 	movhi	r4,1
     274:	21015e04 	addi	r4,r4,1400
     278:	00004040 	call	404 <puts>
	{

		  int read_data;

		 do {
			 read_data= altera_avalon_fifo_read_fifo(NIOSE_INPUT_OUT_BASE,NIOSE_INPUT_IN_CSR_BASE );
     27c:	01400134 	movhi	r5,4
     280:	29440004 	addi	r5,r5,4096
     284:	01000134 	movhi	r4,4
     288:	21041204 	addi	r4,r4,4168
     28c:	000e9200 	call	e920 <altera_avalon_fifo_read_fifo>
     290:	e0bfff15 	stw	r2,-4(fp)
		 } while(read_data==0);
     294:	e0bfff17 	ldw	r2,-4(fp)
     298:	103ff826 	beq	r2,zero,27c <main+0x1c>

		 printf("read data: %d\n",read_data);
     29c:	e17fff17 	ldw	r5,-4(fp)
     2a0:	01000074 	movhi	r4,1
     2a4:	21016304 	addi	r4,r4,1420
     2a8:	00002fc0 	call	2fc <printf>
		 altera_avalon_fifo_write_fifo(NIOS_OUTPUT_IN_BASE ,NIOS_OUTPUT_IN_CSR_BASE,read_data);
     2ac:	e0bfff17 	ldw	r2,-4(fp)
     2b0:	100d883a 	mov	r6,r2
     2b4:	01400134 	movhi	r5,4
     2b8:	29440804 	addi	r5,r5,4128
     2bc:	01000134 	movhi	r4,4
     2c0:	21041404 	addi	r4,r4,4176
     2c4:	000e85c0 	call	e85c <altera_avalon_fifo_write_fifo>
	{
     2c8:	003fec06 	br	27c <main+0x1c>

000002cc <_printf_r>:
     2cc:	defffd04 	addi	sp,sp,-12
     2d0:	2805883a 	mov	r2,r5
     2d4:	dfc00015 	stw	ra,0(sp)
     2d8:	d9800115 	stw	r6,4(sp)
     2dc:	d9c00215 	stw	r7,8(sp)
     2e0:	21400217 	ldw	r5,8(r4)
     2e4:	d9c00104 	addi	r7,sp,4
     2e8:	100d883a 	mov	r6,r2
     2ec:	00004ac0 	call	4ac <___vfprintf_internal_r>
     2f0:	dfc00017 	ldw	ra,0(sp)
     2f4:	dec00304 	addi	sp,sp,12
     2f8:	f800283a 	ret

000002fc <printf>:
     2fc:	defffc04 	addi	sp,sp,-16
     300:	dfc00015 	stw	ra,0(sp)
     304:	d9400115 	stw	r5,4(sp)
     308:	d9800215 	stw	r6,8(sp)
     30c:	d9c00315 	stw	r7,12(sp)
     310:	00800074 	movhi	r2,1
     314:	1089e617 	ldw	r2,10136(r2)
     318:	200b883a 	mov	r5,r4
     31c:	d9800104 	addi	r6,sp,4
     320:	11000217 	ldw	r4,8(r2)
     324:	000295c0 	call	295c <__vfprintf_internal>
     328:	dfc00017 	ldw	ra,0(sp)
     32c:	dec00404 	addi	sp,sp,16
     330:	f800283a 	ret

00000334 <_puts_r>:
     334:	defff504 	addi	sp,sp,-44
     338:	dc000815 	stw	r16,32(sp)
     33c:	2021883a 	mov	r16,r4
     340:	2809883a 	mov	r4,r5
     344:	dc400915 	stw	r17,36(sp)
     348:	dfc00a15 	stw	ra,40(sp)
     34c:	2823883a 	mov	r17,r5
     350:	00004140 	call	414 <strlen>
     354:	11000044 	addi	r4,r2,1
     358:	d8800515 	stw	r2,20(sp)
     35c:	00800044 	movi	r2,1
     360:	00c00074 	movhi	r3,1
     364:	d8800715 	stw	r2,28(sp)
     368:	d8800404 	addi	r2,sp,16
     36c:	18c16704 	addi	r3,r3,1436
     370:	d8800115 	stw	r2,4(sp)
     374:	00800084 	movi	r2,2
     378:	dc400415 	stw	r17,16(sp)
     37c:	d8c00615 	stw	r3,24(sp)
     380:	d9000315 	stw	r4,12(sp)
     384:	d8800215 	stw	r2,8(sp)
     388:	81400217 	ldw	r5,8(r16)
     38c:	80000226 	beq	r16,zero,398 <_puts_r+0x64>
     390:	80800e17 	ldw	r2,56(r16)
     394:	10001426 	beq	r2,zero,3e8 <_puts_r+0xb4>
     398:	2880030b 	ldhu	r2,12(r5)
     39c:	10c8000c 	andi	r3,r2,8192
     3a0:	1800061e 	bne	r3,zero,3bc <_puts_r+0x88>
     3a4:	28c01917 	ldw	r3,100(r5)
     3a8:	0137ffc4 	movi	r4,-8193
     3ac:	10880014 	ori	r2,r2,8192
     3b0:	1906703a 	and	r3,r3,r4
     3b4:	2880030d 	sth	r2,12(r5)
     3b8:	28c01915 	stw	r3,100(r5)
     3bc:	d9800104 	addi	r6,sp,4
     3c0:	8009883a 	mov	r4,r16
     3c4:	000502c0 	call	502c <__sfvwrite_r>
     3c8:	1007883a 	mov	r3,r2
     3cc:	00800284 	movi	r2,10
     3d0:	18000a1e 	bne	r3,zero,3fc <_puts_r+0xc8>
     3d4:	dfc00a17 	ldw	ra,40(sp)
     3d8:	dc400917 	ldw	r17,36(sp)
     3dc:	dc000817 	ldw	r16,32(sp)
     3e0:	dec00b04 	addi	sp,sp,44
     3e4:	f800283a 	ret
     3e8:	8009883a 	mov	r4,r16
     3ec:	d9400015 	stw	r5,0(sp)
     3f0:	0004bb80 	call	4bb8 <__sinit>
     3f4:	d9400017 	ldw	r5,0(sp)
     3f8:	003fe706 	br	398 <_puts_r+0x64>
     3fc:	00bfffc4 	movi	r2,-1
     400:	003ff406 	br	3d4 <_puts_r+0xa0>

00000404 <puts>:
     404:	00800074 	movhi	r2,1
     408:	200b883a 	mov	r5,r4
     40c:	1109e617 	ldw	r4,10136(r2)
     410:	00003341 	jmpi	334 <_puts_r>

00000414 <strlen>:
     414:	208000cc 	andi	r2,r4,3
     418:	10000926 	beq	r2,zero,440 <strlen+0x2c>
     41c:	2005883a 	mov	r2,r4
     420:	00000306 	br	430 <strlen+0x1c>
     424:	10800044 	addi	r2,r2,1
     428:	10c000cc 	andi	r3,r2,3
     42c:	18000526 	beq	r3,zero,444 <strlen+0x30>
     430:	10c00007 	ldb	r3,0(r2)
     434:	183ffb1e 	bne	r3,zero,424 <strlen+0x10>
     438:	1105c83a 	sub	r2,r2,r4
     43c:	f800283a 	ret
     440:	2005883a 	mov	r2,r4
     444:	11400017 	ldw	r5,0(r2)
     448:	01ffbff4 	movhi	r7,65279
     44c:	39ffbfc4 	addi	r7,r7,-257
     450:	29c7883a 	add	r3,r5,r7
     454:	01a02074 	movhi	r6,32897
     458:	014a303a 	nor	r5,zero,r5
     45c:	1946703a 	and	r3,r3,r5
     460:	31a02004 	addi	r6,r6,-32640
     464:	1986703a 	and	r3,r3,r6
     468:	1800071e 	bne	r3,zero,488 <strlen+0x74>
     46c:	11400117 	ldw	r5,4(r2)
     470:	10800104 	addi	r2,r2,4
     474:	29c7883a 	add	r3,r5,r7
     478:	014a303a 	nor	r5,zero,r5
     47c:	1946703a 	and	r3,r3,r5
     480:	1986703a 	and	r3,r3,r6
     484:	183ff926 	beq	r3,zero,46c <strlen+0x58>
     488:	10c00007 	ldb	r3,0(r2)
     48c:	183fea26 	beq	r3,zero,438 <strlen+0x24>
     490:	10c00047 	ldb	r3,1(r2)
     494:	10800044 	addi	r2,r2,1
     498:	183fe726 	beq	r3,zero,438 <strlen+0x24>
     49c:	10c00047 	ldb	r3,1(r2)
     4a0:	10800044 	addi	r2,r2,1
     4a4:	183ffa1e 	bne	r3,zero,490 <strlen+0x7c>
     4a8:	003fe306 	br	438 <strlen+0x24>

000004ac <___vfprintf_internal_r>:
     4ac:	deffbc04 	addi	sp,sp,-272
     4b0:	dfc04315 	stw	ra,268(sp)
     4b4:	dc803c15 	stw	r18,240(sp)
     4b8:	dc003a15 	stw	r16,232(sp)
     4bc:	d9000515 	stw	r4,20(sp)
     4c0:	2021883a 	mov	r16,r4
     4c4:	d9400415 	stw	r5,16(sp)
     4c8:	3025883a 	mov	r18,r6
     4cc:	d9c00715 	stw	r7,28(sp)
     4d0:	df004215 	stw	fp,264(sp)
     4d4:	ddc04115 	stw	r23,260(sp)
     4d8:	dd804015 	stw	r22,256(sp)
     4dc:	dd403f15 	stw	r21,252(sp)
     4e0:	dd003e15 	stw	r20,248(sp)
     4e4:	dcc03d15 	stw	r19,244(sp)
     4e8:	dc403b15 	stw	r17,236(sp)
     4ec:	000561c0 	call	561c <_localeconv_r>
     4f0:	10800017 	ldw	r2,0(r2)
     4f4:	1009883a 	mov	r4,r2
     4f8:	d8800d15 	stw	r2,52(sp)
     4fc:	00004140 	call	414 <strlen>
     500:	d8800c15 	stw	r2,48(sp)
     504:	80000226 	beq	r16,zero,510 <___vfprintf_internal_r+0x64>
     508:	80800e17 	ldw	r2,56(r16)
     50c:	10023726 	beq	r2,zero,dec <___vfprintf_internal_r+0x940>
     510:	d9400417 	ldw	r5,16(sp)
     514:	2880030b 	ldhu	r2,12(r5)
     518:	10c8000c 	andi	r3,r2,8192
     51c:	1800071e 	bne	r3,zero,53c <___vfprintf_internal_r+0x90>
     520:	28c01917 	ldw	r3,100(r5)
     524:	11080014 	ori	r4,r2,8192
     528:	00b7ffc4 	movi	r2,-8193
     52c:	1886703a 	and	r3,r3,r2
     530:	2900030d 	sth	r4,12(r5)
     534:	2005883a 	mov	r2,r4
     538:	28c01915 	stw	r3,100(r5)
     53c:	10c0020c 	andi	r3,r2,8
     540:	1800f726 	beq	r3,zero,920 <___vfprintf_internal_r+0x474>
     544:	d8c00417 	ldw	r3,16(sp)
     548:	18c00417 	ldw	r3,16(r3)
     54c:	1800f426 	beq	r3,zero,920 <___vfprintf_internal_r+0x474>
     550:	1080068c 	andi	r2,r2,26
     554:	10800298 	cmpnei	r2,r2,10
     558:	1000fa26 	beq	r2,zero,944 <___vfprintf_internal_r+0x498>
     55c:	dc402a04 	addi	r17,sp,168
     560:	04c00074 	movhi	r19,1
     564:	dc401d15 	stw	r17,116(sp)
     568:	d8001f15 	stw	zero,124(sp)
     56c:	d8001e15 	stw	zero,120(sp)
     570:	d8000915 	stw	zero,36(sp)
     574:	d8000a15 	stw	zero,40(sp)
     578:	d8000b15 	stw	zero,44(sp)
     57c:	d8000e15 	stw	zero,56(sp)
     580:	d8001215 	stw	zero,72(sp)
     584:	d8000615 	stw	zero,24(sp)
     588:	9cc17904 	addi	r19,r19,1508
     58c:	8821883a 	mov	r16,r17
     590:	9029883a 	mov	r20,r18
     594:	a0800007 	ldb	r2,0(r20)
     598:	1000ce26 	beq	r2,zero,8d4 <___vfprintf_internal_r+0x428>
     59c:	a025883a 	mov	r18,r20
     5a0:	00000306 	br	5b0 <___vfprintf_internal_r+0x104>
     5a4:	90800047 	ldb	r2,1(r18)
     5a8:	94800044 	addi	r18,r18,1
     5ac:	10015226 	beq	r2,zero,af8 <___vfprintf_internal_r+0x64c>
     5b0:	10800958 	cmpnei	r2,r2,37
     5b4:	103ffb1e 	bne	r2,zero,5a4 <___vfprintf_internal_r+0xf8>
     5b8:	952fc83a 	sub	r23,r18,r20
     5bc:	9501501e 	bne	r18,r20,b00 <___vfprintf_internal_r+0x654>
     5c0:	90800003 	ldbu	r2,0(r18)
     5c4:	10803fcc 	andi	r2,r2,255
     5c8:	1080201c 	xori	r2,r2,128
     5cc:	10bfe004 	addi	r2,r2,-128
     5d0:	1000c026 	beq	r2,zero,8d4 <___vfprintf_internal_r+0x428>
     5d4:	92c00047 	ldb	r11,1(r18)
     5d8:	95000044 	addi	r20,r18,1
     5dc:	d8001645 	stb	zero,89(sp)
     5e0:	04bfffc4 	movi	r18,-1
     5e4:	0015883a 	mov	r10,zero
     5e8:	0019883a 	mov	r12,zero
     5ec:	a5000044 	addi	r20,r20,1
     5f0:	58bff804 	addi	r2,r11,-32
     5f4:	10c01668 	cmpgeui	r3,r2,89
     5f8:	18006c1e 	bne	r3,zero,7ac <___vfprintf_internal_r+0x300>
     5fc:	100490ba 	slli	r2,r2,2
     600:	00c00034 	movhi	r3,0
     604:	10c7883a 	add	r3,r2,r3
     608:	18818417 	ldw	r2,1552(r3)
     60c:	1000683a 	jmp	r2
     610:	00000ec4 	movi	zero,59
     614:	000007ac 	andhi	zero,zero,30
     618:	000007ac 	andhi	zero,zero,30
     61c:	00000eb8 	rdprs	zero,zero,58
     620:	000007ac 	andhi	zero,zero,30
     624:	000007ac 	andhi	zero,zero,30
     628:	000007ac 	andhi	zero,zero,30
     62c:	000007ac 	andhi	zero,zero,30
     630:	000007ac 	andhi	zero,zero,30
     634:	000007ac 	andhi	zero,zero,30
     638:	00000e2c 	andhi	zero,zero,56
     63c:	00000ea8 	cmpgeui	zero,zero,58
     640:	000007ac 	andhi	zero,zero,30
     644:	00000e44 	movi	zero,57
     648:	00000e50 	cmplti	zero,zero,57
     64c:	000007ac 	andhi	zero,zero,30
     650:	00000e9c 	xori	zero,zero,58
     654:	00000774 	movhi	zero,29
     658:	00000774 	movhi	zero,29
     65c:	00000774 	movhi	zero,29
     660:	00000774 	movhi	zero,29
     664:	00000774 	movhi	zero,29
     668:	00000774 	movhi	zero,29
     66c:	00000774 	movhi	zero,29
     670:	00000774 	movhi	zero,29
     674:	00000774 	movhi	zero,29
     678:	000007ac 	andhi	zero,zero,30
     67c:	000007ac 	andhi	zero,zero,30
     680:	000007ac 	andhi	zero,zero,30
     684:	000007ac 	andhi	zero,zero,30
     688:	000007ac 	andhi	zero,zero,30
     68c:	000007ac 	andhi	zero,zero,30
     690:	000007ac 	andhi	zero,zero,30
     694:	000007ac 	andhi	zero,zero,30
     698:	000007ac 	andhi	zero,zero,30
     69c:	000007ac 	andhi	zero,zero,30
     6a0:	00000990 	cmplti	zero,zero,38
     6a4:	00000c4c 	andi	zero,zero,49
     6a8:	000007ac 	andhi	zero,zero,30
     6ac:	00000c4c 	andi	zero,zero,49
     6b0:	000007ac 	andhi	zero,zero,30
     6b4:	000007ac 	andhi	zero,zero,30
     6b8:	000007ac 	andhi	zero,zero,30
     6bc:	000007ac 	andhi	zero,zero,30
     6c0:	00000f10 	cmplti	zero,zero,60
     6c4:	000007ac 	andhi	zero,zero,30
     6c8:	000007ac 	andhi	zero,zero,30
     6cc:	000009f8 	rdprs	zero,zero,39
     6d0:	000007ac 	andhi	zero,zero,30
     6d4:	000007ac 	andhi	zero,zero,30
     6d8:	000007ac 	andhi	zero,zero,30
     6dc:	000007ac 	andhi	zero,zero,30
     6e0:	000007ac 	andhi	zero,zero,30
     6e4:	00000a20 	cmpeqi	zero,zero,40
     6e8:	000007ac 	andhi	zero,zero,30
     6ec:	000007ac 	andhi	zero,zero,30
     6f0:	00001ab0 	cmpltui	zero,zero,106
     6f4:	000007ac 	andhi	zero,zero,30
     6f8:	000007ac 	andhi	zero,zero,30
     6fc:	000007ac 	andhi	zero,zero,30
     700:	000007ac 	andhi	zero,zero,30
     704:	000007ac 	andhi	zero,zero,30
     708:	000007ac 	andhi	zero,zero,30
     70c:	000007ac 	andhi	zero,zero,30
     710:	000007ac 	andhi	zero,zero,30
     714:	000007ac 	andhi	zero,zero,30
     718:	000007ac 	andhi	zero,zero,30
     71c:	00000f28 	cmpgeui	zero,zero,60
     720:	00000994 	movui	zero,38
     724:	00000c4c 	andi	zero,zero,49
     728:	00000c4c 	andi	zero,zero,49
     72c:	00000c4c 	andi	zero,zero,49
     730:	00000f1c 	xori	zero,zero,60
     734:	00000994 	movui	zero,38
     738:	000007ac 	andhi	zero,zero,30
     73c:	000007ac 	andhi	zero,zero,30
     740:	00000ee8 	cmpgeui	zero,zero,59
     744:	000007ac 	andhi	zero,zero,30
     748:	00000fec 	andhi	zero,zero,63
     74c:	000009fc 	xorhi	zero,zero,39
     750:	00000fb4 	movhi	zero,62
     754:	00000fa8 	cmpgeui	zero,zero,62
     758:	000007ac 	andhi	zero,zero,30
     75c:	00000f50 	cmplti	zero,zero,61
     760:	000007ac 	andhi	zero,zero,30
     764:	00000a24 	muli	zero,zero,40
     768:	000007ac 	andhi	zero,zero,30
     76c:	000007ac 	andhi	zero,zero,30
     770:	00001b20 	cmpeqi	zero,zero,108
     774:	0015883a 	mov	r10,zero
     778:	58fff404 	addi	r3,r11,-48
     77c:	500490ba 	slli	r2,r10,2
     780:	a2c00007 	ldb	r11,0(r20)
     784:	a5000044 	addi	r20,r20,1
     788:	1295883a 	add	r10,r2,r10
     78c:	5295883a 	add	r10,r10,r10
     790:	1a95883a 	add	r10,r3,r10
     794:	58fff404 	addi	r3,r11,-48
     798:	188002b0 	cmpltui	r2,r3,10
     79c:	103ff71e 	bne	r2,zero,77c <___vfprintf_internal_r+0x2d0>
     7a0:	58bff804 	addi	r2,r11,-32
     7a4:	10c01668 	cmpgeui	r3,r2,89
     7a8:	183f9426 	beq	r3,zero,5fc <___vfprintf_internal_r+0x150>
     7ac:	58004926 	beq	r11,zero,8d4 <___vfprintf_internal_r+0x428>
     7b0:	dac02005 	stb	r11,128(sp)
     7b4:	d8001645 	stb	zero,89(sp)
     7b8:	03400044 	movi	r13,1
     7bc:	07000044 	movi	fp,1
     7c0:	dd402004 	addi	r21,sp,128
     7c4:	6007883a 	mov	r3,r12
     7c8:	0025883a 	mov	r18,zero
     7cc:	d8000815 	stw	zero,32(sp)
     7d0:	1b80008c 	andi	r14,r3,2
     7d4:	70000126 	beq	r14,zero,7dc <___vfprintf_internal_r+0x330>
     7d8:	6b400084 	addi	r13,r13,2
     7dc:	1b00210c 	andi	r12,r3,132
     7e0:	6000021e 	bne	r12,zero,7ec <___vfprintf_internal_r+0x340>
     7e4:	536dc83a 	sub	r22,r10,r13
     7e8:	05833416 	blt	zero,r22,14bc <___vfprintf_internal_r+0x1010>
     7ec:	d8801647 	ldb	r2,89(sp)
     7f0:	dd801f17 	ldw	r22,124(sp)
     7f4:	10000c26 	beq	r2,zero,828 <___vfprintf_internal_r+0x37c>
     7f8:	d8801e17 	ldw	r2,120(sp)
     7fc:	d9001644 	addi	r4,sp,89
     800:	b5800044 	addi	r22,r22,1
     804:	10800044 	addi	r2,r2,1
     808:	81000015 	stw	r4,0(r16)
     80c:	01000044 	movi	r4,1
     810:	d8801e15 	stw	r2,120(sp)
     814:	81000115 	stw	r4,4(r16)
     818:	dd801f15 	stw	r22,124(sp)
     81c:	10800208 	cmpgei	r2,r2,8
     820:	1003881e 	bne	r2,zero,1644 <___vfprintf_internal_r+0x1198>
     824:	84000204 	addi	r16,r16,8
     828:	70000c26 	beq	r14,zero,85c <___vfprintf_internal_r+0x3b0>
     82c:	d8801e17 	ldw	r2,120(sp)
     830:	d9001684 	addi	r4,sp,90
     834:	b5800084 	addi	r22,r22,2
     838:	10800044 	addi	r2,r2,1
     83c:	81000015 	stw	r4,0(r16)
     840:	01000084 	movi	r4,2
     844:	d8801e15 	stw	r2,120(sp)
     848:	81000115 	stw	r4,4(r16)
     84c:	dd801f15 	stw	r22,124(sp)
     850:	10800208 	cmpgei	r2,r2,8
     854:	10038f1e 	bne	r2,zero,1694 <___vfprintf_internal_r+0x11e8>
     858:	84000204 	addi	r16,r16,8
     85c:	63002018 	cmpnei	r12,r12,128
     860:	60024326 	beq	r12,zero,1170 <___vfprintf_internal_r+0xcc4>
     864:	9725c83a 	sub	r18,r18,fp
     868:	04828316 	blt	zero,r18,1278 <___vfprintf_internal_r+0xdcc>
     86c:	1880400c 	andi	r2,r3,256
     870:	1001ea1e 	bne	r2,zero,101c <___vfprintf_internal_r+0xb70>
     874:	d8801e17 	ldw	r2,120(sp)
     878:	e589883a 	add	r4,fp,r22
     87c:	85400015 	stw	r21,0(r16)
     880:	10800044 	addi	r2,r2,1
     884:	d8801e15 	stw	r2,120(sp)
     888:	87000115 	stw	fp,4(r16)
     88c:	d9001f15 	stw	r4,124(sp)
     890:	10800208 	cmpgei	r2,r2,8
     894:	10035d1e 	bne	r2,zero,160c <___vfprintf_internal_r+0x1160>
     898:	84000204 	addi	r16,r16,8
     89c:	18c0010c 	andi	r3,r3,4
     8a0:	18000226 	beq	r3,zero,8ac <___vfprintf_internal_r+0x400>
     8a4:	5365c83a 	sub	r18,r10,r13
     8a8:	0480ac16 	blt	zero,r18,b5c <___vfprintf_internal_r+0x6b0>
     8ac:	5340010e 	bge	r10,r13,8b4 <___vfprintf_internal_r+0x408>
     8b0:	6815883a 	mov	r10,r13
     8b4:	d8800617 	ldw	r2,24(sp)
     8b8:	1285883a 	add	r2,r2,r10
     8bc:	d8800615 	stw	r2,24(sp)
     8c0:	2002bb1e 	bne	r4,zero,13b0 <___vfprintf_internal_r+0xf04>
     8c4:	a0800007 	ldb	r2,0(r20)
     8c8:	d8001e15 	stw	zero,120(sp)
     8cc:	8821883a 	mov	r16,r17
     8d0:	103f321e 	bne	r2,zero,59c <___vfprintf_internal_r+0xf0>
     8d4:	d8801f17 	ldw	r2,124(sp)
     8d8:	10065e1e 	bne	r2,zero,2254 <___vfprintf_internal_r+0x1da8>
     8dc:	d8800417 	ldw	r2,16(sp)
     8e0:	1080030b 	ldhu	r2,12(r2)
     8e4:	1080100c 	andi	r2,r2,64
     8e8:	1007931e 	bne	r2,zero,2738 <___vfprintf_internal_r+0x228c>
     8ec:	d8800617 	ldw	r2,24(sp)
     8f0:	dfc04317 	ldw	ra,268(sp)
     8f4:	df004217 	ldw	fp,264(sp)
     8f8:	ddc04117 	ldw	r23,260(sp)
     8fc:	dd804017 	ldw	r22,256(sp)
     900:	dd403f17 	ldw	r21,252(sp)
     904:	dd003e17 	ldw	r20,248(sp)
     908:	dcc03d17 	ldw	r19,244(sp)
     90c:	dc803c17 	ldw	r18,240(sp)
     910:	dc403b17 	ldw	r17,236(sp)
     914:	dc003a17 	ldw	r16,232(sp)
     918:	dec04404 	addi	sp,sp,272
     91c:	f800283a 	ret
     920:	d9400417 	ldw	r5,16(sp)
     924:	d9000517 	ldw	r4,20(sp)
     928:	0002a3c0 	call	2a3c <__swsetup_r>
     92c:	1007821e 	bne	r2,zero,2738 <___vfprintf_internal_r+0x228c>
     930:	d8800417 	ldw	r2,16(sp)
     934:	1080030b 	ldhu	r2,12(r2)
     938:	1080068c 	andi	r2,r2,26
     93c:	10800298 	cmpnei	r2,r2,10
     940:	103f061e 	bne	r2,zero,55c <___vfprintf_internal_r+0xb0>
     944:	d8800417 	ldw	r2,16(sp)
     948:	1080038f 	ldh	r2,14(r2)
     94c:	103f0316 	blt	r2,zero,55c <___vfprintf_internal_r+0xb0>
     950:	d9c00717 	ldw	r7,28(sp)
     954:	d9400417 	ldw	r5,16(sp)
     958:	d9000517 	ldw	r4,20(sp)
     95c:	900d883a 	mov	r6,r18
     960:	dfc04317 	ldw	ra,268(sp)
     964:	df004217 	ldw	fp,264(sp)
     968:	ddc04117 	ldw	r23,260(sp)
     96c:	dd804017 	ldw	r22,256(sp)
     970:	dd403f17 	ldw	r21,252(sp)
     974:	dd003e17 	ldw	r20,248(sp)
     978:	dcc03d17 	ldw	r19,244(sp)
     97c:	dc803c17 	ldw	r18,240(sp)
     980:	dc403b17 	ldw	r17,236(sp)
     984:	dc003a17 	ldw	r16,232(sp)
     988:	dec04404 	addi	sp,sp,272
     98c:	00029781 	jmpi	2978 <__sbprintf>
     990:	63000414 	ori	r12,r12,16
     994:	6080080c 	andi	r2,r12,32
     998:	1000e726 	beq	r2,zero,d38 <___vfprintf_internal_r+0x88c>
     99c:	d8c00717 	ldw	r3,28(sp)
     9a0:	18800117 	ldw	r2,4(r3)
     9a4:	1d800017 	ldw	r22,0(r3)
     9a8:	18c00204 	addi	r3,r3,8
     9ac:	d8c00715 	stw	r3,28(sp)
     9b0:	1039883a 	mov	fp,r2
     9b4:	1000ee16 	blt	r2,zero,d70 <___vfprintf_internal_r+0x8c4>
     9b8:	90bfffd8 	cmpnei	r2,r18,-1
     9bc:	ddc01643 	ldbu	r23,89(sp)
     9c0:	10011126 	beq	r2,zero,e08 <___vfprintf_internal_r+0x95c>
     9c4:	00ffdfc4 	movi	r3,-129
     9c8:	b704b03a 	or	r2,r22,fp
     9cc:	60c6703a 	and	r3,r12,r3
     9d0:	10010c1e 	bne	r2,zero,e04 <___vfprintf_internal_r+0x958>
     9d4:	00800044 	movi	r2,1
     9d8:	90025e1e 	bne	r18,zero,1354 <___vfprintf_internal_r+0xea8>
     9dc:	1003ba1e 	bne	r2,zero,18c8 <___vfprintf_internal_r+0x141c>
     9e0:	6700004c 	andi	fp,r12,1
     9e4:	e0040626 	beq	fp,zero,1a00 <___vfprintf_internal_r+0x1554>
     9e8:	00800c04 	movi	r2,48
     9ec:	d88029c5 	stb	r2,167(sp)
     9f0:	dd4029c4 	addi	r21,sp,167
     9f4:	00003606 	br	ad0 <___vfprintf_internal_r+0x624>
     9f8:	63000414 	ori	r12,r12,16
     9fc:	6080080c 	andi	r2,r12,32
     a00:	1000ee26 	beq	r2,zero,dbc <___vfprintf_internal_r+0x910>
     a04:	d8c00717 	ldw	r3,28(sp)
     a08:	0005883a 	mov	r2,zero
     a0c:	1d800017 	ldw	r22,0(r3)
     a10:	1f000117 	ldw	fp,4(r3)
     a14:	18c00204 	addi	r3,r3,8
     a18:	d8c00715 	stw	r3,28(sp)
     a1c:	00000906 	br	a44 <___vfprintf_internal_r+0x598>
     a20:	63000414 	ori	r12,r12,16
     a24:	6080080c 	andi	r2,r12,32
     a28:	1000d826 	beq	r2,zero,d8c <___vfprintf_internal_r+0x8e0>
     a2c:	d8c00717 	ldw	r3,28(sp)
     a30:	00800044 	movi	r2,1
     a34:	1d800017 	ldw	r22,0(r3)
     a38:	1f000117 	ldw	fp,4(r3)
     a3c:	18c00204 	addi	r3,r3,8
     a40:	d8c00715 	stw	r3,28(sp)
     a44:	002f883a 	mov	r23,zero
     a48:	ddc01645 	stb	r23,89(sp)
     a4c:	90ffffe0 	cmpeqi	r3,r18,-1
     a50:	1800051e 	bne	r3,zero,a68 <___vfprintf_internal_r+0x5bc>
     a54:	00ffdfc4 	movi	r3,-129
     a58:	b708b03a 	or	r4,r22,fp
     a5c:	60c6703a 	and	r3,r12,r3
     a60:	203fdd26 	beq	r4,zero,9d8 <___vfprintf_internal_r+0x52c>
     a64:	1819883a 	mov	r12,r3
     a68:	10c00060 	cmpeqi	r3,r2,1
     a6c:	1800e61e 	bne	r3,zero,e08 <___vfprintf_internal_r+0x95c>
     a70:	108000a0 	cmpeqi	r2,r2,2
     a74:	10023e1e 	bne	r2,zero,1370 <___vfprintf_internal_r+0xec4>
     a78:	882b883a 	mov	r21,r17
     a7c:	b006d0fa 	srli	r3,r22,3
     a80:	e00a977a 	slli	r5,fp,29
     a84:	e038d0fa 	srli	fp,fp,3
     a88:	b58001cc 	andi	r22,r22,7
     a8c:	b0800c04 	addi	r2,r22,48
     a90:	28ecb03a 	or	r22,r5,r3
     a94:	a8bfffc5 	stb	r2,-1(r21)
     a98:	b706b03a 	or	r3,r22,fp
     a9c:	a809883a 	mov	r4,r21
     aa0:	ad7fffc4 	addi	r21,r21,-1
     aa4:	183ff51e 	bne	r3,zero,a7c <___vfprintf_internal_r+0x5d0>
     aa8:	60c0004c 	andi	r3,r12,1
     aac:	18023d26 	beq	r3,zero,13a4 <___vfprintf_internal_r+0xef8>
     ab0:	10800c18 	cmpnei	r2,r2,48
     ab4:	10023b26 	beq	r2,zero,13a4 <___vfprintf_internal_r+0xef8>
     ab8:	213fff84 	addi	r4,r4,-2
     abc:	00800c04 	movi	r2,48
     ac0:	a8bfffc5 	stb	r2,-1(r21)
     ac4:	8939c83a 	sub	fp,r17,r4
     ac8:	6007883a 	mov	r3,r12
     acc:	202b883a 	mov	r21,r4
     ad0:	901b883a 	mov	r13,r18
     ad4:	9700010e 	bge	r18,fp,adc <___vfprintf_internal_r+0x630>
     ad8:	e01b883a 	mov	r13,fp
     adc:	d8000815 	stw	zero,32(sp)
     ae0:	bdc03fcc 	andi	r23,r23,255
     ae4:	bdc0201c 	xori	r23,r23,128
     ae8:	bdffe004 	addi	r23,r23,-128
     aec:	b83f3826 	beq	r23,zero,7d0 <___vfprintf_internal_r+0x324>
     af0:	6b400044 	addi	r13,r13,1
     af4:	003f3606 	br	7d0 <___vfprintf_internal_r+0x324>
     af8:	952fc83a 	sub	r23,r18,r20
     afc:	953f7526 	beq	r18,r20,8d4 <___vfprintf_internal_r+0x428>
     b00:	dd801f17 	ldw	r22,124(sp)
     b04:	d8801e17 	ldw	r2,120(sp)
     b08:	85000015 	stw	r20,0(r16)
     b0c:	b5ed883a 	add	r22,r22,r23
     b10:	10800044 	addi	r2,r2,1
     b14:	d8801e15 	stw	r2,120(sp)
     b18:	85c00115 	stw	r23,4(r16)
     b1c:	dd801f15 	stw	r22,124(sp)
     b20:	10800208 	cmpgei	r2,r2,8
     b24:	1000061e 	bne	r2,zero,b40 <___vfprintf_internal_r+0x694>
     b28:	84000204 	addi	r16,r16,8
     b2c:	d8c00617 	ldw	r3,24(sp)
     b30:	90800003 	ldbu	r2,0(r18)
     b34:	1dc7883a 	add	r3,r3,r23
     b38:	d8c00615 	stw	r3,24(sp)
     b3c:	003ea106 	br	5c4 <___vfprintf_internal_r+0x118>
     b40:	d9400417 	ldw	r5,16(sp)
     b44:	d9000517 	ldw	r4,20(sp)
     b48:	d9801d04 	addi	r6,sp,116
     b4c:	0007edc0 	call	7edc <__sprint_r>
     b50:	103f621e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
     b54:	8821883a 	mov	r16,r17
     b58:	003ff406 	br	b2c <___vfprintf_internal_r+0x680>
     b5c:	05c00074 	movhi	r23,1
     b60:	90c00450 	cmplti	r3,r18,17
     b64:	d8801e17 	ldw	r2,120(sp)
     b68:	bdc17d04 	addi	r23,r23,1524
     b6c:	1800241e 	bne	r3,zero,c00 <___vfprintf_internal_r+0x754>
     b70:	8007883a 	mov	r3,r16
     b74:	b839883a 	mov	fp,r23
     b78:	dd400517 	ldw	r21,20(sp)
     b7c:	902f883a 	mov	r23,r18
     b80:	05800404 	movi	r22,16
     b84:	5021883a 	mov	r16,r10
     b88:	6825883a 	mov	r18,r13
     b8c:	00000406 	br	ba0 <___vfprintf_internal_r+0x6f4>
     b90:	bdfffc04 	addi	r23,r23,-16
     b94:	b9400448 	cmpgei	r5,r23,17
     b98:	18c00204 	addi	r3,r3,8
     b9c:	28001326 	beq	r5,zero,bec <___vfprintf_internal_r+0x740>
     ba0:	10800044 	addi	r2,r2,1
     ba4:	21000404 	addi	r4,r4,16
     ba8:	1f000015 	stw	fp,0(r3)
     bac:	1d800115 	stw	r22,4(r3)
     bb0:	d9001f15 	stw	r4,124(sp)
     bb4:	d8801e15 	stw	r2,120(sp)
     bb8:	11400208 	cmpgei	r5,r2,8
     bbc:	283ff426 	beq	r5,zero,b90 <___vfprintf_internal_r+0x6e4>
     bc0:	d9400417 	ldw	r5,16(sp)
     bc4:	d9801d04 	addi	r6,sp,116
     bc8:	a809883a 	mov	r4,r21
     bcc:	0007edc0 	call	7edc <__sprint_r>
     bd0:	103f421e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
     bd4:	bdfffc04 	addi	r23,r23,-16
     bd8:	b9400448 	cmpgei	r5,r23,17
     bdc:	d9001f17 	ldw	r4,124(sp)
     be0:	d8801e17 	ldw	r2,120(sp)
     be4:	8807883a 	mov	r3,r17
     be8:	283fed1e 	bne	r5,zero,ba0 <___vfprintf_internal_r+0x6f4>
     bec:	8015883a 	mov	r10,r16
     bf0:	901b883a 	mov	r13,r18
     bf4:	1821883a 	mov	r16,r3
     bf8:	b825883a 	mov	r18,r23
     bfc:	e02f883a 	mov	r23,fp
     c00:	10800044 	addi	r2,r2,1
     c04:	2489883a 	add	r4,r4,r18
     c08:	d8801e15 	stw	r2,120(sp)
     c0c:	85c00015 	stw	r23,0(r16)
     c10:	84800115 	stw	r18,4(r16)
     c14:	d9001f15 	stw	r4,124(sp)
     c18:	10800210 	cmplti	r2,r2,8
     c1c:	103f231e 	bne	r2,zero,8ac <___vfprintf_internal_r+0x400>
     c20:	d9400417 	ldw	r5,16(sp)
     c24:	d9000517 	ldw	r4,20(sp)
     c28:	d9801d04 	addi	r6,sp,116
     c2c:	db400f15 	stw	r13,60(sp)
     c30:	da800815 	stw	r10,32(sp)
     c34:	0007edc0 	call	7edc <__sprint_r>
     c38:	103f281e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
     c3c:	d9001f17 	ldw	r4,124(sp)
     c40:	db400f17 	ldw	r13,60(sp)
     c44:	da800817 	ldw	r10,32(sp)
     c48:	003f1806 	br	8ac <___vfprintf_internal_r+0x400>
     c4c:	d8c00717 	ldw	r3,28(sp)
     c50:	6080020c 	andi	r2,r12,8
     c54:	1d800204 	addi	r22,r3,8
     c58:	10036b1e 	bne	r2,zero,1a08 <___vfprintf_internal_r+0x155c>
     c5c:	d8800717 	ldw	r2,28(sp)
     c60:	10c00017 	ldw	r3,0(r2)
     c64:	10800117 	ldw	r2,4(r2)
     c68:	d8c00a15 	stw	r3,40(sp)
     c6c:	d8800b15 	stw	r2,44(sp)
     c70:	df000b17 	ldw	fp,44(sp)
     c74:	ddc00a17 	ldw	r23,40(sp)
     c78:	00a00034 	movhi	r2,32768
     c7c:	10bfffc4 	addi	r2,r2,-1
     c80:	e0aa703a 	and	r21,fp,r2
     c84:	01dffc34 	movhi	r7,32752
     c88:	01bfffc4 	movi	r6,-1
     c8c:	39ffffc4 	addi	r7,r7,-1
     c90:	b809883a 	mov	r4,r23
     c94:	a80b883a 	mov	r5,r21
     c98:	da800f15 	stw	r10,60(sp)
     c9c:	db000815 	stw	r12,32(sp)
     ca0:	dac00715 	stw	r11,28(sp)
     ca4:	000d6d40 	call	d6d4 <__unorddf2>
     ca8:	dac00717 	ldw	r11,28(sp)
     cac:	db000817 	ldw	r12,32(sp)
     cb0:	da800f17 	ldw	r10,60(sp)
     cb4:	10045c1e 	bne	r2,zero,1e28 <___vfprintf_internal_r+0x197c>
     cb8:	01dffc34 	movhi	r7,32752
     cbc:	01bfffc4 	movi	r6,-1
     cc0:	39ffffc4 	addi	r7,r7,-1
     cc4:	b809883a 	mov	r4,r23
     cc8:	a80b883a 	mov	r5,r21
     ccc:	000c4380 	call	c438 <__ledf2>
     cd0:	dac00717 	ldw	r11,28(sp)
     cd4:	db000817 	ldw	r12,32(sp)
     cd8:	da800f17 	ldw	r10,60(sp)
     cdc:	0084520e 	bge	zero,r2,1e28 <___vfprintf_internal_r+0x197c>
     ce0:	000d883a 	mov	r6,zero
     ce4:	000f883a 	mov	r7,zero
     ce8:	b809883a 	mov	r4,r23
     cec:	e00b883a 	mov	r5,fp
     cf0:	000c4380 	call	c438 <__ledf2>
     cf4:	dac00717 	ldw	r11,28(sp)
     cf8:	db000817 	ldw	r12,32(sp)
     cfc:	da800f17 	ldw	r10,60(sp)
     d00:	10053b16 	blt	r2,zero,21f0 <___vfprintf_internal_r+0x1d44>
     d04:	ddc01643 	ldbu	r23,89(sp)
     d08:	58801210 	cmplti	r2,r11,72
     d0c:	1005201e 	bne	r2,zero,2190 <___vfprintf_internal_r+0x1ce4>
     d10:	05400074 	movhi	r21,1
     d14:	ad416904 	addi	r21,r21,1444
     d18:	00ffdfc4 	movi	r3,-129
     d1c:	60c6703a 	and	r3,r12,r3
     d20:	dd800715 	stw	r22,28(sp)
     d24:	034000c4 	movi	r13,3
     d28:	070000c4 	movi	fp,3
     d2c:	0025883a 	mov	r18,zero
     d30:	d8000815 	stw	zero,32(sp)
     d34:	003f6a06 	br	ae0 <___vfprintf_internal_r+0x634>
     d38:	d8c00717 	ldw	r3,28(sp)
     d3c:	6080040c 	andi	r2,r12,16
     d40:	1d800017 	ldw	r22,0(r3)
     d44:	18c00104 	addi	r3,r3,4
     d48:	d8c00715 	stw	r3,28(sp)
     d4c:	10002a1e 	bne	r2,zero,df8 <___vfprintf_internal_r+0x94c>
     d50:	6080100c 	andi	r2,r12,64
     d54:	10002826 	beq	r2,zero,df8 <___vfprintf_internal_r+0x94c>
     d58:	b5bfffcc 	andi	r22,r22,65535
     d5c:	b5a0001c 	xori	r22,r22,32768
     d60:	b5a00004 	addi	r22,r22,-32768
     d64:	b039d7fa 	srai	fp,r22,31
     d68:	e005883a 	mov	r2,fp
     d6c:	103f120e 	bge	r2,zero,9b8 <___vfprintf_internal_r+0x50c>
     d70:	b004c03a 	cmpne	r2,r22,zero
     d74:	0739c83a 	sub	fp,zero,fp
     d78:	e0b9c83a 	sub	fp,fp,r2
     d7c:	05adc83a 	sub	r22,zero,r22
     d80:	05c00b44 	movi	r23,45
     d84:	00800044 	movi	r2,1
     d88:	003f2f06 	br	a48 <___vfprintf_internal_r+0x59c>
     d8c:	d8c00717 	ldw	r3,28(sp)
     d90:	6080040c 	andi	r2,r12,16
     d94:	1d800017 	ldw	r22,0(r3)
     d98:	18c00104 	addi	r3,r3,4
     d9c:	d8c00715 	stw	r3,28(sp)
     da0:	1000031e 	bne	r2,zero,db0 <___vfprintf_internal_r+0x904>
     da4:	6080100c 	andi	r2,r12,64
     da8:	10000126 	beq	r2,zero,db0 <___vfprintf_internal_r+0x904>
     dac:	b5bfffcc 	andi	r22,r22,65535
     db0:	0039883a 	mov	fp,zero
     db4:	00800044 	movi	r2,1
     db8:	003f2206 	br	a44 <___vfprintf_internal_r+0x598>
     dbc:	d8c00717 	ldw	r3,28(sp)
     dc0:	6080040c 	andi	r2,r12,16
     dc4:	1d800017 	ldw	r22,0(r3)
     dc8:	18c00104 	addi	r3,r3,4
     dcc:	d8c00715 	stw	r3,28(sp)
     dd0:	1000031e 	bne	r2,zero,de0 <___vfprintf_internal_r+0x934>
     dd4:	6080100c 	andi	r2,r12,64
     dd8:	10000126 	beq	r2,zero,de0 <___vfprintf_internal_r+0x934>
     ddc:	b5bfffcc 	andi	r22,r22,65535
     de0:	0039883a 	mov	fp,zero
     de4:	0005883a 	mov	r2,zero
     de8:	003f1606 	br	a44 <___vfprintf_internal_r+0x598>
     dec:	d9000517 	ldw	r4,20(sp)
     df0:	0004bb80 	call	4bb8 <__sinit>
     df4:	003dc606 	br	510 <___vfprintf_internal_r+0x64>
     df8:	b039d7fa 	srai	fp,r22,31
     dfc:	e005883a 	mov	r2,fp
     e00:	003eec06 	br	9b4 <___vfprintf_internal_r+0x508>
     e04:	1819883a 	mov	r12,r3
     e08:	e0036d1e 	bne	fp,zero,1bc0 <___vfprintf_internal_r+0x1714>
     e0c:	b08002a8 	cmpgeui	r2,r22,10
     e10:	10036b1e 	bne	r2,zero,1bc0 <___vfprintf_internal_r+0x1714>
     e14:	b5800c04 	addi	r22,r22,48
     e18:	dd8029c5 	stb	r22,167(sp)
     e1c:	6007883a 	mov	r3,r12
     e20:	07000044 	movi	fp,1
     e24:	dd4029c4 	addi	r21,sp,167
     e28:	003f2906 	br	ad0 <___vfprintf_internal_r+0x624>
     e2c:	d8800717 	ldw	r2,28(sp)
     e30:	12800017 	ldw	r10,0(r2)
     e34:	10800104 	addi	r2,r2,4
     e38:	5002ee0e 	bge	r10,zero,19f4 <___vfprintf_internal_r+0x1548>
     e3c:	0295c83a 	sub	r10,zero,r10
     e40:	d8800715 	stw	r2,28(sp)
     e44:	a2c00007 	ldb	r11,0(r20)
     e48:	63000114 	ori	r12,r12,4
     e4c:	003de706 	br	5ec <___vfprintf_internal_r+0x140>
     e50:	a2c00007 	ldb	r11,0(r20)
     e54:	a0800044 	addi	r2,r20,1
     e58:	58c00aa0 	cmpeqi	r3,r11,42
     e5c:	1806a21e 	bne	r3,zero,28e8 <___vfprintf_internal_r+0x243c>
     e60:	58fff404 	addi	r3,r11,-48
     e64:	190002b0 	cmpltui	r4,r3,10
     e68:	1029883a 	mov	r20,r2
     e6c:	0025883a 	mov	r18,zero
     e70:	203ddf26 	beq	r4,zero,5f0 <___vfprintf_internal_r+0x144>
     e74:	900490ba 	slli	r2,r18,2
     e78:	a2c00007 	ldb	r11,0(r20)
     e7c:	a5000044 	addi	r20,r20,1
     e80:	14a5883a 	add	r18,r2,r18
     e84:	94a5883a 	add	r18,r18,r18
     e88:	90e5883a 	add	r18,r18,r3
     e8c:	58fff404 	addi	r3,r11,-48
     e90:	188002b0 	cmpltui	r2,r3,10
     e94:	103ff71e 	bne	r2,zero,e74 <___vfprintf_internal_r+0x9c8>
     e98:	003dd506 	br	5f0 <___vfprintf_internal_r+0x144>
     e9c:	a2c00007 	ldb	r11,0(r20)
     ea0:	63002014 	ori	r12,r12,128
     ea4:	003dd106 	br	5ec <___vfprintf_internal_r+0x140>
     ea8:	00800ac4 	movi	r2,43
     eac:	a2c00007 	ldb	r11,0(r20)
     eb0:	d8801645 	stb	r2,89(sp)
     eb4:	003dcd06 	br	5ec <___vfprintf_internal_r+0x140>
     eb8:	a2c00007 	ldb	r11,0(r20)
     ebc:	63000054 	ori	r12,r12,1
     ec0:	003dca06 	br	5ec <___vfprintf_internal_r+0x140>
     ec4:	d8801647 	ldb	r2,89(sp)
     ec8:	a2c00003 	ldbu	r11,0(r20)
     ecc:	10000c1e 	bne	r2,zero,f00 <___vfprintf_internal_r+0xa54>
     ed0:	5ac03fcc 	andi	r11,r11,255
     ed4:	00800804 	movi	r2,32
     ed8:	5ac0201c 	xori	r11,r11,128
     edc:	d8801645 	stb	r2,89(sp)
     ee0:	5affe004 	addi	r11,r11,-128
     ee4:	003dc106 	br	5ec <___vfprintf_internal_r+0x140>
     ee8:	a2c00007 	ldb	r11,0(r20)
     eec:	58801b18 	cmpnei	r2,r11,108
     ef0:	1002be1e 	bne	r2,zero,19ec <___vfprintf_internal_r+0x1540>
     ef4:	a2c00043 	ldbu	r11,1(r20)
     ef8:	63000814 	ori	r12,r12,32
     efc:	a5000044 	addi	r20,r20,1
     f00:	5ac03fcc 	andi	r11,r11,255
     f04:	5ac0201c 	xori	r11,r11,128
     f08:	5affe004 	addi	r11,r11,-128
     f0c:	003db706 	br	5ec <___vfprintf_internal_r+0x140>
     f10:	a2c00007 	ldb	r11,0(r20)
     f14:	63000214 	ori	r12,r12,8
     f18:	003db406 	br	5ec <___vfprintf_internal_r+0x140>
     f1c:	a2c00007 	ldb	r11,0(r20)
     f20:	63001014 	ori	r12,r12,64
     f24:	003db106 	br	5ec <___vfprintf_internal_r+0x140>
     f28:	d8c00717 	ldw	r3,28(sp)
     f2c:	d8001645 	stb	zero,89(sp)
     f30:	03400044 	movi	r13,1
     f34:	18800017 	ldw	r2,0(r3)
     f38:	18c00104 	addi	r3,r3,4
     f3c:	d8c00715 	stw	r3,28(sp)
     f40:	d8802005 	stb	r2,128(sp)
     f44:	07000044 	movi	fp,1
     f48:	dd402004 	addi	r21,sp,128
     f4c:	003e1d06 	br	7c4 <___vfprintf_internal_r+0x318>
     f50:	d8800717 	ldw	r2,28(sp)
     f54:	d8001645 	stb	zero,89(sp)
     f58:	15400017 	ldw	r21,0(r2)
     f5c:	15800104 	addi	r22,r2,4
     f60:	a802e726 	beq	r21,zero,1b00 <___vfprintf_internal_r+0x1654>
     f64:	90bfffe0 	cmpeqi	r2,r18,-1
     f68:	10047d1e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x1cb4>
     f6c:	900d883a 	mov	r6,r18
     f70:	000b883a 	mov	r5,zero
     f74:	a809883a 	mov	r4,r21
     f78:	da800f15 	stw	r10,60(sp)
     f7c:	db000815 	stw	r12,32(sp)
     f80:	dac00715 	stw	r11,28(sp)
     f84:	00060140 	call	6014 <memchr>
     f88:	dac00717 	ldw	r11,28(sp)
     f8c:	db000817 	ldw	r12,32(sp)
     f90:	da800f17 	ldw	r10,60(sp)
     f94:	1005ca26 	beq	r2,zero,26c0 <___vfprintf_internal_r+0x2214>
     f98:	1579c83a 	sub	fp,r2,r21
     f9c:	e01b883a 	mov	r13,fp
     fa0:	dd800715 	stw	r22,28(sp)
     fa4:	003e0706 	br	7c4 <___vfprintf_internal_r+0x318>
     fa8:	a2c00007 	ldb	r11,0(r20)
     fac:	63000814 	ori	r12,r12,32
     fb0:	003d8e06 	br	5ec <___vfprintf_internal_r+0x140>
     fb4:	d8c00717 	ldw	r3,28(sp)
     fb8:	009e0c04 	movi	r2,30768
     fbc:	01000074 	movhi	r4,1
     fc0:	d880168d 	sth	r2,90(sp)
     fc4:	18800104 	addi	r2,r3,4
     fc8:	d8800715 	stw	r2,28(sp)
     fcc:	20817104 	addi	r2,r4,1476
     fd0:	d8800e15 	stw	r2,56(sp)
     fd4:	1d800017 	ldw	r22,0(r3)
     fd8:	0039883a 	mov	fp,zero
     fdc:	63000094 	ori	r12,r12,2
     fe0:	00800084 	movi	r2,2
     fe4:	02c01e04 	movi	r11,120
     fe8:	003e9606 	br	a44 <___vfprintf_internal_r+0x598>
     fec:	6080080c 	andi	r2,r12,32
     ff0:	10028a26 	beq	r2,zero,1a1c <___vfprintf_internal_r+0x1570>
     ff4:	d9000617 	ldw	r4,24(sp)
     ff8:	d8800717 	ldw	r2,28(sp)
     ffc:	2007d7fa 	srai	r3,r4,31
    1000:	10800017 	ldw	r2,0(r2)
    1004:	11000015 	stw	r4,0(r2)
    1008:	10c00115 	stw	r3,4(r2)
    100c:	d8800717 	ldw	r2,28(sp)
    1010:	10800104 	addi	r2,r2,4
    1014:	d8800715 	stw	r2,28(sp)
    1018:	003d5e06 	br	594 <___vfprintf_internal_r+0xe8>
    101c:	5ac01990 	cmplti	r11,r11,102
    1020:	5800e91e 	bne	r11,zero,13c8 <___vfprintf_internal_r+0xf1c>
    1024:	d9000a17 	ldw	r4,40(sp)
    1028:	d9400b17 	ldw	r5,44(sp)
    102c:	000d883a 	mov	r6,zero
    1030:	000f883a 	mov	r7,zero
    1034:	db401115 	stw	r13,68(sp)
    1038:	da801015 	stw	r10,64(sp)
    103c:	d8c00f15 	stw	r3,60(sp)
    1040:	000c2a80 	call	c2a8 <__eqdf2>
    1044:	d8c00f17 	ldw	r3,60(sp)
    1048:	da801017 	ldw	r10,64(sp)
    104c:	db401117 	ldw	r13,68(sp)
    1050:	1001a21e 	bne	r2,zero,16dc <___vfprintf_internal_r+0x1230>
    1054:	d8801e17 	ldw	r2,120(sp)
    1058:	01000074 	movhi	r4,1
    105c:	21017804 	addi	r4,r4,1504
    1060:	10800044 	addi	r2,r2,1
    1064:	b5800044 	addi	r22,r22,1
    1068:	81000015 	stw	r4,0(r16)
    106c:	01000044 	movi	r4,1
    1070:	d8801e15 	stw	r2,120(sp)
    1074:	81000115 	stw	r4,4(r16)
    1078:	dd801f15 	stw	r22,124(sp)
    107c:	10800208 	cmpgei	r2,r2,8
    1080:	1003ce1e 	bne	r2,zero,1fbc <___vfprintf_internal_r+0x1b10>
    1084:	84000204 	addi	r16,r16,8
    1088:	d8801717 	ldw	r2,92(sp)
    108c:	d9000917 	ldw	r4,36(sp)
    1090:	11000416 	blt	r2,r4,10a4 <___vfprintf_internal_r+0xbf8>
    1094:	1880004c 	andi	r2,r3,1
    1098:	1000021e 	bne	r2,zero,10a4 <___vfprintf_internal_r+0xbf8>
    109c:	b009883a 	mov	r4,r22
    10a0:	003dfe06 	br	89c <___vfprintf_internal_r+0x3f0>
    10a4:	d8800d17 	ldw	r2,52(sp)
    10a8:	d9400c17 	ldw	r5,48(sp)
    10ac:	80800015 	stw	r2,0(r16)
    10b0:	d8801e17 	ldw	r2,120(sp)
    10b4:	2d89883a 	add	r4,r5,r22
    10b8:	81400115 	stw	r5,4(r16)
    10bc:	10800044 	addi	r2,r2,1
    10c0:	d8801e15 	stw	r2,120(sp)
    10c4:	d9001f15 	stw	r4,124(sp)
    10c8:	10800208 	cmpgei	r2,r2,8
    10cc:	10026a1e 	bne	r2,zero,1a78 <___vfprintf_internal_r+0x15cc>
    10d0:	84000204 	addi	r16,r16,8
    10d4:	d8800917 	ldw	r2,36(sp)
    10d8:	14bfffc4 	addi	r18,r2,-1
    10dc:	04bdef0e 	bge	zero,r18,89c <___vfprintf_internal_r+0x3f0>
    10e0:	05800074 	movhi	r22,1
    10e4:	91400450 	cmplti	r5,r18,17
    10e8:	d8801e17 	ldw	r2,120(sp)
    10ec:	b5817904 	addi	r22,r22,1508
    10f0:	28013e1e 	bne	r5,zero,15ec <___vfprintf_internal_r+0x1140>
    10f4:	800b883a 	mov	r5,r16
    10f8:	9039883a 	mov	fp,r18
    10fc:	1821883a 	mov	r16,r3
    1100:	b02b883a 	mov	r21,r22
    1104:	05c00404 	movi	r23,16
    1108:	982d883a 	mov	r22,r19
    110c:	5025883a 	mov	r18,r10
    1110:	6827883a 	mov	r19,r13
    1114:	2807883a 	mov	r3,r5
    1118:	00000406 	br	112c <___vfprintf_internal_r+0xc80>
    111c:	18c00204 	addi	r3,r3,8
    1120:	e73ffc04 	addi	fp,fp,-16
    1124:	e1400448 	cmpgei	r5,fp,17
    1128:	28012826 	beq	r5,zero,15cc <___vfprintf_internal_r+0x1120>
    112c:	10800044 	addi	r2,r2,1
    1130:	21000404 	addi	r4,r4,16
    1134:	1d400015 	stw	r21,0(r3)
    1138:	1dc00115 	stw	r23,4(r3)
    113c:	d9001f15 	stw	r4,124(sp)
    1140:	d8801e15 	stw	r2,120(sp)
    1144:	11400208 	cmpgei	r5,r2,8
    1148:	283ff426 	beq	r5,zero,111c <___vfprintf_internal_r+0xc70>
    114c:	d9400417 	ldw	r5,16(sp)
    1150:	d9000517 	ldw	r4,20(sp)
    1154:	d9801d04 	addi	r6,sp,116
    1158:	0007edc0 	call	7edc <__sprint_r>
    115c:	103ddf1e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    1160:	d9001f17 	ldw	r4,124(sp)
    1164:	d8801e17 	ldw	r2,120(sp)
    1168:	8807883a 	mov	r3,r17
    116c:	003fec06 	br	1120 <___vfprintf_internal_r+0xc74>
    1170:	536fc83a 	sub	r23,r10,r13
    1174:	05fdbb0e 	bge	zero,r23,864 <___vfprintf_internal_r+0x3b8>
    1178:	b009883a 	mov	r4,r22
    117c:	b9400450 	cmplti	r5,r23,17
    1180:	05800074 	movhi	r22,1
    1184:	d8801e17 	ldw	r2,120(sp)
    1188:	b5817904 	addi	r22,r22,1508
    118c:	28002e1e 	bne	r5,zero,1248 <___vfprintf_internal_r+0xd9c>
    1190:	d8c01015 	stw	r3,64(sp)
    1194:	03000404 	movi	r12,16
    1198:	8007883a 	mov	r3,r16
    119c:	dac00f15 	stw	r11,60(sp)
    11a0:	b821883a 	mov	r16,r23
    11a4:	da801115 	stw	r10,68(sp)
    11a8:	982f883a 	mov	r23,r19
    11ac:	9027883a 	mov	r19,r18
    11b0:	b025883a 	mov	r18,r22
    11b4:	a02d883a 	mov	r22,r20
    11b8:	6829883a 	mov	r20,r13
    11bc:	00000406 	br	11d0 <___vfprintf_internal_r+0xd24>
    11c0:	843ffc04 	addi	r16,r16,-16
    11c4:	81400448 	cmpgei	r5,r16,17
    11c8:	18c00204 	addi	r3,r3,8
    11cc:	28001426 	beq	r5,zero,1220 <___vfprintf_internal_r+0xd74>
    11d0:	10800044 	addi	r2,r2,1
    11d4:	21000404 	addi	r4,r4,16
    11d8:	1c800015 	stw	r18,0(r3)
    11dc:	1b000115 	stw	r12,4(r3)
    11e0:	d9001f15 	stw	r4,124(sp)
    11e4:	d8801e15 	stw	r2,120(sp)
    11e8:	11400208 	cmpgei	r5,r2,8
    11ec:	283ff426 	beq	r5,zero,11c0 <___vfprintf_internal_r+0xd14>
    11f0:	d9400417 	ldw	r5,16(sp)
    11f4:	d9000517 	ldw	r4,20(sp)
    11f8:	d9801d04 	addi	r6,sp,116
    11fc:	0007edc0 	call	7edc <__sprint_r>
    1200:	103db61e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    1204:	843ffc04 	addi	r16,r16,-16
    1208:	81400448 	cmpgei	r5,r16,17
    120c:	d9001f17 	ldw	r4,124(sp)
    1210:	d8801e17 	ldw	r2,120(sp)
    1214:	8807883a 	mov	r3,r17
    1218:	03000404 	movi	r12,16
    121c:	283fec1e 	bne	r5,zero,11d0 <___vfprintf_internal_r+0xd24>
    1220:	a01b883a 	mov	r13,r20
    1224:	dac00f17 	ldw	r11,60(sp)
    1228:	b029883a 	mov	r20,r22
    122c:	da801117 	ldw	r10,68(sp)
    1230:	902d883a 	mov	r22,r18
    1234:	9825883a 	mov	r18,r19
    1238:	b827883a 	mov	r19,r23
    123c:	802f883a 	mov	r23,r16
    1240:	1821883a 	mov	r16,r3
    1244:	d8c01017 	ldw	r3,64(sp)
    1248:	10800044 	addi	r2,r2,1
    124c:	b909883a 	add	r4,r23,r4
    1250:	d8801e15 	stw	r2,120(sp)
    1254:	85800015 	stw	r22,0(r16)
    1258:	85c00115 	stw	r23,4(r16)
    125c:	d9001f15 	stw	r4,124(sp)
    1260:	10800208 	cmpgei	r2,r2,8
    1264:	1003721e 	bne	r2,zero,2030 <___vfprintf_internal_r+0x1b84>
    1268:	9725c83a 	sub	r18,r18,fp
    126c:	84000204 	addi	r16,r16,8
    1270:	202d883a 	mov	r22,r4
    1274:	04bd7d0e 	bge	zero,r18,86c <___vfprintf_internal_r+0x3c0>
    1278:	91400450 	cmplti	r5,r18,17
    127c:	d8801e17 	ldw	r2,120(sp)
    1280:	b009883a 	mov	r4,r22
    1284:	2803c51e 	bne	r5,zero,219c <___vfprintf_internal_r+0x1cf0>
    1288:	982d883a 	mov	r22,r19
    128c:	d8c01015 	stw	r3,64(sp)
    1290:	05c00404 	movi	r23,16
    1294:	8007883a 	mov	r3,r16
    1298:	dac00f15 	stw	r11,60(sp)
    129c:	9021883a 	mov	r16,r18
    12a0:	da801115 	stw	r10,68(sp)
    12a4:	9825883a 	mov	r18,r19
    12a8:	6827883a 	mov	r19,r13
    12ac:	00000406 	br	12c0 <___vfprintf_internal_r+0xe14>
    12b0:	843ffc04 	addi	r16,r16,-16
    12b4:	81400448 	cmpgei	r5,r16,17
    12b8:	18c00204 	addi	r3,r3,8
    12bc:	28001326 	beq	r5,zero,130c <___vfprintf_internal_r+0xe60>
    12c0:	10800044 	addi	r2,r2,1
    12c4:	21000404 	addi	r4,r4,16
    12c8:	1c800015 	stw	r18,0(r3)
    12cc:	1dc00115 	stw	r23,4(r3)
    12d0:	d9001f15 	stw	r4,124(sp)
    12d4:	d8801e15 	stw	r2,120(sp)
    12d8:	11400208 	cmpgei	r5,r2,8
    12dc:	283ff426 	beq	r5,zero,12b0 <___vfprintf_internal_r+0xe04>
    12e0:	d9400417 	ldw	r5,16(sp)
    12e4:	d9000517 	ldw	r4,20(sp)
    12e8:	d9801d04 	addi	r6,sp,116
    12ec:	0007edc0 	call	7edc <__sprint_r>
    12f0:	103d7a1e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    12f4:	843ffc04 	addi	r16,r16,-16
    12f8:	81400448 	cmpgei	r5,r16,17
    12fc:	d9001f17 	ldw	r4,124(sp)
    1300:	d8801e17 	ldw	r2,120(sp)
    1304:	8807883a 	mov	r3,r17
    1308:	283fed1e 	bne	r5,zero,12c0 <___vfprintf_internal_r+0xe14>
    130c:	981b883a 	mov	r13,r19
    1310:	dac00f17 	ldw	r11,60(sp)
    1314:	9027883a 	mov	r19,r18
    1318:	da801117 	ldw	r10,68(sp)
    131c:	8025883a 	mov	r18,r16
    1320:	1821883a 	mov	r16,r3
    1324:	d8c01017 	ldw	r3,64(sp)
    1328:	10800044 	addi	r2,r2,1
    132c:	9109883a 	add	r4,r18,r4
    1330:	d8801e15 	stw	r2,120(sp)
    1334:	85800015 	stw	r22,0(r16)
    1338:	84800115 	stw	r18,4(r16)
    133c:	d9001f15 	stw	r4,124(sp)
    1340:	10800208 	cmpgei	r2,r2,8
    1344:	10018b1e 	bne	r2,zero,1974 <___vfprintf_internal_r+0x14c8>
    1348:	84000204 	addi	r16,r16,8
    134c:	202d883a 	mov	r22,r4
    1350:	003d4606 	br	86c <___vfprintf_internal_r+0x3c0>
    1354:	11000060 	cmpeqi	r4,r2,1
    1358:	1819883a 	mov	r12,r3
    135c:	002d883a 	mov	r22,zero
    1360:	203eac1e 	bne	r4,zero,e14 <___vfprintf_internal_r+0x968>
    1364:	108000a0 	cmpeqi	r2,r2,2
    1368:	0039883a 	mov	fp,zero
    136c:	103dc226 	beq	r2,zero,a78 <___vfprintf_internal_r+0x5cc>
    1370:	d9000e17 	ldw	r4,56(sp)
    1374:	882b883a 	mov	r21,r17
    1378:	b08003cc 	andi	r2,r22,15
    137c:	e006973a 	slli	r3,fp,28
    1380:	b02cd13a 	srli	r22,r22,4
    1384:	2085883a 	add	r2,r4,r2
    1388:	10800003 	ldbu	r2,0(r2)
    138c:	e038d13a 	srli	fp,fp,4
    1390:	1dacb03a 	or	r22,r3,r22
    1394:	a8bfffc5 	stb	r2,-1(r21)
    1398:	b704b03a 	or	r2,r22,fp
    139c:	ad7fffc4 	addi	r21,r21,-1
    13a0:	103ff51e 	bne	r2,zero,1378 <___vfprintf_internal_r+0xecc>
    13a4:	8d79c83a 	sub	fp,r17,r21
    13a8:	6007883a 	mov	r3,r12
    13ac:	003dc806 	br	ad0 <___vfprintf_internal_r+0x624>
    13b0:	d9400417 	ldw	r5,16(sp)
    13b4:	d9000517 	ldw	r4,20(sp)
    13b8:	d9801d04 	addi	r6,sp,116
    13bc:	0007edc0 	call	7edc <__sprint_r>
    13c0:	103d4026 	beq	r2,zero,8c4 <___vfprintf_internal_r+0x418>
    13c4:	003d4506 	br	8dc <___vfprintf_internal_r+0x430>
    13c8:	d8800917 	ldw	r2,36(sp)
    13cc:	84800204 	addi	r18,r16,8
    13d0:	10800088 	cmpgei	r2,r2,2
    13d4:	10012126 	beq	r2,zero,185c <___vfprintf_internal_r+0x13b0>
    13d8:	df001e17 	ldw	fp,120(sp)
    13dc:	00800044 	movi	r2,1
    13e0:	b5800044 	addi	r22,r22,1
    13e4:	e7000044 	addi	fp,fp,1
    13e8:	80800115 	stw	r2,4(r16)
    13ec:	85400015 	stw	r21,0(r16)
    13f0:	dd801f15 	stw	r22,124(sp)
    13f4:	df001e15 	stw	fp,120(sp)
    13f8:	e0800210 	cmplti	r2,fp,8
    13fc:	10023126 	beq	r2,zero,1cc4 <___vfprintf_internal_r+0x1818>
    1400:	d8800c17 	ldw	r2,48(sp)
    1404:	d9000d17 	ldw	r4,52(sp)
    1408:	e7000044 	addi	fp,fp,1
    140c:	15af883a 	add	r23,r2,r22
    1410:	90800115 	stw	r2,4(r18)
    1414:	91000015 	stw	r4,0(r18)
    1418:	ddc01f15 	stw	r23,124(sp)
    141c:	df001e15 	stw	fp,120(sp)
    1420:	e0800208 	cmpgei	r2,fp,8
    1424:	1002361e 	bne	r2,zero,1d00 <___vfprintf_internal_r+0x1854>
    1428:	94800204 	addi	r18,r18,8
    142c:	d9000a17 	ldw	r4,40(sp)
    1430:	d9400b17 	ldw	r5,44(sp)
    1434:	000d883a 	mov	r6,zero
    1438:	000f883a 	mov	r7,zero
    143c:	db401015 	stw	r13,64(sp)
    1440:	da800f15 	stw	r10,60(sp)
    1444:	d8c00815 	stw	r3,32(sp)
    1448:	000c2a80 	call	c2a8 <__eqdf2>
    144c:	d8c00917 	ldw	r3,36(sp)
    1450:	da800f17 	ldw	r10,60(sp)
    1454:	db401017 	ldw	r13,64(sp)
    1458:	1c3fffc4 	addi	r16,r3,-1
    145c:	d8c00817 	ldw	r3,32(sp)
    1460:	10011c26 	beq	r2,zero,18d4 <___vfprintf_internal_r+0x1428>
    1464:	aa000044 	addi	r8,r21,1
    1468:	e7000044 	addi	fp,fp,1
    146c:	bc2f883a 	add	r23,r23,r16
    1470:	92000015 	stw	r8,0(r18)
    1474:	94000115 	stw	r16,4(r18)
    1478:	ddc01f15 	stw	r23,124(sp)
    147c:	df001e15 	stw	fp,120(sp)
    1480:	e0800208 	cmpgei	r2,fp,8
    1484:	1002db1e 	bne	r2,zero,1ff4 <___vfprintf_internal_r+0x1b48>
    1488:	94800204 	addi	r18,r18,8
    148c:	d9401217 	ldw	r5,72(sp)
    1490:	e7000044 	addi	fp,fp,1
    1494:	d8801904 	addi	r2,sp,100
    1498:	2dc9883a 	add	r4,r5,r23
    149c:	df001e15 	stw	fp,120(sp)
    14a0:	90800015 	stw	r2,0(r18)
    14a4:	91400115 	stw	r5,4(r18)
    14a8:	d9001f15 	stw	r4,124(sp)
    14ac:	e7000208 	cmpgei	fp,fp,8
    14b0:	e001401e 	bne	fp,zero,19b4 <___vfprintf_internal_r+0x1508>
    14b4:	94000204 	addi	r16,r18,8
    14b8:	003cf806 	br	89c <___vfprintf_internal_r+0x3f0>
    14bc:	05c00074 	movhi	r23,1
    14c0:	b1400450 	cmplti	r5,r22,17
    14c4:	d9001f17 	ldw	r4,124(sp)
    14c8:	d8801e17 	ldw	r2,120(sp)
    14cc:	bdc17d04 	addi	r23,r23,1524
    14d0:	2800341e 	bne	r5,zero,15a4 <___vfprintf_internal_r+0x10f8>
    14d4:	980b883a 	mov	r5,r19
    14d8:	d8c01315 	stw	r3,76(sp)
    14dc:	9027883a 	mov	r19,r18
    14e0:	8007883a 	mov	r3,r16
    14e4:	b825883a 	mov	r18,r23
    14e8:	b021883a 	mov	r16,r22
    14ec:	03c00404 	movi	r15,16
    14f0:	a02d883a 	mov	r22,r20
    14f4:	db800f15 	stw	r14,60(sp)
    14f8:	db001015 	stw	r12,64(sp)
    14fc:	dac01115 	stw	r11,68(sp)
    1500:	da801415 	stw	r10,80(sp)
    1504:	6829883a 	mov	r20,r13
    1508:	282f883a 	mov	r23,r5
    150c:	00000406 	br	1520 <___vfprintf_internal_r+0x1074>
    1510:	843ffc04 	addi	r16,r16,-16
    1514:	81400448 	cmpgei	r5,r16,17
    1518:	18c00204 	addi	r3,r3,8
    151c:	28001426 	beq	r5,zero,1570 <___vfprintf_internal_r+0x10c4>
    1520:	10800044 	addi	r2,r2,1
    1524:	21000404 	addi	r4,r4,16
    1528:	1c800015 	stw	r18,0(r3)
    152c:	1bc00115 	stw	r15,4(r3)
    1530:	d9001f15 	stw	r4,124(sp)
    1534:	d8801e15 	stw	r2,120(sp)
    1538:	11400208 	cmpgei	r5,r2,8
    153c:	283ff426 	beq	r5,zero,1510 <___vfprintf_internal_r+0x1064>
    1540:	d9400417 	ldw	r5,16(sp)
    1544:	d9000517 	ldw	r4,20(sp)
    1548:	d9801d04 	addi	r6,sp,116
    154c:	0007edc0 	call	7edc <__sprint_r>
    1550:	103ce21e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    1554:	843ffc04 	addi	r16,r16,-16
    1558:	81400448 	cmpgei	r5,r16,17
    155c:	d9001f17 	ldw	r4,124(sp)
    1560:	d8801e17 	ldw	r2,120(sp)
    1564:	8807883a 	mov	r3,r17
    1568:	03c00404 	movi	r15,16
    156c:	283fec1e 	bne	r5,zero,1520 <___vfprintf_internal_r+0x1074>
    1570:	a01b883a 	mov	r13,r20
    1574:	db800f17 	ldw	r14,60(sp)
    1578:	b029883a 	mov	r20,r22
    157c:	db001017 	ldw	r12,64(sp)
    1580:	802d883a 	mov	r22,r16
    1584:	dac01117 	ldw	r11,68(sp)
    1588:	1821883a 	mov	r16,r3
    158c:	da801417 	ldw	r10,80(sp)
    1590:	d8c01317 	ldw	r3,76(sp)
    1594:	b80b883a 	mov	r5,r23
    1598:	902f883a 	mov	r23,r18
    159c:	9825883a 	mov	r18,r19
    15a0:	2827883a 	mov	r19,r5
    15a4:	10800044 	addi	r2,r2,1
    15a8:	b109883a 	add	r4,r22,r4
    15ac:	d8801e15 	stw	r2,120(sp)
    15b0:	85c00015 	stw	r23,0(r16)
    15b4:	85800115 	stw	r22,4(r16)
    15b8:	d9001f15 	stw	r4,124(sp)
    15bc:	10800208 	cmpgei	r2,r2,8
    15c0:	1001de1e 	bne	r2,zero,1d3c <___vfprintf_internal_r+0x1890>
    15c4:	84000204 	addi	r16,r16,8
    15c8:	003c8806 	br	7ec <___vfprintf_internal_r+0x340>
    15cc:	180b883a 	mov	r5,r3
    15d0:	9015883a 	mov	r10,r18
    15d4:	8007883a 	mov	r3,r16
    15d8:	981b883a 	mov	r13,r19
    15dc:	e025883a 	mov	r18,fp
    15e0:	b027883a 	mov	r19,r22
    15e4:	2821883a 	mov	r16,r5
    15e8:	a82d883a 	mov	r22,r21
    15ec:	10800044 	addi	r2,r2,1
    15f0:	85800015 	stw	r22,0(r16)
    15f4:	84800115 	stw	r18,4(r16)
    15f8:	2489883a 	add	r4,r4,r18
    15fc:	d8801e15 	stw	r2,120(sp)
    1600:	d9001f15 	stw	r4,124(sp)
    1604:	10800208 	cmpgei	r2,r2,8
    1608:	103ca326 	beq	r2,zero,898 <___vfprintf_internal_r+0x3ec>
    160c:	d9400417 	ldw	r5,16(sp)
    1610:	d9000517 	ldw	r4,20(sp)
    1614:	d9801d04 	addi	r6,sp,116
    1618:	db401015 	stw	r13,64(sp)
    161c:	da800f15 	stw	r10,60(sp)
    1620:	d8c00815 	stw	r3,32(sp)
    1624:	0007edc0 	call	7edc <__sprint_r>
    1628:	103cac1e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    162c:	d9001f17 	ldw	r4,124(sp)
    1630:	d8c00817 	ldw	r3,32(sp)
    1634:	da800f17 	ldw	r10,60(sp)
    1638:	db401017 	ldw	r13,64(sp)
    163c:	8821883a 	mov	r16,r17
    1640:	003c9606 	br	89c <___vfprintf_internal_r+0x3f0>
    1644:	d9400417 	ldw	r5,16(sp)
    1648:	d9000517 	ldw	r4,20(sp)
    164c:	d9801d04 	addi	r6,sp,116
    1650:	db401515 	stw	r13,84(sp)
    1654:	da801415 	stw	r10,80(sp)
    1658:	d8c01315 	stw	r3,76(sp)
    165c:	dac01115 	stw	r11,68(sp)
    1660:	db001015 	stw	r12,64(sp)
    1664:	db800f15 	stw	r14,60(sp)
    1668:	0007edc0 	call	7edc <__sprint_r>
    166c:	103c9b1e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    1670:	dd801f17 	ldw	r22,124(sp)
    1674:	db401517 	ldw	r13,84(sp)
    1678:	da801417 	ldw	r10,80(sp)
    167c:	d8c01317 	ldw	r3,76(sp)
    1680:	dac01117 	ldw	r11,68(sp)
    1684:	db001017 	ldw	r12,64(sp)
    1688:	db800f17 	ldw	r14,60(sp)
    168c:	8821883a 	mov	r16,r17
    1690:	003c6506 	br	828 <___vfprintf_internal_r+0x37c>
    1694:	d9400417 	ldw	r5,16(sp)
    1698:	d9000517 	ldw	r4,20(sp)
    169c:	d9801d04 	addi	r6,sp,116
    16a0:	db401415 	stw	r13,80(sp)
    16a4:	da801315 	stw	r10,76(sp)
    16a8:	d8c01115 	stw	r3,68(sp)
    16ac:	dac01015 	stw	r11,64(sp)
    16b0:	db000f15 	stw	r12,60(sp)
    16b4:	0007edc0 	call	7edc <__sprint_r>
    16b8:	103c881e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    16bc:	dd801f17 	ldw	r22,124(sp)
    16c0:	db401417 	ldw	r13,80(sp)
    16c4:	da801317 	ldw	r10,76(sp)
    16c8:	d8c01117 	ldw	r3,68(sp)
    16cc:	dac01017 	ldw	r11,64(sp)
    16d0:	db000f17 	ldw	r12,60(sp)
    16d4:	8821883a 	mov	r16,r17
    16d8:	003c6006 	br	85c <___vfprintf_internal_r+0x3b0>
    16dc:	dc801717 	ldw	r18,92(sp)
    16e0:	0481a90e 	bge	zero,r18,1d88 <___vfprintf_internal_r+0x18dc>
    16e4:	d8800917 	ldw	r2,36(sp)
    16e8:	d9000817 	ldw	r4,32(sp)
    16ec:	1025883a 	mov	r18,r2
    16f0:	2080d316 	blt	r4,r2,1a40 <___vfprintf_internal_r+0x1594>
    16f4:	04800a0e 	bge	zero,r18,1720 <___vfprintf_internal_r+0x1274>
    16f8:	d8801e17 	ldw	r2,120(sp)
    16fc:	b4ad883a 	add	r22,r22,r18
    1700:	85400015 	stw	r21,0(r16)
    1704:	10800044 	addi	r2,r2,1
    1708:	d8801e15 	stw	r2,120(sp)
    170c:	84800115 	stw	r18,4(r16)
    1710:	dd801f15 	stw	r22,124(sp)
    1714:	10800208 	cmpgei	r2,r2,8
    1718:	1003b61e 	bne	r2,zero,25f4 <___vfprintf_internal_r+0x2148>
    171c:	84000204 	addi	r16,r16,8
    1720:	9000d316 	blt	r18,zero,1a70 <___vfprintf_internal_r+0x15c4>
    1724:	d8800817 	ldw	r2,32(sp)
    1728:	14a5c83a 	sub	r18,r2,r18
    172c:	04810016 	blt	zero,r18,1b30 <___vfprintf_internal_r+0x1684>
    1730:	dc801717 	ldw	r18,92(sp)
    1734:	d9000917 	ldw	r4,36(sp)
    1738:	9100c40e 	bge	r18,r4,1a4c <___vfprintf_internal_r+0x15a0>
    173c:	d8800d17 	ldw	r2,52(sp)
    1740:	d9400c17 	ldw	r5,48(sp)
    1744:	80800015 	stw	r2,0(r16)
    1748:	d8801e17 	ldw	r2,120(sp)
    174c:	2d89883a 	add	r4,r5,r22
    1750:	81400115 	stw	r5,4(r16)
    1754:	10800044 	addi	r2,r2,1
    1758:	d8801e15 	stw	r2,120(sp)
    175c:	d9001f15 	stw	r4,124(sp)
    1760:	10800208 	cmpgei	r2,r2,8
    1764:	1003891e 	bne	r2,zero,258c <___vfprintf_internal_r+0x20e0>
    1768:	84000204 	addi	r16,r16,8
    176c:	d8800917 	ldw	r2,36(sp)
    1770:	d9400817 	ldw	r5,32(sp)
    1774:	14a5c83a 	sub	r18,r2,r18
    1778:	116fc83a 	sub	r23,r2,r5
    177c:	95c0010e 	bge	r18,r23,1784 <___vfprintf_internal_r+0x12d8>
    1780:	902f883a 	mov	r23,r18
    1784:	05c00c0e 	bge	zero,r23,17b8 <___vfprintf_internal_r+0x130c>
    1788:	d8800817 	ldw	r2,32(sp)
    178c:	25c9883a 	add	r4,r4,r23
    1790:	85c00115 	stw	r23,4(r16)
    1794:	a891883a 	add	r8,r21,r2
    1798:	d8801e17 	ldw	r2,120(sp)
    179c:	82000015 	stw	r8,0(r16)
    17a0:	d9001f15 	stw	r4,124(sp)
    17a4:	10800044 	addi	r2,r2,1
    17a8:	d8801e15 	stw	r2,120(sp)
    17ac:	10800208 	cmpgei	r2,r2,8
    17b0:	1003a11e 	bne	r2,zero,2638 <___vfprintf_internal_r+0x218c>
    17b4:	84000204 	addi	r16,r16,8
    17b8:	b800010e 	bge	r23,zero,17c0 <___vfprintf_internal_r+0x1314>
    17bc:	002f883a 	mov	r23,zero
    17c0:	95e5c83a 	sub	r18,r18,r23
    17c4:	04bc350e 	bge	zero,r18,89c <___vfprintf_internal_r+0x3f0>
    17c8:	05800074 	movhi	r22,1
    17cc:	91400450 	cmplti	r5,r18,17
    17d0:	d8801e17 	ldw	r2,120(sp)
    17d4:	b5817904 	addi	r22,r22,1508
    17d8:	283f841e 	bne	r5,zero,15ec <___vfprintf_internal_r+0x1140>
    17dc:	d8c00815 	stw	r3,32(sp)
    17e0:	dd400517 	ldw	r21,20(sp)
    17e4:	8007883a 	mov	r3,r16
    17e8:	df000417 	ldw	fp,16(sp)
    17ec:	9021883a 	mov	r16,r18
    17f0:	05c00404 	movi	r23,16
    17f4:	b025883a 	mov	r18,r22
    17f8:	da800f15 	stw	r10,60(sp)
    17fc:	982d883a 	mov	r22,r19
    1800:	6827883a 	mov	r19,r13
    1804:	00000406 	br	1818 <___vfprintf_internal_r+0x136c>
    1808:	18c00204 	addi	r3,r3,8
    180c:	843ffc04 	addi	r16,r16,-16
    1810:	81400448 	cmpgei	r5,r16,17
    1814:	28036c26 	beq	r5,zero,25c8 <___vfprintf_internal_r+0x211c>
    1818:	10800044 	addi	r2,r2,1
    181c:	21000404 	addi	r4,r4,16
    1820:	1c800015 	stw	r18,0(r3)
    1824:	1dc00115 	stw	r23,4(r3)
    1828:	d9001f15 	stw	r4,124(sp)
    182c:	d8801e15 	stw	r2,120(sp)
    1830:	11400208 	cmpgei	r5,r2,8
    1834:	283ff426 	beq	r5,zero,1808 <___vfprintf_internal_r+0x135c>
    1838:	d9801d04 	addi	r6,sp,116
    183c:	e00b883a 	mov	r5,fp
    1840:	a809883a 	mov	r4,r21
    1844:	0007edc0 	call	7edc <__sprint_r>
    1848:	103c241e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    184c:	d9001f17 	ldw	r4,124(sp)
    1850:	d8801e17 	ldw	r2,120(sp)
    1854:	8807883a 	mov	r3,r17
    1858:	003fec06 	br	180c <___vfprintf_internal_r+0x1360>
    185c:	1880004c 	andi	r2,r3,1
    1860:	103edd1e 	bne	r2,zero,13d8 <___vfprintf_internal_r+0xf2c>
    1864:	df001e17 	ldw	fp,120(sp)
    1868:	00800044 	movi	r2,1
    186c:	b5c00044 	addi	r23,r22,1
    1870:	e7000044 	addi	fp,fp,1
    1874:	80800115 	stw	r2,4(r16)
    1878:	85400015 	stw	r21,0(r16)
    187c:	ddc01f15 	stw	r23,124(sp)
    1880:	df001e15 	stw	fp,120(sp)
    1884:	e0800210 	cmplti	r2,fp,8
    1888:	103f001e 	bne	r2,zero,148c <___vfprintf_internal_r+0xfe0>
    188c:	d9400417 	ldw	r5,16(sp)
    1890:	d9000517 	ldw	r4,20(sp)
    1894:	d9801d04 	addi	r6,sp,116
    1898:	db401015 	stw	r13,64(sp)
    189c:	da800f15 	stw	r10,60(sp)
    18a0:	d8c00815 	stw	r3,32(sp)
    18a4:	0007edc0 	call	7edc <__sprint_r>
    18a8:	103c0c1e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    18ac:	ddc01f17 	ldw	r23,124(sp)
    18b0:	df001e17 	ldw	fp,120(sp)
    18b4:	db401017 	ldw	r13,64(sp)
    18b8:	da800f17 	ldw	r10,60(sp)
    18bc:	d8c00817 	ldw	r3,32(sp)
    18c0:	8825883a 	mov	r18,r17
    18c4:	003ef106 	br	148c <___vfprintf_internal_r+0xfe0>
    18c8:	0039883a 	mov	fp,zero
    18cc:	882b883a 	mov	r21,r17
    18d0:	003c7f06 	br	ad0 <___vfprintf_internal_r+0x624>
    18d4:	d8800917 	ldw	r2,36(sp)
    18d8:	10800090 	cmplti	r2,r2,2
    18dc:	103eeb1e 	bne	r2,zero,148c <___vfprintf_internal_r+0xfe0>
    18e0:	d8800917 	ldw	r2,36(sp)
    18e4:	05800074 	movhi	r22,1
    18e8:	b5817904 	addi	r22,r22,1508
    18ec:	10800490 	cmplti	r2,r2,18
    18f0:	1002171e 	bne	r2,zero,2150 <___vfprintf_internal_r+0x1ca4>
    18f4:	b809883a 	mov	r4,r23
    18f8:	e005883a 	mov	r2,fp
    18fc:	a02f883a 	mov	r23,r20
    1900:	9839883a 	mov	fp,r19
    1904:	05400404 	movi	r21,16
    1908:	1827883a 	mov	r19,r3
    190c:	5029883a 	mov	r20,r10
    1910:	9007883a 	mov	r3,r18
    1914:	b025883a 	mov	r18,r22
    1918:	682d883a 	mov	r22,r13
    191c:	00000406 	br	1930 <___vfprintf_internal_r+0x1484>
    1920:	18c00204 	addi	r3,r3,8
    1924:	843ffc04 	addi	r16,r16,-16
    1928:	81400448 	cmpgei	r5,r16,17
    192c:	2801ff26 	beq	r5,zero,212c <___vfprintf_internal_r+0x1c80>
    1930:	10800044 	addi	r2,r2,1
    1934:	21000404 	addi	r4,r4,16
    1938:	1c800015 	stw	r18,0(r3)
    193c:	1d400115 	stw	r21,4(r3)
    1940:	d9001f15 	stw	r4,124(sp)
    1944:	d8801e15 	stw	r2,120(sp)
    1948:	11400208 	cmpgei	r5,r2,8
    194c:	283ff426 	beq	r5,zero,1920 <___vfprintf_internal_r+0x1474>
    1950:	d9400417 	ldw	r5,16(sp)
    1954:	d9000517 	ldw	r4,20(sp)
    1958:	d9801d04 	addi	r6,sp,116
    195c:	0007edc0 	call	7edc <__sprint_r>
    1960:	103bde1e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    1964:	d9001f17 	ldw	r4,124(sp)
    1968:	d8801e17 	ldw	r2,120(sp)
    196c:	8807883a 	mov	r3,r17
    1970:	003fec06 	br	1924 <___vfprintf_internal_r+0x1478>
    1974:	d9400417 	ldw	r5,16(sp)
    1978:	d9000517 	ldw	r4,20(sp)
    197c:	d9801d04 	addi	r6,sp,116
    1980:	db401315 	stw	r13,76(sp)
    1984:	da801115 	stw	r10,68(sp)
    1988:	d8c01015 	stw	r3,64(sp)
    198c:	dac00f15 	stw	r11,60(sp)
    1990:	0007edc0 	call	7edc <__sprint_r>
    1994:	103bd11e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    1998:	dd801f17 	ldw	r22,124(sp)
    199c:	db401317 	ldw	r13,76(sp)
    19a0:	da801117 	ldw	r10,68(sp)
    19a4:	d8c01017 	ldw	r3,64(sp)
    19a8:	dac00f17 	ldw	r11,60(sp)
    19ac:	8821883a 	mov	r16,r17
    19b0:	003bae06 	br	86c <___vfprintf_internal_r+0x3c0>
    19b4:	d9400417 	ldw	r5,16(sp)
    19b8:	d9000517 	ldw	r4,20(sp)
    19bc:	d9801d04 	addi	r6,sp,116
    19c0:	db401015 	stw	r13,64(sp)
    19c4:	da800f15 	stw	r10,60(sp)
    19c8:	d8c00815 	stw	r3,32(sp)
    19cc:	0007edc0 	call	7edc <__sprint_r>
    19d0:	103bc21e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    19d4:	d9001f17 	ldw	r4,124(sp)
    19d8:	db401017 	ldw	r13,64(sp)
    19dc:	da800f17 	ldw	r10,60(sp)
    19e0:	d8c00817 	ldw	r3,32(sp)
    19e4:	8821883a 	mov	r16,r17
    19e8:	003bac06 	br	89c <___vfprintf_internal_r+0x3f0>
    19ec:	63000414 	ori	r12,r12,16
    19f0:	003afe06 	br	5ec <___vfprintf_internal_r+0x140>
    19f4:	a2c00007 	ldb	r11,0(r20)
    19f8:	d8800715 	stw	r2,28(sp)
    19fc:	003afb06 	br	5ec <___vfprintf_internal_r+0x140>
    1a00:	882b883a 	mov	r21,r17
    1a04:	003c3206 	br	ad0 <___vfprintf_internal_r+0x624>
    1a08:	18800017 	ldw	r2,0(r3)
    1a0c:	d8800a15 	stw	r2,40(sp)
    1a10:	18800117 	ldw	r2,4(r3)
    1a14:	d8800b15 	stw	r2,44(sp)
    1a18:	003c9506 	br	c70 <___vfprintf_internal_r+0x7c4>
    1a1c:	6080040c 	andi	r2,r12,16
    1a20:	1000941e 	bne	r2,zero,1c74 <___vfprintf_internal_r+0x17c8>
    1a24:	6300100c 	andi	r12,r12,64
    1a28:	60009226 	beq	r12,zero,1c74 <___vfprintf_internal_r+0x17c8>
    1a2c:	d8800717 	ldw	r2,28(sp)
    1a30:	d8c00617 	ldw	r3,24(sp)
    1a34:	10800017 	ldw	r2,0(r2)
    1a38:	10c0000d 	sth	r3,0(r2)
    1a3c:	003d7306 	br	100c <___vfprintf_internal_r+0xb60>
    1a40:	2025883a 	mov	r18,r4
    1a44:	04bf2c16 	blt	zero,r18,16f8 <___vfprintf_internal_r+0x124c>
    1a48:	003f3506 	br	1720 <___vfprintf_internal_r+0x1274>
    1a4c:	1880004c 	andi	r2,r3,1
    1a50:	103f3a1e 	bne	r2,zero,173c <___vfprintf_internal_r+0x1290>
    1a54:	d8800817 	ldw	r2,32(sp)
    1a58:	24a5c83a 	sub	r18,r4,r18
    1a5c:	20afc83a 	sub	r23,r4,r2
    1a60:	b009883a 	mov	r4,r22
    1a64:	95ff540e 	bge	r18,r23,17b8 <___vfprintf_internal_r+0x130c>
    1a68:	902f883a 	mov	r23,r18
    1a6c:	003f5206 	br	17b8 <___vfprintf_internal_r+0x130c>
    1a70:	0025883a 	mov	r18,zero
    1a74:	003f2b06 	br	1724 <___vfprintf_internal_r+0x1278>
    1a78:	d9400417 	ldw	r5,16(sp)
    1a7c:	d9000517 	ldw	r4,20(sp)
    1a80:	d9801d04 	addi	r6,sp,116
    1a84:	db401015 	stw	r13,64(sp)
    1a88:	da800f15 	stw	r10,60(sp)
    1a8c:	d8c00815 	stw	r3,32(sp)
    1a90:	0007edc0 	call	7edc <__sprint_r>
    1a94:	103b911e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    1a98:	d9001f17 	ldw	r4,124(sp)
    1a9c:	db401017 	ldw	r13,64(sp)
    1aa0:	da800f17 	ldw	r10,60(sp)
    1aa4:	d8c00817 	ldw	r3,32(sp)
    1aa8:	8821883a 	mov	r16,r17
    1aac:	003d8906 	br	10d4 <___vfprintf_internal_r+0xc28>
    1ab0:	00800074 	movhi	r2,1
    1ab4:	10816c04 	addi	r2,r2,1456
    1ab8:	d8800e15 	stw	r2,56(sp)
    1abc:	6080080c 	andi	r2,r12,32
    1ac0:	10007326 	beq	r2,zero,1c90 <___vfprintf_internal_r+0x17e4>
    1ac4:	d8800717 	ldw	r2,28(sp)
    1ac8:	15800017 	ldw	r22,0(r2)
    1acc:	17000117 	ldw	fp,4(r2)
    1ad0:	10800204 	addi	r2,r2,8
    1ad4:	d8800715 	stw	r2,28(sp)
    1ad8:	6080004c 	andi	r2,r12,1
    1adc:	10006a26 	beq	r2,zero,1c88 <___vfprintf_internal_r+0x17dc>
    1ae0:	b704b03a 	or	r2,r22,fp
    1ae4:	10006826 	beq	r2,zero,1c88 <___vfprintf_internal_r+0x17dc>
    1ae8:	00800c04 	movi	r2,48
    1aec:	d8801685 	stb	r2,90(sp)
    1af0:	dac016c5 	stb	r11,91(sp)
    1af4:	63000094 	ori	r12,r12,2
    1af8:	00800084 	movi	r2,2
    1afc:	003bd106 	br	a44 <___vfprintf_internal_r+0x598>
    1b00:	908001f0 	cmpltui	r2,r18,7
    1b04:	9039883a 	mov	fp,r18
    1b08:	1001d026 	beq	r2,zero,224c <___vfprintf_internal_r+0x1da0>
    1b0c:	05400074 	movhi	r21,1
    1b10:	e01b883a 	mov	r13,fp
    1b14:	dd800715 	stw	r22,28(sp)
    1b18:	ad417604 	addi	r21,r21,1496
    1b1c:	003b2906 	br	7c4 <___vfprintf_internal_r+0x318>
    1b20:	00800074 	movhi	r2,1
    1b24:	10817104 	addi	r2,r2,1476
    1b28:	d8800e15 	stw	r2,56(sp)
    1b2c:	003fe306 	br	1abc <___vfprintf_internal_r+0x1610>
    1b30:	b009883a 	mov	r4,r22
    1b34:	91400450 	cmplti	r5,r18,17
    1b38:	05800074 	movhi	r22,1
    1b3c:	d8801e17 	ldw	r2,120(sp)
    1b40:	b5817904 	addi	r22,r22,1508
    1b44:	28019f1e 	bne	r5,zero,21c4 <___vfprintf_internal_r+0x1d18>
    1b48:	9039883a 	mov	fp,r18
    1b4c:	d8c00f15 	stw	r3,60(sp)
    1b50:	05c00404 	movi	r23,16
    1b54:	8007883a 	mov	r3,r16
    1b58:	5025883a 	mov	r18,r10
    1b5c:	b021883a 	mov	r16,r22
    1b60:	982d883a 	mov	r22,r19
    1b64:	6827883a 	mov	r19,r13
    1b68:	00000406 	br	1b7c <___vfprintf_internal_r+0x16d0>
    1b6c:	18c00204 	addi	r3,r3,8
    1b70:	e73ffc04 	addi	fp,fp,-16
    1b74:	e1400448 	cmpgei	r5,fp,17
    1b78:	28018b26 	beq	r5,zero,21a8 <___vfprintf_internal_r+0x1cfc>
    1b7c:	10800044 	addi	r2,r2,1
    1b80:	21000404 	addi	r4,r4,16
    1b84:	1c000015 	stw	r16,0(r3)
    1b88:	1dc00115 	stw	r23,4(r3)
    1b8c:	d9001f15 	stw	r4,124(sp)
    1b90:	d8801e15 	stw	r2,120(sp)
    1b94:	11400208 	cmpgei	r5,r2,8
    1b98:	283ff426 	beq	r5,zero,1b6c <___vfprintf_internal_r+0x16c0>
    1b9c:	d9400417 	ldw	r5,16(sp)
    1ba0:	d9000517 	ldw	r4,20(sp)
    1ba4:	d9801d04 	addi	r6,sp,116
    1ba8:	0007edc0 	call	7edc <__sprint_r>
    1bac:	103b4b1e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    1bb0:	d9001f17 	ldw	r4,124(sp)
    1bb4:	d8801e17 	ldw	r2,120(sp)
    1bb8:	8807883a 	mov	r3,r17
    1bbc:	003fec06 	br	1b70 <___vfprintf_internal_r+0x16c4>
    1bc0:	8009883a 	mov	r4,r16
    1bc4:	b007883a 	mov	r3,r22
    1bc8:	9805883a 	mov	r2,r19
    1bcc:	a02d883a 	mov	r22,r20
    1bd0:	e027883a 	mov	r19,fp
    1bd4:	9029883a 	mov	r20,r18
    1bd8:	dac00815 	stw	r11,32(sp)
    1bdc:	db000f15 	stw	r12,60(sp)
    1be0:	da801015 	stw	r10,64(sp)
    1be4:	8821883a 	mov	r16,r17
    1be8:	1039883a 	mov	fp,r2
    1bec:	1825883a 	mov	r18,r3
    1bf0:	202b883a 	mov	r21,r4
    1bf4:	9009883a 	mov	r4,r18
    1bf8:	980b883a 	mov	r5,r19
    1bfc:	01800284 	movi	r6,10
    1c00:	000f883a 	mov	r7,zero
    1c04:	000a9800 	call	a980 <__umoddi3>
    1c08:	10800c04 	addi	r2,r2,48
    1c0c:	9009883a 	mov	r4,r18
    1c10:	980b883a 	mov	r5,r19
    1c14:	01800284 	movi	r6,10
    1c18:	000f883a 	mov	r7,zero
    1c1c:	80bfffc5 	stb	r2,-1(r16)
    1c20:	000a3a80 	call	a3a8 <__udivdi3>
    1c24:	980d883a 	mov	r6,r19
    1c28:	900f883a 	mov	r7,r18
    1c2c:	843fffc4 	addi	r16,r16,-1
    1c30:	1025883a 	mov	r18,r2
    1c34:	1827883a 	mov	r19,r3
    1c38:	303fee1e 	bne	r6,zero,1bf4 <___vfprintf_internal_r+0x1748>
    1c3c:	39c002a8 	cmpgeui	r7,r7,10
    1c40:	383fec1e 	bne	r7,zero,1bf4 <___vfprintf_internal_r+0x1748>
    1c44:	db000f17 	ldw	r12,60(sp)
    1c48:	a805883a 	mov	r2,r21
    1c4c:	802b883a 	mov	r21,r16
    1c50:	a025883a 	mov	r18,r20
    1c54:	e027883a 	mov	r19,fp
    1c58:	dac00817 	ldw	r11,32(sp)
    1c5c:	da801017 	ldw	r10,64(sp)
    1c60:	b029883a 	mov	r20,r22
    1c64:	1021883a 	mov	r16,r2
    1c68:	8d79c83a 	sub	fp,r17,r21
    1c6c:	6007883a 	mov	r3,r12
    1c70:	003b9706 	br	ad0 <___vfprintf_internal_r+0x624>
    1c74:	d8800717 	ldw	r2,28(sp)
    1c78:	d8c00617 	ldw	r3,24(sp)
    1c7c:	10800017 	ldw	r2,0(r2)
    1c80:	10c00015 	stw	r3,0(r2)
    1c84:	003ce106 	br	100c <___vfprintf_internal_r+0xb60>
    1c88:	00800084 	movi	r2,2
    1c8c:	003b6d06 	br	a44 <___vfprintf_internal_r+0x598>
    1c90:	d8c00717 	ldw	r3,28(sp)
    1c94:	6080040c 	andi	r2,r12,16
    1c98:	1d800017 	ldw	r22,0(r3)
    1c9c:	18c00104 	addi	r3,r3,4
    1ca0:	d8c00715 	stw	r3,28(sp)
    1ca4:	1000051e 	bne	r2,zero,1cbc <___vfprintf_internal_r+0x1810>
    1ca8:	6080100c 	andi	r2,r12,64
    1cac:	10000326 	beq	r2,zero,1cbc <___vfprintf_internal_r+0x1810>
    1cb0:	b5bfffcc 	andi	r22,r22,65535
    1cb4:	0039883a 	mov	fp,zero
    1cb8:	003f8706 	br	1ad8 <___vfprintf_internal_r+0x162c>
    1cbc:	0039883a 	mov	fp,zero
    1cc0:	003f8506 	br	1ad8 <___vfprintf_internal_r+0x162c>
    1cc4:	d9400417 	ldw	r5,16(sp)
    1cc8:	d9000517 	ldw	r4,20(sp)
    1ccc:	d9801d04 	addi	r6,sp,116
    1cd0:	db401015 	stw	r13,64(sp)
    1cd4:	da800f15 	stw	r10,60(sp)
    1cd8:	d8c00815 	stw	r3,32(sp)
    1cdc:	0007edc0 	call	7edc <__sprint_r>
    1ce0:	103afe1e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    1ce4:	dd801f17 	ldw	r22,124(sp)
    1ce8:	df001e17 	ldw	fp,120(sp)
    1cec:	db401017 	ldw	r13,64(sp)
    1cf0:	da800f17 	ldw	r10,60(sp)
    1cf4:	d8c00817 	ldw	r3,32(sp)
    1cf8:	8825883a 	mov	r18,r17
    1cfc:	003dc006 	br	1400 <___vfprintf_internal_r+0xf54>
    1d00:	d9400417 	ldw	r5,16(sp)
    1d04:	d9000517 	ldw	r4,20(sp)
    1d08:	d9801d04 	addi	r6,sp,116
    1d0c:	db401015 	stw	r13,64(sp)
    1d10:	da800f15 	stw	r10,60(sp)
    1d14:	d8c00815 	stw	r3,32(sp)
    1d18:	0007edc0 	call	7edc <__sprint_r>
    1d1c:	103aef1e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    1d20:	ddc01f17 	ldw	r23,124(sp)
    1d24:	df001e17 	ldw	fp,120(sp)
    1d28:	db401017 	ldw	r13,64(sp)
    1d2c:	da800f17 	ldw	r10,60(sp)
    1d30:	d8c00817 	ldw	r3,32(sp)
    1d34:	8825883a 	mov	r18,r17
    1d38:	003dbc06 	br	142c <___vfprintf_internal_r+0xf80>
    1d3c:	d9400417 	ldw	r5,16(sp)
    1d40:	d9000517 	ldw	r4,20(sp)
    1d44:	d9801d04 	addi	r6,sp,116
    1d48:	db401515 	stw	r13,84(sp)
    1d4c:	da801415 	stw	r10,80(sp)
    1d50:	d8c01315 	stw	r3,76(sp)
    1d54:	dac01115 	stw	r11,68(sp)
    1d58:	db001015 	stw	r12,64(sp)
    1d5c:	db800f15 	stw	r14,60(sp)
    1d60:	0007edc0 	call	7edc <__sprint_r>
    1d64:	103add1e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    1d68:	db401517 	ldw	r13,84(sp)
    1d6c:	da801417 	ldw	r10,80(sp)
    1d70:	d8c01317 	ldw	r3,76(sp)
    1d74:	dac01117 	ldw	r11,68(sp)
    1d78:	db001017 	ldw	r12,64(sp)
    1d7c:	db800f17 	ldw	r14,60(sp)
    1d80:	8821883a 	mov	r16,r17
    1d84:	003a9906 	br	7ec <___vfprintf_internal_r+0x340>
    1d88:	d8801e17 	ldw	r2,120(sp)
    1d8c:	01400074 	movhi	r5,1
    1d90:	29417804 	addi	r5,r5,1504
    1d94:	10800044 	addi	r2,r2,1
    1d98:	b1000044 	addi	r4,r22,1
    1d9c:	81400015 	stw	r5,0(r16)
    1da0:	01400044 	movi	r5,1
    1da4:	d8801e15 	stw	r2,120(sp)
    1da8:	81400115 	stw	r5,4(r16)
    1dac:	d9001f15 	stw	r4,124(sp)
    1db0:	10800208 	cmpgei	r2,r2,8
    1db4:	1001121e 	bne	r2,zero,2200 <___vfprintf_internal_r+0x1d54>
    1db8:	84000204 	addi	r16,r16,8
    1dbc:	9000ac1e 	bne	r18,zero,2070 <___vfprintf_internal_r+0x1bc4>
    1dc0:	d9400917 	ldw	r5,36(sp)
    1dc4:	1880004c 	andi	r2,r3,1
    1dc8:	1144b03a 	or	r2,r2,r5
    1dcc:	103ab326 	beq	r2,zero,89c <___vfprintf_internal_r+0x3f0>
    1dd0:	d8800d17 	ldw	r2,52(sp)
    1dd4:	d9400c17 	ldw	r5,48(sp)
    1dd8:	80800015 	stw	r2,0(r16)
    1ddc:	d8801e17 	ldw	r2,120(sp)
    1de0:	2909883a 	add	r4,r5,r4
    1de4:	81400115 	stw	r5,4(r16)
    1de8:	10800044 	addi	r2,r2,1
    1dec:	d9001f15 	stw	r4,124(sp)
    1df0:	d8801e15 	stw	r2,120(sp)
    1df4:	11400208 	cmpgei	r5,r2,8
    1df8:	28011b1e 	bne	r5,zero,2268 <___vfprintf_internal_r+0x1dbc>
    1dfc:	84000204 	addi	r16,r16,8
    1e00:	d9400917 	ldw	r5,36(sp)
    1e04:	10800044 	addi	r2,r2,1
    1e08:	d8801e15 	stw	r2,120(sp)
    1e0c:	2909883a 	add	r4,r5,r4
    1e10:	85400015 	stw	r21,0(r16)
    1e14:	81400115 	stw	r5,4(r16)
    1e18:	d9001f15 	stw	r4,124(sp)
    1e1c:	10800208 	cmpgei	r2,r2,8
    1e20:	103a9d26 	beq	r2,zero,898 <___vfprintf_internal_r+0x3ec>
    1e24:	003df906 	br	160c <___vfprintf_internal_r+0x1160>
    1e28:	d9000a17 	ldw	r4,40(sp)
    1e2c:	d9400b17 	ldw	r5,44(sp)
    1e30:	da800f15 	stw	r10,60(sp)
    1e34:	200d883a 	mov	r6,r4
    1e38:	280f883a 	mov	r7,r5
    1e3c:	db000815 	stw	r12,32(sp)
    1e40:	dac00715 	stw	r11,28(sp)
    1e44:	000d6d40 	call	d6d4 <__unorddf2>
    1e48:	dac00717 	ldw	r11,28(sp)
    1e4c:	db000817 	ldw	r12,32(sp)
    1e50:	da800f17 	ldw	r10,60(sp)
    1e54:	10026c1e 	bne	r2,zero,2808 <___vfprintf_internal_r+0x235c>
    1e58:	057ff7c4 	movi	r21,-33
    1e5c:	90bfffe0 	cmpeqi	r2,r18,-1
    1e60:	5d6e703a 	and	r23,r11,r21
    1e64:	1001f21e 	bne	r2,zero,2630 <___vfprintf_internal_r+0x2184>
    1e68:	b88011d8 	cmpnei	r2,r23,71
    1e6c:	1001de26 	beq	r2,zero,25e8 <___vfprintf_internal_r+0x213c>
    1e70:	d8800b17 	ldw	r2,44(sp)
    1e74:	60c04014 	ori	r3,r12,256
    1e78:	1000f016 	blt	r2,zero,223c <___vfprintf_internal_r+0x1d90>
    1e7c:	df000b17 	ldw	fp,44(sp)
    1e80:	d8000705 	stb	zero,28(sp)
    1e84:	588019a0 	cmpeqi	r2,r11,102
    1e88:	d8800f15 	stw	r2,60(sp)
    1e8c:	1001911e 	bne	r2,zero,24d4 <___vfprintf_internal_r+0x2028>
    1e90:	b8801158 	cmpnei	r2,r23,69
    1e94:	10010526 	beq	r2,zero,22ac <___vfprintf_internal_r+0x1e00>
    1e98:	d8801b04 	addi	r2,sp,108
    1e9c:	d9000517 	ldw	r4,20(sp)
    1ea0:	d8800315 	stw	r2,12(sp)
    1ea4:	d9400a17 	ldw	r5,40(sp)
    1ea8:	d8801804 	addi	r2,sp,96
    1eac:	d8800215 	stw	r2,8(sp)
    1eb0:	d8801704 	addi	r2,sp,92
    1eb4:	d8800115 	stw	r2,4(sp)
    1eb8:	dc800015 	stw	r18,0(sp)
    1ebc:	01c00084 	movi	r7,2
    1ec0:	e00d883a 	mov	r6,fp
    1ec4:	da801115 	stw	r10,68(sp)
    1ec8:	d8c01015 	stw	r3,64(sp)
    1ecc:	db000915 	stw	r12,36(sp)
    1ed0:	dac00815 	stw	r11,32(sp)
    1ed4:	0002da00 	call	2da0 <_dtoa_r>
    1ed8:	dac00817 	ldw	r11,32(sp)
    1edc:	db000917 	ldw	r12,36(sp)
    1ee0:	d8c01017 	ldw	r3,64(sp)
    1ee4:	590019e0 	cmpeqi	r4,r11,103
    1ee8:	da801117 	ldw	r10,68(sp)
    1eec:	102b883a 	mov	r21,r2
    1ef0:	20011a26 	beq	r4,zero,235c <___vfprintf_internal_r+0x1eb0>
    1ef4:	6080004c 	andi	r2,r12,1
    1ef8:	10011a26 	beq	r2,zero,2364 <___vfprintf_internal_r+0x1eb8>
    1efc:	ac9b883a 	add	r13,r21,r18
    1f00:	d9000a17 	ldw	r4,40(sp)
    1f04:	000d883a 	mov	r6,zero
    1f08:	000f883a 	mov	r7,zero
    1f0c:	e00b883a 	mov	r5,fp
    1f10:	db401315 	stw	r13,76(sp)
    1f14:	da801115 	stw	r10,68(sp)
    1f18:	d8c01015 	stw	r3,64(sp)
    1f1c:	db000915 	stw	r12,36(sp)
    1f20:	dac00815 	stw	r11,32(sp)
    1f24:	000c2a80 	call	c2a8 <__eqdf2>
    1f28:	dac00817 	ldw	r11,32(sp)
    1f2c:	db000917 	ldw	r12,36(sp)
    1f30:	d8c01017 	ldw	r3,64(sp)
    1f34:	da801117 	ldw	r10,68(sp)
    1f38:	db401317 	ldw	r13,76(sp)
    1f3c:	10025826 	beq	r2,zero,28a0 <___vfprintf_internal_r+0x23f4>
    1f40:	d8801b17 	ldw	r2,108(sp)
    1f44:	1340062e 	bgeu	r2,r13,1f60 <___vfprintf_internal_r+0x1ab4>
    1f48:	01400c04 	movi	r5,48
    1f4c:	11000044 	addi	r4,r2,1
    1f50:	d9001b15 	stw	r4,108(sp)
    1f54:	11400005 	stb	r5,0(r2)
    1f58:	d8801b17 	ldw	r2,108(sp)
    1f5c:	137ffb36 	bltu	r2,r13,1f4c <___vfprintf_internal_r+0x1aa0>
    1f60:	d9c01717 	ldw	r7,92(sp)
    1f64:	1545c83a 	sub	r2,r2,r21
    1f68:	b90011d8 	cmpnei	r4,r23,71
    1f6c:	d8800915 	stw	r2,36(sp)
    1f70:	d9c00815 	stw	r7,32(sp)
    1f74:	2000ff26 	beq	r4,zero,2374 <___vfprintf_internal_r+0x1ec8>
    1f78:	d8800f17 	ldw	r2,60(sp)
    1f7c:	10024226 	beq	r2,zero,2888 <___vfprintf_internal_r+0x23dc>
    1f80:	d9000817 	ldw	r4,32(sp)
    1f84:	6080004c 	andi	r2,r12,1
    1f88:	1484b03a 	or	r2,r2,r18
    1f8c:	0102620e 	bge	zero,r4,2918 <___vfprintf_internal_r+0x246c>
    1f90:	1002471e 	bne	r2,zero,28b0 <___vfprintf_internal_r+0x2404>
    1f94:	df000817 	ldw	fp,32(sp)
    1f98:	e01b883a 	mov	r13,fp
    1f9c:	02c01984 	movi	r11,102
    1fa0:	ddc00707 	ldb	r23,28(sp)
    1fa4:	b8014726 	beq	r23,zero,24c4 <___vfprintf_internal_r+0x2018>
    1fa8:	00800b44 	movi	r2,45
    1fac:	d8801645 	stb	r2,89(sp)
    1fb0:	dd800715 	stw	r22,28(sp)
    1fb4:	0025883a 	mov	r18,zero
    1fb8:	003acd06 	br	af0 <___vfprintf_internal_r+0x644>
    1fbc:	d9400417 	ldw	r5,16(sp)
    1fc0:	d9000517 	ldw	r4,20(sp)
    1fc4:	d9801d04 	addi	r6,sp,116
    1fc8:	db401015 	stw	r13,64(sp)
    1fcc:	da800f15 	stw	r10,60(sp)
    1fd0:	d8c00815 	stw	r3,32(sp)
    1fd4:	0007edc0 	call	7edc <__sprint_r>
    1fd8:	103a401e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    1fdc:	dd801f17 	ldw	r22,124(sp)
    1fe0:	db401017 	ldw	r13,64(sp)
    1fe4:	da800f17 	ldw	r10,60(sp)
    1fe8:	d8c00817 	ldw	r3,32(sp)
    1fec:	8821883a 	mov	r16,r17
    1ff0:	003c2506 	br	1088 <___vfprintf_internal_r+0xbdc>
    1ff4:	d9400417 	ldw	r5,16(sp)
    1ff8:	d9000517 	ldw	r4,20(sp)
    1ffc:	d9801d04 	addi	r6,sp,116
    2000:	db401015 	stw	r13,64(sp)
    2004:	da800f15 	stw	r10,60(sp)
    2008:	d8c00815 	stw	r3,32(sp)
    200c:	0007edc0 	call	7edc <__sprint_r>
    2010:	103a321e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    2014:	ddc01f17 	ldw	r23,124(sp)
    2018:	df001e17 	ldw	fp,120(sp)
    201c:	d8c00817 	ldw	r3,32(sp)
    2020:	da800f17 	ldw	r10,60(sp)
    2024:	db401017 	ldw	r13,64(sp)
    2028:	8825883a 	mov	r18,r17
    202c:	003d1706 	br	148c <___vfprintf_internal_r+0xfe0>
    2030:	d9400417 	ldw	r5,16(sp)
    2034:	d9000517 	ldw	r4,20(sp)
    2038:	d9801d04 	addi	r6,sp,116
    203c:	db401315 	stw	r13,76(sp)
    2040:	da801115 	stw	r10,68(sp)
    2044:	d8c01015 	stw	r3,64(sp)
    2048:	dac00f15 	stw	r11,60(sp)
    204c:	0007edc0 	call	7edc <__sprint_r>
    2050:	103a221e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    2054:	dd801f17 	ldw	r22,124(sp)
    2058:	db401317 	ldw	r13,76(sp)
    205c:	da801117 	ldw	r10,68(sp)
    2060:	d8c01017 	ldw	r3,64(sp)
    2064:	dac00f17 	ldw	r11,60(sp)
    2068:	8821883a 	mov	r16,r17
    206c:	0039fd06 	br	864 <___vfprintf_internal_r+0x3b8>
    2070:	d8800d17 	ldw	r2,52(sp)
    2074:	d9400c17 	ldw	r5,48(sp)
    2078:	80800015 	stw	r2,0(r16)
    207c:	d8801e17 	ldw	r2,120(sp)
    2080:	2909883a 	add	r4,r5,r4
    2084:	81400115 	stw	r5,4(r16)
    2088:	10800044 	addi	r2,r2,1
    208c:	d9001f15 	stw	r4,124(sp)
    2090:	d8801e15 	stw	r2,120(sp)
    2094:	11400208 	cmpgei	r5,r2,8
    2098:	2800731e 	bne	r5,zero,2268 <___vfprintf_internal_r+0x1dbc>
    209c:	84000204 	addi	r16,r16,8
    20a0:	903f570e 	bge	r18,zero,1e00 <___vfprintf_internal_r+0x1954>
    20a4:	05800074 	movhi	r22,1
    20a8:	917ffc08 	cmpgei	r5,r18,-16
    20ac:	b5817904 	addi	r22,r22,1508
    20b0:	04a5c83a 	sub	r18,zero,r18
    20b4:	2801a91e 	bne	r5,zero,275c <___vfprintf_internal_r+0x22b0>
    20b8:	1839883a 	mov	fp,r3
    20bc:	05c00404 	movi	r23,16
    20c0:	8007883a 	mov	r3,r16
    20c4:	da800815 	stw	r10,32(sp)
    20c8:	b021883a 	mov	r16,r22
    20cc:	902d883a 	mov	r22,r18
    20d0:	6825883a 	mov	r18,r13
    20d4:	00000406 	br	20e8 <___vfprintf_internal_r+0x1c3c>
    20d8:	18c00204 	addi	r3,r3,8
    20dc:	b5bffc04 	addi	r22,r22,-16
    20e0:	b1400448 	cmpgei	r5,r22,17
    20e4:	28019726 	beq	r5,zero,2744 <___vfprintf_internal_r+0x2298>
    20e8:	10800044 	addi	r2,r2,1
    20ec:	21000404 	addi	r4,r4,16
    20f0:	1c000015 	stw	r16,0(r3)
    20f4:	1dc00115 	stw	r23,4(r3)
    20f8:	d9001f15 	stw	r4,124(sp)
    20fc:	d8801e15 	stw	r2,120(sp)
    2100:	11400208 	cmpgei	r5,r2,8
    2104:	283ff426 	beq	r5,zero,20d8 <___vfprintf_internal_r+0x1c2c>
    2108:	d9400417 	ldw	r5,16(sp)
    210c:	d9000517 	ldw	r4,20(sp)
    2110:	d9801d04 	addi	r6,sp,116
    2114:	0007edc0 	call	7edc <__sprint_r>
    2118:	1039f01e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    211c:	d9001f17 	ldw	r4,124(sp)
    2120:	d8801e17 	ldw	r2,120(sp)
    2124:	8807883a 	mov	r3,r17
    2128:	003fec06 	br	20dc <___vfprintf_internal_r+0x1c30>
    212c:	a015883a 	mov	r10,r20
    2130:	b01b883a 	mov	r13,r22
    2134:	b829883a 	mov	r20,r23
    2138:	902d883a 	mov	r22,r18
    213c:	202f883a 	mov	r23,r4
    2140:	1825883a 	mov	r18,r3
    2144:	9807883a 	mov	r3,r19
    2148:	e027883a 	mov	r19,fp
    214c:	1039883a 	mov	fp,r2
    2150:	e7000044 	addi	fp,fp,1
    2154:	bc2f883a 	add	r23,r23,r16
    2158:	95800015 	stw	r22,0(r18)
    215c:	003cc506 	br	1474 <___vfprintf_internal_r+0xfc8>
    2160:	a809883a 	mov	r4,r21
    2164:	da801015 	stw	r10,64(sp)
    2168:	db000f15 	stw	r12,60(sp)
    216c:	dac00815 	stw	r11,32(sp)
    2170:	00004140 	call	414 <strlen>
    2174:	dac00817 	ldw	r11,32(sp)
    2178:	db000f17 	ldw	r12,60(sp)
    217c:	da801017 	ldw	r10,64(sp)
    2180:	1039883a 	mov	fp,r2
    2184:	101b883a 	mov	r13,r2
    2188:	dd800715 	stw	r22,28(sp)
    218c:	00398d06 	br	7c4 <___vfprintf_internal_r+0x318>
    2190:	05400074 	movhi	r21,1
    2194:	ad416804 	addi	r21,r21,1440
    2198:	003adf06 	br	d18 <___vfprintf_internal_r+0x86c>
    219c:	05800074 	movhi	r22,1
    21a0:	b5817904 	addi	r22,r22,1508
    21a4:	003c6006 	br	1328 <___vfprintf_internal_r+0xe7c>
    21a8:	981b883a 	mov	r13,r19
    21ac:	b027883a 	mov	r19,r22
    21b0:	802d883a 	mov	r22,r16
    21b4:	1821883a 	mov	r16,r3
    21b8:	d8c00f17 	ldw	r3,60(sp)
    21bc:	9015883a 	mov	r10,r18
    21c0:	e025883a 	mov	r18,fp
    21c4:	10800044 	addi	r2,r2,1
    21c8:	9109883a 	add	r4,r18,r4
    21cc:	d8801e15 	stw	r2,120(sp)
    21d0:	85800015 	stw	r22,0(r16)
    21d4:	84800115 	stw	r18,4(r16)
    21d8:	d9001f15 	stw	r4,124(sp)
    21dc:	10800208 	cmpgei	r2,r2,8
    21e0:	1000501e 	bne	r2,zero,2324 <___vfprintf_internal_r+0x1e78>
    21e4:	84000204 	addi	r16,r16,8
    21e8:	202d883a 	mov	r22,r4
    21ec:	003d5006 	br	1730 <___vfprintf_internal_r+0x1284>
    21f0:	00800b44 	movi	r2,45
    21f4:	d8801645 	stb	r2,89(sp)
    21f8:	05c00b44 	movi	r23,45
    21fc:	003ac206 	br	d08 <___vfprintf_internal_r+0x85c>
    2200:	d9400417 	ldw	r5,16(sp)
    2204:	d9000517 	ldw	r4,20(sp)
    2208:	d9801d04 	addi	r6,sp,116
    220c:	db401015 	stw	r13,64(sp)
    2210:	da800f15 	stw	r10,60(sp)
    2214:	d8c00815 	stw	r3,32(sp)
    2218:	0007edc0 	call	7edc <__sprint_r>
    221c:	1039af1e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    2220:	dc801717 	ldw	r18,92(sp)
    2224:	d9001f17 	ldw	r4,124(sp)
    2228:	db401017 	ldw	r13,64(sp)
    222c:	da800f17 	ldw	r10,60(sp)
    2230:	d8c00817 	ldw	r3,32(sp)
    2234:	8821883a 	mov	r16,r17
    2238:	003ee006 	br	1dbc <___vfprintf_internal_r+0x1910>
    223c:	1720003c 	xorhi	fp,r2,32768
    2240:	00800b44 	movi	r2,45
    2244:	d8800705 	stb	r2,28(sp)
    2248:	003f0e06 	br	1e84 <___vfprintf_internal_r+0x19d8>
    224c:	07000184 	movi	fp,6
    2250:	003e2e06 	br	1b0c <___vfprintf_internal_r+0x1660>
    2254:	d9400417 	ldw	r5,16(sp)
    2258:	d9000517 	ldw	r4,20(sp)
    225c:	d9801d04 	addi	r6,sp,116
    2260:	0007edc0 	call	7edc <__sprint_r>
    2264:	00399d06 	br	8dc <___vfprintf_internal_r+0x430>
    2268:	d9400417 	ldw	r5,16(sp)
    226c:	d9000517 	ldw	r4,20(sp)
    2270:	d9801d04 	addi	r6,sp,116
    2274:	db401015 	stw	r13,64(sp)
    2278:	da800f15 	stw	r10,60(sp)
    227c:	d8c00815 	stw	r3,32(sp)
    2280:	0007edc0 	call	7edc <__sprint_r>
    2284:	1039951e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    2288:	dc801717 	ldw	r18,92(sp)
    228c:	d9001f17 	ldw	r4,124(sp)
    2290:	d8801e17 	ldw	r2,120(sp)
    2294:	db401017 	ldw	r13,64(sp)
    2298:	da800f17 	ldw	r10,60(sp)
    229c:	d8c00817 	ldw	r3,32(sp)
    22a0:	8821883a 	mov	r16,r17
    22a4:	903ed60e 	bge	r18,zero,1e00 <___vfprintf_internal_r+0x1954>
    22a8:	003f7e06 	br	20a4 <___vfprintf_internal_r+0x1bf8>
    22ac:	d8801b04 	addi	r2,sp,108
    22b0:	d8800315 	stw	r2,12(sp)
    22b4:	d9400a17 	ldw	r5,40(sp)
    22b8:	d8801804 	addi	r2,sp,96
    22bc:	d9000517 	ldw	r4,20(sp)
    22c0:	d8c01115 	stw	r3,68(sp)
    22c4:	d8800215 	stw	r2,8(sp)
    22c8:	90c00044 	addi	r3,r18,1
    22cc:	d8801704 	addi	r2,sp,92
    22d0:	d8c00015 	stw	r3,0(sp)
    22d4:	d8800115 	stw	r2,4(sp)
    22d8:	01c00084 	movi	r7,2
    22dc:	e00d883a 	mov	r6,fp
    22e0:	da801315 	stw	r10,76(sp)
    22e4:	db001015 	stw	r12,64(sp)
    22e8:	dac00815 	stw	r11,32(sp)
    22ec:	d8c00915 	stw	r3,36(sp)
    22f0:	0002da00 	call	2da0 <_dtoa_r>
    22f4:	dac00817 	ldw	r11,32(sp)
    22f8:	db001017 	ldw	r12,64(sp)
    22fc:	d8c01117 	ldw	r3,68(sp)
    2300:	da801317 	ldw	r10,76(sp)
    2304:	102b883a 	mov	r21,r2
    2308:	588011d8 	cmpnei	r2,r11,71
    230c:	10014d1e 	bne	r2,zero,2844 <___vfprintf_internal_r+0x2398>
    2310:	6080004c 	andi	r2,r12,1
    2314:	10001326 	beq	r2,zero,2364 <___vfprintf_internal_r+0x1eb8>
    2318:	d8800917 	ldw	r2,36(sp)
    231c:	a89b883a 	add	r13,r21,r2
    2320:	003ef706 	br	1f00 <___vfprintf_internal_r+0x1a54>
    2324:	d9400417 	ldw	r5,16(sp)
    2328:	d9000517 	ldw	r4,20(sp)
    232c:	d9801d04 	addi	r6,sp,116
    2330:	db401115 	stw	r13,68(sp)
    2334:	da801015 	stw	r10,64(sp)
    2338:	d8c00f15 	stw	r3,60(sp)
    233c:	0007edc0 	call	7edc <__sprint_r>
    2340:	1039661e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    2344:	dd801f17 	ldw	r22,124(sp)
    2348:	db401117 	ldw	r13,68(sp)
    234c:	da801017 	ldw	r10,64(sp)
    2350:	d8c00f17 	ldw	r3,60(sp)
    2354:	8821883a 	mov	r16,r17
    2358:	003cf506 	br	1730 <___vfprintf_internal_r+0x1284>
    235c:	dc800915 	stw	r18,36(sp)
    2360:	003fe906 	br	2308 <___vfprintf_internal_r+0x1e5c>
    2364:	d8801b17 	ldw	r2,108(sp)
    2368:	d9c01717 	ldw	r7,92(sp)
    236c:	1545c83a 	sub	r2,r2,r21
    2370:	d8800915 	stw	r2,36(sp)
    2374:	38bfff48 	cmpgei	r2,r7,-3
    2378:	d9c00815 	stw	r7,32(sp)
    237c:	1000bf1e 	bne	r2,zero,267c <___vfprintf_internal_r+0x21d0>
    2380:	5affff84 	addi	r11,r11,-2
    2384:	397fffc4 	addi	r5,r7,-1
    2388:	5805883a 	mov	r2,r11
    238c:	01000044 	movi	r4,1
    2390:	21efc83a 	sub	r23,r4,r7
    2394:	01000b44 	movi	r4,45
    2398:	21003fcc 	andi	r4,r4,255
    239c:	2008923a 	slli	r4,r4,8
    23a0:	10803fcc 	andi	r2,r2,255
    23a4:	d9401715 	stw	r5,92(sp)
    23a8:	1104b03a 	or	r2,r2,r4
    23ac:	d880190d 	sth	r2,100(sp)
    23b0:	b8800290 	cmplti	r2,r23,10
    23b4:	1000c61e 	bne	r2,zero,26d0 <___vfprintf_internal_r+0x2224>
    23b8:	df001cc4 	addi	fp,sp,115
    23bc:	9805883a 	mov	r2,r19
    23c0:	d8c01015 	stw	r3,64(sp)
    23c4:	a007883a 	mov	r3,r20
    23c8:	e027883a 	mov	r19,fp
    23cc:	8029883a 	mov	r20,r16
    23d0:	dac00815 	stw	r11,32(sp)
    23d4:	b821883a 	mov	r16,r23
    23d8:	db000f15 	stw	r12,60(sp)
    23dc:	da801115 	stw	r10,68(sp)
    23e0:	1039883a 	mov	fp,r2
    23e4:	182f883a 	mov	r23,r3
    23e8:	8009883a 	mov	r4,r16
    23ec:	01400284 	movi	r5,10
    23f0:	000af5c0 	call	af5c <__modsi3>
    23f4:	10800c04 	addi	r2,r2,48
    23f8:	8009883a 	mov	r4,r16
    23fc:	01400284 	movi	r5,10
    2400:	98bfffc5 	stb	r2,-1(r19)
    2404:	000aedc0 	call	aedc <__divsi3>
    2408:	81401908 	cmpgei	r5,r16,100
    240c:	9825883a 	mov	r18,r19
    2410:	1021883a 	mov	r16,r2
    2414:	9cffffc4 	addi	r19,r19,-1
    2418:	283ff31e 	bne	r5,zero,23e8 <___vfprintf_internal_r+0x1f3c>
    241c:	b809883a 	mov	r4,r23
    2420:	102f883a 	mov	r23,r2
    2424:	e005883a 	mov	r2,fp
    2428:	9839883a 	mov	fp,r19
    242c:	1027883a 	mov	r19,r2
    2430:	b8800c04 	addi	r2,r23,48
    2434:	e0bfffc5 	stb	r2,-1(fp)
    2438:	917fff84 	addi	r5,r18,-2
    243c:	d8801cc4 	addi	r2,sp,115
    2440:	a021883a 	mov	r16,r20
    2444:	dac00817 	ldw	r11,32(sp)
    2448:	db000f17 	ldw	r12,60(sp)
    244c:	d8c01017 	ldw	r3,64(sp)
    2450:	da801117 	ldw	r10,68(sp)
    2454:	2029883a 	mov	r20,r4
    2458:	28813d2e 	bgeu	r5,r2,2950 <___vfprintf_internal_r+0x24a4>
    245c:	d8801d44 	addi	r2,sp,117
    2460:	14a5c83a 	sub	r18,r2,r18
    2464:	d9001984 	addi	r4,sp,102
    2468:	900d883a 	mov	r6,r18
    246c:	00061100 	call	6110 <memcpy>
    2470:	d8801984 	addi	r2,sp,102
    2474:	1485883a 	add	r2,r2,r18
    2478:	d9001904 	addi	r4,sp,100
    247c:	dac00817 	ldw	r11,32(sp)
    2480:	db000f17 	ldw	r12,60(sp)
    2484:	d8c01017 	ldw	r3,64(sp)
    2488:	da801117 	ldw	r10,68(sp)
    248c:	1105c83a 	sub	r2,r2,r4
    2490:	d8801215 	stw	r2,72(sp)
    2494:	d9000917 	ldw	r4,36(sp)
    2498:	d9401217 	ldw	r5,72(sp)
    249c:	20800088 	cmpgei	r2,r4,2
    24a0:	2179883a 	add	fp,r4,r5
    24a4:	10009126 	beq	r2,zero,26ec <___vfprintf_internal_r+0x2240>
    24a8:	d8800c17 	ldw	r2,48(sp)
    24ac:	e0b9883a 	add	fp,fp,r2
    24b0:	e01b883a 	mov	r13,fp
    24b4:	e000010e 	bge	fp,zero,24bc <___vfprintf_internal_r+0x2010>
    24b8:	001b883a 	mov	r13,zero
    24bc:	d8000815 	stw	zero,32(sp)
    24c0:	003eb706 	br	1fa0 <___vfprintf_internal_r+0x1af4>
    24c4:	ddc01643 	ldbu	r23,89(sp)
    24c8:	dd800715 	stw	r22,28(sp)
    24cc:	0025883a 	mov	r18,zero
    24d0:	00398306 	br	ae0 <___vfprintf_internal_r+0x634>
    24d4:	d8801b04 	addi	r2,sp,108
    24d8:	d8800315 	stw	r2,12(sp)
    24dc:	d9400a17 	ldw	r5,40(sp)
    24e0:	d8801804 	addi	r2,sp,96
    24e4:	d9000517 	ldw	r4,20(sp)
    24e8:	d8800215 	stw	r2,8(sp)
    24ec:	d8801704 	addi	r2,sp,92
    24f0:	d8800115 	stw	r2,4(sp)
    24f4:	dc800015 	stw	r18,0(sp)
    24f8:	01c000c4 	movi	r7,3
    24fc:	e00d883a 	mov	r6,fp
    2500:	da801115 	stw	r10,68(sp)
    2504:	d8c01015 	stw	r3,64(sp)
    2508:	db000915 	stw	r12,36(sp)
    250c:	dac00815 	stw	r11,32(sp)
    2510:	0002da00 	call	2da0 <_dtoa_r>
    2514:	102b883a 	mov	r21,r2
    2518:	10800007 	ldb	r2,0(r2)
    251c:	dac00817 	ldw	r11,32(sp)
    2520:	db000917 	ldw	r12,36(sp)
    2524:	10800c20 	cmpeqi	r2,r2,48
    2528:	d8c01017 	ldw	r3,64(sp)
    252c:	da801117 	ldw	r10,68(sp)
    2530:	1000a31e 	bne	r2,zero,27c0 <___vfprintf_internal_r+0x2314>
    2534:	d8801717 	ldw	r2,92(sp)
    2538:	d9000a17 	ldw	r4,40(sp)
    253c:	149b883a 	add	r13,r2,r18
    2540:	000d883a 	mov	r6,zero
    2544:	000f883a 	mov	r7,zero
    2548:	e00b883a 	mov	r5,fp
    254c:	da801315 	stw	r10,76(sp)
    2550:	d8c01115 	stw	r3,68(sp)
    2554:	db001015 	stw	r12,64(sp)
    2558:	dac00915 	stw	r11,36(sp)
    255c:	db400815 	stw	r13,32(sp)
    2560:	000c2a80 	call	c2a8 <__eqdf2>
    2564:	db400817 	ldw	r13,32(sp)
    2568:	dac00917 	ldw	r11,36(sp)
    256c:	db001017 	ldw	r12,64(sp)
    2570:	d8c01117 	ldw	r3,68(sp)
    2574:	da801317 	ldw	r10,76(sp)
    2578:	10008f1e 	bne	r2,zero,27b8 <___vfprintf_internal_r+0x230c>
    257c:	d8801717 	ldw	r2,92(sp)
    2580:	db400915 	stw	r13,36(sp)
    2584:	d8800815 	stw	r2,32(sp)
    2588:	003e7d06 	br	1f80 <___vfprintf_internal_r+0x1ad4>
    258c:	d9400417 	ldw	r5,16(sp)
    2590:	d9000517 	ldw	r4,20(sp)
    2594:	d9801d04 	addi	r6,sp,116
    2598:	db401115 	stw	r13,68(sp)
    259c:	da801015 	stw	r10,64(sp)
    25a0:	d8c00f15 	stw	r3,60(sp)
    25a4:	0007edc0 	call	7edc <__sprint_r>
    25a8:	1038cc1e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    25ac:	dc801717 	ldw	r18,92(sp)
    25b0:	d9001f17 	ldw	r4,124(sp)
    25b4:	db401117 	ldw	r13,68(sp)
    25b8:	da801017 	ldw	r10,64(sp)
    25bc:	d8c00f17 	ldw	r3,60(sp)
    25c0:	8821883a 	mov	r16,r17
    25c4:	003c6906 	br	176c <___vfprintf_internal_r+0x12c0>
    25c8:	981b883a 	mov	r13,r19
    25cc:	da800f17 	ldw	r10,60(sp)
    25d0:	b027883a 	mov	r19,r22
    25d4:	902d883a 	mov	r22,r18
    25d8:	8025883a 	mov	r18,r16
    25dc:	1821883a 	mov	r16,r3
    25e0:	d8c00817 	ldw	r3,32(sp)
    25e4:	003c0106 	br	15ec <___vfprintf_internal_r+0x1140>
    25e8:	903e211e 	bne	r18,zero,1e70 <___vfprintf_internal_r+0x19c4>
    25ec:	04800044 	movi	r18,1
    25f0:	003e1f06 	br	1e70 <___vfprintf_internal_r+0x19c4>
    25f4:	d9400417 	ldw	r5,16(sp)
    25f8:	d9000517 	ldw	r4,20(sp)
    25fc:	d9801d04 	addi	r6,sp,116
    2600:	db401115 	stw	r13,68(sp)
    2604:	da801015 	stw	r10,64(sp)
    2608:	d8c00f15 	stw	r3,60(sp)
    260c:	0007edc0 	call	7edc <__sprint_r>
    2610:	1038b21e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    2614:	dd801f17 	ldw	r22,124(sp)
    2618:	db401117 	ldw	r13,68(sp)
    261c:	da801017 	ldw	r10,64(sp)
    2620:	d8c00f17 	ldw	r3,60(sp)
    2624:	8821883a 	mov	r16,r17
    2628:	903c3e0e 	bge	r18,zero,1724 <___vfprintf_internal_r+0x1278>
    262c:	003d1006 	br	1a70 <___vfprintf_internal_r+0x15c4>
    2630:	04800184 	movi	r18,6
    2634:	003e0e06 	br	1e70 <___vfprintf_internal_r+0x19c4>
    2638:	d9400417 	ldw	r5,16(sp)
    263c:	d9000517 	ldw	r4,20(sp)
    2640:	d9801d04 	addi	r6,sp,116
    2644:	db401015 	stw	r13,64(sp)
    2648:	da800f15 	stw	r10,60(sp)
    264c:	d8c00815 	stw	r3,32(sp)
    2650:	0007edc0 	call	7edc <__sprint_r>
    2654:	1038a11e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    2658:	dc801717 	ldw	r18,92(sp)
    265c:	d8800917 	ldw	r2,36(sp)
    2660:	d9001f17 	ldw	r4,124(sp)
    2664:	db401017 	ldw	r13,64(sp)
    2668:	da800f17 	ldw	r10,60(sp)
    266c:	d8c00817 	ldw	r3,32(sp)
    2670:	8821883a 	mov	r16,r17
    2674:	14a5c83a 	sub	r18,r2,r18
    2678:	003c4f06 	br	17b8 <___vfprintf_internal_r+0x130c>
    267c:	91c0060e 	bge	r18,r7,2698 <___vfprintf_internal_r+0x21ec>
    2680:	5affff84 	addi	r11,r11,-2
    2684:	3dffffc4 	addi	r23,r7,-1
    2688:	5805883a 	mov	r2,r11
    268c:	b80b883a 	mov	r5,r23
    2690:	01000ac4 	movi	r4,43
    2694:	003f4006 	br	2398 <___vfprintf_internal_r+0x1eec>
    2698:	d9000917 	ldw	r4,36(sp)
    269c:	39001a16 	blt	r7,r4,2708 <___vfprintf_internal_r+0x225c>
    26a0:	6300004c 	andi	r12,r12,1
    26a4:	6000601e 	bne	r12,zero,2828 <___vfprintf_internal_r+0x237c>
    26a8:	381b883a 	mov	r13,r7
    26ac:	3800010e 	bge	r7,zero,26b4 <___vfprintf_internal_r+0x2208>
    26b0:	001b883a 	mov	r13,zero
    26b4:	3839883a 	mov	fp,r7
    26b8:	02c019c4 	movi	r11,103
    26bc:	003e3806 	br	1fa0 <___vfprintf_internal_r+0x1af4>
    26c0:	901b883a 	mov	r13,r18
    26c4:	dd800715 	stw	r22,28(sp)
    26c8:	9039883a 	mov	fp,r18
    26cc:	00383d06 	br	7c4 <___vfprintf_internal_r+0x318>
    26d0:	b8800c04 	addi	r2,r23,48
    26d4:	01000c04 	movi	r4,48
    26d8:	d88019c5 	stb	r2,103(sp)
    26dc:	00800104 	movi	r2,4
    26e0:	d9001985 	stb	r4,102(sp)
    26e4:	d8801215 	stw	r2,72(sp)
    26e8:	003f6a06 	br	2494 <___vfprintf_internal_r+0x1fe8>
    26ec:	6080004c 	andi	r2,r12,1
    26f0:	d8800815 	stw	r2,32(sp)
    26f4:	103f6c1e 	bne	r2,zero,24a8 <___vfprintf_internal_r+0x1ffc>
    26f8:	e01b883a 	mov	r13,fp
    26fc:	e03e280e 	bge	fp,zero,1fa0 <___vfprintf_internal_r+0x1af4>
    2700:	001b883a 	mov	r13,zero
    2704:	003e2606 	br	1fa0 <___vfprintf_internal_r+0x1af4>
    2708:	d8800917 	ldw	r2,36(sp)
    270c:	d9000c17 	ldw	r4,48(sp)
    2710:	1139883a 	add	fp,r2,r4
    2714:	d8800817 	ldw	r2,32(sp)
    2718:	00800316 	blt	zero,r2,2728 <___vfprintf_internal_r+0x227c>
    271c:	d8800817 	ldw	r2,32(sp)
    2720:	e08fc83a 	sub	r7,fp,r2
    2724:	3f000044 	addi	fp,r7,1
    2728:	e01b883a 	mov	r13,fp
    272c:	e0004316 	blt	fp,zero,283c <___vfprintf_internal_r+0x2390>
    2730:	02c019c4 	movi	r11,103
    2734:	003e1a06 	br	1fa0 <___vfprintf_internal_r+0x1af4>
    2738:	00bfffc4 	movi	r2,-1
    273c:	d8800615 	stw	r2,24(sp)
    2740:	00386a06 	br	8ec <___vfprintf_internal_r+0x440>
    2744:	da800817 	ldw	r10,32(sp)
    2748:	901b883a 	mov	r13,r18
    274c:	b025883a 	mov	r18,r22
    2750:	802d883a 	mov	r22,r16
    2754:	1821883a 	mov	r16,r3
    2758:	e007883a 	mov	r3,fp
    275c:	10800044 	addi	r2,r2,1
    2760:	2489883a 	add	r4,r4,r18
    2764:	85800015 	stw	r22,0(r16)
    2768:	84800115 	stw	r18,4(r16)
    276c:	d9001f15 	stw	r4,124(sp)
    2770:	d8801e15 	stw	r2,120(sp)
    2774:	11400208 	cmpgei	r5,r2,8
    2778:	283da026 	beq	r5,zero,1dfc <___vfprintf_internal_r+0x1950>
    277c:	d9400417 	ldw	r5,16(sp)
    2780:	d9000517 	ldw	r4,20(sp)
    2784:	d9801d04 	addi	r6,sp,116
    2788:	db401015 	stw	r13,64(sp)
    278c:	da800f15 	stw	r10,60(sp)
    2790:	d8c00815 	stw	r3,32(sp)
    2794:	0007edc0 	call	7edc <__sprint_r>
    2798:	1038501e 	bne	r2,zero,8dc <___vfprintf_internal_r+0x430>
    279c:	d9001f17 	ldw	r4,124(sp)
    27a0:	d8801e17 	ldw	r2,120(sp)
    27a4:	db401017 	ldw	r13,64(sp)
    27a8:	da800f17 	ldw	r10,60(sp)
    27ac:	d8c00817 	ldw	r3,32(sp)
    27b0:	8821883a 	mov	r16,r17
    27b4:	003d9206 	br	1e00 <___vfprintf_internal_r+0x1954>
    27b8:	ab5b883a 	add	r13,r21,r13
    27bc:	003de006 	br	1f40 <___vfprintf_internal_r+0x1a94>
    27c0:	d9000a17 	ldw	r4,40(sp)
    27c4:	000d883a 	mov	r6,zero
    27c8:	000f883a 	mov	r7,zero
    27cc:	e00b883a 	mov	r5,fp
    27d0:	da801115 	stw	r10,68(sp)
    27d4:	d8c01015 	stw	r3,64(sp)
    27d8:	db000915 	stw	r12,36(sp)
    27dc:	dac00815 	stw	r11,32(sp)
    27e0:	000c2a80 	call	c2a8 <__eqdf2>
    27e4:	dac00817 	ldw	r11,32(sp)
    27e8:	db000917 	ldw	r12,36(sp)
    27ec:	d8c01017 	ldw	r3,64(sp)
    27f0:	da801117 	ldw	r10,68(sp)
    27f4:	103f4f26 	beq	r2,zero,2534 <___vfprintf_internal_r+0x2088>
    27f8:	00800044 	movi	r2,1
    27fc:	1485c83a 	sub	r2,r2,r18
    2800:	d8801715 	stw	r2,92(sp)
    2804:	003f4c06 	br	2538 <___vfprintf_internal_r+0x208c>
    2808:	d8800b17 	ldw	r2,44(sp)
    280c:	10003216 	blt	r2,zero,28d8 <___vfprintf_internal_r+0x242c>
    2810:	ddc01643 	ldbu	r23,89(sp)
    2814:	58801210 	cmplti	r2,r11,72
    2818:	10002c1e 	bne	r2,zero,28cc <___vfprintf_internal_r+0x2420>
    281c:	05400074 	movhi	r21,1
    2820:	ad416b04 	addi	r21,r21,1452
    2824:	00393c06 	br	d18 <___vfprintf_internal_r+0x86c>
    2828:	d8800817 	ldw	r2,32(sp)
    282c:	d9000c17 	ldw	r4,48(sp)
    2830:	1139883a 	add	fp,r2,r4
    2834:	e01b883a 	mov	r13,fp
    2838:	e03fbd0e 	bge	fp,zero,2730 <___vfprintf_internal_r+0x2284>
    283c:	001b883a 	mov	r13,zero
    2840:	003fbb06 	br	2730 <___vfprintf_internal_r+0x2284>
    2844:	d9000a17 	ldw	r4,40(sp)
    2848:	000d883a 	mov	r6,zero
    284c:	000f883a 	mov	r7,zero
    2850:	e00b883a 	mov	r5,fp
    2854:	da801315 	stw	r10,76(sp)
    2858:	d8c01115 	stw	r3,68(sp)
    285c:	db001015 	stw	r12,64(sp)
    2860:	dac00815 	stw	r11,32(sp)
    2864:	000c2a80 	call	c2a8 <__eqdf2>
    2868:	dac00817 	ldw	r11,32(sp)
    286c:	db001017 	ldw	r12,64(sp)
    2870:	d8c01117 	ldw	r3,68(sp)
    2874:	da801317 	ldw	r10,76(sp)
    2878:	1000321e 	bne	r2,zero,2944 <___vfprintf_internal_r+0x2498>
    287c:	b88011e0 	cmpeqi	r2,r23,71
    2880:	d9c01717 	ldw	r7,92(sp)
    2884:	103ebb1e 	bne	r2,zero,2374 <___vfprintf_internal_r+0x1ec8>
    2888:	397fffc4 	addi	r5,r7,-1
    288c:	5805883a 	mov	r2,r11
    2890:	283ebe16 	blt	r5,zero,238c <___vfprintf_internal_r+0x1ee0>
    2894:	282f883a 	mov	r23,r5
    2898:	01000ac4 	movi	r4,43
    289c:	003ebe06 	br	2398 <___vfprintf_internal_r+0x1eec>
    28a0:	6d45c83a 	sub	r2,r13,r21
    28a4:	d9c01717 	ldw	r7,92(sp)
    28a8:	d8800915 	stw	r2,36(sp)
    28ac:	003eb106 	br	2374 <___vfprintf_internal_r+0x1ec8>
    28b0:	d8800c17 	ldw	r2,48(sp)
    28b4:	208f883a 	add	r7,r4,r2
    28b8:	3cb9883a 	add	fp,r7,r18
    28bc:	e01b883a 	mov	r13,fp
    28c0:	e03db60e 	bge	fp,zero,1f9c <___vfprintf_internal_r+0x1af0>
    28c4:	001b883a 	mov	r13,zero
    28c8:	003db406 	br	1f9c <___vfprintf_internal_r+0x1af0>
    28cc:	05400074 	movhi	r21,1
    28d0:	ad416a04 	addi	r21,r21,1448
    28d4:	00391006 	br	d18 <___vfprintf_internal_r+0x86c>
    28d8:	00800b44 	movi	r2,45
    28dc:	d8801645 	stb	r2,89(sp)
    28e0:	05c00b44 	movi	r23,45
    28e4:	003fcb06 	br	2814 <___vfprintf_internal_r+0x2368>
    28e8:	d8c00717 	ldw	r3,28(sp)
    28ec:	1c800017 	ldw	r18,0(r3)
    28f0:	18c00104 	addi	r3,r3,4
    28f4:	9000010e 	bge	r18,zero,28fc <___vfprintf_internal_r+0x2450>
    28f8:	04bfffc4 	movi	r18,-1
    28fc:	a2c00043 	ldbu	r11,1(r20)
    2900:	d8c00715 	stw	r3,28(sp)
    2904:	1029883a 	mov	r20,r2
    2908:	5ac03fcc 	andi	r11,r11,255
    290c:	5ac0201c 	xori	r11,r11,128
    2910:	5affe004 	addi	r11,r11,-128
    2914:	00373506 	br	5ec <___vfprintf_internal_r+0x140>
    2918:	1000041e 	bne	r2,zero,292c <___vfprintf_internal_r+0x2480>
    291c:	03400044 	movi	r13,1
    2920:	02c01984 	movi	r11,102
    2924:	07000044 	movi	fp,1
    2928:	003d9d06 	br	1fa0 <___vfprintf_internal_r+0x1af4>
    292c:	d8800c17 	ldw	r2,48(sp)
    2930:	11c00044 	addi	r7,r2,1
    2934:	3cb9883a 	add	fp,r7,r18
    2938:	e01b883a 	mov	r13,fp
    293c:	e03d970e 	bge	fp,zero,1f9c <___vfprintf_internal_r+0x1af0>
    2940:	003fe006 	br	28c4 <___vfprintf_internal_r+0x2418>
    2944:	d8800917 	ldw	r2,36(sp)
    2948:	a89b883a 	add	r13,r21,r2
    294c:	003d7c06 	br	1f40 <___vfprintf_internal_r+0x1a94>
    2950:	00800084 	movi	r2,2
    2954:	d8801215 	stw	r2,72(sp)
    2958:	003ece06 	br	2494 <___vfprintf_internal_r+0x1fe8>

0000295c <__vfprintf_internal>:
    295c:	00c00074 	movhi	r3,1
    2960:	2005883a 	mov	r2,r4
    2964:	1909e617 	ldw	r4,10136(r3)
    2968:	300f883a 	mov	r7,r6
    296c:	280d883a 	mov	r6,r5
    2970:	100b883a 	mov	r5,r2
    2974:	00004ac1 	jmpi	4ac <___vfprintf_internal_r>

00002978 <__sbprintf>:
    2978:	28c0038b 	ldhu	r3,14(r5)
    297c:	2880030b 	ldhu	r2,12(r5)
    2980:	2ac01917 	ldw	r11,100(r5)
    2984:	1806943a 	slli	r3,r3,16
    2988:	2a800717 	ldw	r10,28(r5)
    298c:	2a400917 	ldw	r9,36(r5)
    2990:	defee204 	addi	sp,sp,-1144
    2994:	10bfff4c 	andi	r2,r2,65533
    2998:	10c4b03a 	or	r2,r2,r3
    299c:	da001a04 	addi	r8,sp,104
    29a0:	00c10004 	movi	r3,1024
    29a4:	dc011a15 	stw	r16,1128(sp)
    29a8:	2821883a 	mov	r16,r5
    29ac:	d80b883a 	mov	r5,sp
    29b0:	dc811c15 	stw	r18,1136(sp)
    29b4:	dc411b15 	stw	r17,1132(sp)
    29b8:	dfc11d15 	stw	ra,1140(sp)
    29bc:	2025883a 	mov	r18,r4
    29c0:	dac01915 	stw	r11,100(sp)
    29c4:	d8800315 	stw	r2,12(sp)
    29c8:	da800715 	stw	r10,28(sp)
    29cc:	da400915 	stw	r9,36(sp)
    29d0:	da000015 	stw	r8,0(sp)
    29d4:	da000415 	stw	r8,16(sp)
    29d8:	d8c00215 	stw	r3,8(sp)
    29dc:	d8c00515 	stw	r3,20(sp)
    29e0:	d8000615 	stw	zero,24(sp)
    29e4:	00004ac0 	call	4ac <___vfprintf_internal_r>
    29e8:	1023883a 	mov	r17,r2
    29ec:	10000d0e 	bge	r2,zero,2a24 <__sbprintf+0xac>
    29f0:	d880030b 	ldhu	r2,12(sp)
    29f4:	1080100c 	andi	r2,r2,64
    29f8:	10000326 	beq	r2,zero,2a08 <__sbprintf+0x90>
    29fc:	8080030b 	ldhu	r2,12(r16)
    2a00:	10801014 	ori	r2,r2,64
    2a04:	8080030d 	sth	r2,12(r16)
    2a08:	8805883a 	mov	r2,r17
    2a0c:	dfc11d17 	ldw	ra,1140(sp)
    2a10:	dc811c17 	ldw	r18,1136(sp)
    2a14:	dc411b17 	ldw	r17,1132(sp)
    2a18:	dc011a17 	ldw	r16,1128(sp)
    2a1c:	dec11e04 	addi	sp,sp,1144
    2a20:	f800283a 	ret
    2a24:	d80b883a 	mov	r5,sp
    2a28:	9009883a 	mov	r4,r18
    2a2c:	00047900 	call	4790 <_fflush_r>
    2a30:	103fef26 	beq	r2,zero,29f0 <__sbprintf+0x78>
    2a34:	047fffc4 	movi	r17,-1
    2a38:	003fed06 	br	29f0 <__sbprintf+0x78>

00002a3c <__swsetup_r>:
    2a3c:	00800074 	movhi	r2,1
    2a40:	1089e617 	ldw	r2,10136(r2)
    2a44:	defffd04 	addi	sp,sp,-12
    2a48:	dc400115 	stw	r17,4(sp)
    2a4c:	dc000015 	stw	r16,0(sp)
    2a50:	dfc00215 	stw	ra,8(sp)
    2a54:	2023883a 	mov	r17,r4
    2a58:	2821883a 	mov	r16,r5
    2a5c:	10000226 	beq	r2,zero,2a68 <__swsetup_r+0x2c>
    2a60:	10c00e17 	ldw	r3,56(r2)
    2a64:	18001d26 	beq	r3,zero,2adc <__swsetup_r+0xa0>
    2a68:	80c0030b 	ldhu	r3,12(r16)
    2a6c:	1880020c 	andi	r2,r3,8
    2a70:	10001f26 	beq	r2,zero,2af0 <__swsetup_r+0xb4>
    2a74:	80800417 	ldw	r2,16(r16)
    2a78:	10002626 	beq	r2,zero,2b14 <__swsetup_r+0xd8>
    2a7c:	1900004c 	andi	r4,r3,1
    2a80:	20000b1e 	bne	r4,zero,2ab0 <__swsetup_r+0x74>
    2a84:	1900008c 	andi	r4,r3,2
    2a88:	20002b1e 	bne	r4,zero,2b38 <__swsetup_r+0xfc>
    2a8c:	81000517 	ldw	r4,20(r16)
    2a90:	81000215 	stw	r4,8(r16)
    2a94:	10000b26 	beq	r2,zero,2ac4 <__swsetup_r+0x88>
    2a98:	0005883a 	mov	r2,zero
    2a9c:	dfc00217 	ldw	ra,8(sp)
    2aa0:	dc400117 	ldw	r17,4(sp)
    2aa4:	dc000017 	ldw	r16,0(sp)
    2aa8:	dec00304 	addi	sp,sp,12
    2aac:	f800283a 	ret
    2ab0:	81000517 	ldw	r4,20(r16)
    2ab4:	80000215 	stw	zero,8(r16)
    2ab8:	0109c83a 	sub	r4,zero,r4
    2abc:	81000615 	stw	r4,24(r16)
    2ac0:	103ff51e 	bne	r2,zero,2a98 <__swsetup_r+0x5c>
    2ac4:	1900200c 	andi	r4,r3,128
    2ac8:	203ff426 	beq	r4,zero,2a9c <__swsetup_r+0x60>
    2acc:	18c01014 	ori	r3,r3,64
    2ad0:	80c0030d 	sth	r3,12(r16)
    2ad4:	00bfffc4 	movi	r2,-1
    2ad8:	003ff006 	br	2a9c <__swsetup_r+0x60>
    2adc:	1009883a 	mov	r4,r2
    2ae0:	0004bb80 	call	4bb8 <__sinit>
    2ae4:	80c0030b 	ldhu	r3,12(r16)
    2ae8:	1880020c 	andi	r2,r3,8
    2aec:	103fe11e 	bne	r2,zero,2a74 <__swsetup_r+0x38>
    2af0:	1880040c 	andi	r2,r3,16
    2af4:	10002026 	beq	r2,zero,2b78 <__swsetup_r+0x13c>
    2af8:	1880010c 	andi	r2,r3,4
    2afc:	1000101e 	bne	r2,zero,2b40 <__swsetup_r+0x104>
    2b00:	80800417 	ldw	r2,16(r16)
    2b04:	19000214 	ori	r4,r3,8
    2b08:	8100030d 	sth	r4,12(r16)
    2b0c:	2007883a 	mov	r3,r4
    2b10:	103fda1e 	bne	r2,zero,2a7c <__swsetup_r+0x40>
    2b14:	1900a00c 	andi	r4,r3,640
    2b18:	21008020 	cmpeqi	r4,r4,512
    2b1c:	203fd71e 	bne	r4,zero,2a7c <__swsetup_r+0x40>
    2b20:	800b883a 	mov	r5,r16
    2b24:	8809883a 	mov	r4,r17
    2b28:	00056340 	call	5634 <__smakebuf_r>
    2b2c:	80c0030b 	ldhu	r3,12(r16)
    2b30:	80800417 	ldw	r2,16(r16)
    2b34:	003fd106 	br	2a7c <__swsetup_r+0x40>
    2b38:	0009883a 	mov	r4,zero
    2b3c:	003fd406 	br	2a90 <__swsetup_r+0x54>
    2b40:	81400c17 	ldw	r5,48(r16)
    2b44:	28000626 	beq	r5,zero,2b60 <__swsetup_r+0x124>
    2b48:	80801004 	addi	r2,r16,64
    2b4c:	28800326 	beq	r5,r2,2b5c <__swsetup_r+0x120>
    2b50:	8809883a 	mov	r4,r17
    2b54:	0004d240 	call	4d24 <_free_r>
    2b58:	80c0030b 	ldhu	r3,12(r16)
    2b5c:	80000c15 	stw	zero,48(r16)
    2b60:	80800417 	ldw	r2,16(r16)
    2b64:	013ff6c4 	movi	r4,-37
    2b68:	20c6703a 	and	r3,r4,r3
    2b6c:	80000115 	stw	zero,4(r16)
    2b70:	80800015 	stw	r2,0(r16)
    2b74:	003fe306 	br	2b04 <__swsetup_r+0xc8>
    2b78:	00800244 	movi	r2,9
    2b7c:	88800015 	stw	r2,0(r17)
    2b80:	18c01014 	ori	r3,r3,64
    2b84:	003fd206 	br	2ad0 <__swsetup_r+0x94>

00002b88 <quorem>:
    2b88:	defff204 	addi	sp,sp,-56
    2b8c:	dc400515 	stw	r17,20(sp)
    2b90:	20800417 	ldw	r2,16(r4)
    2b94:	2c400417 	ldw	r17,16(r5)
    2b98:	dfc00d15 	stw	ra,52(sp)
    2b9c:	df000c15 	stw	fp,48(sp)
    2ba0:	ddc00b15 	stw	r23,44(sp)
    2ba4:	dd800a15 	stw	r22,40(sp)
    2ba8:	dd400915 	stw	r21,36(sp)
    2bac:	dd000815 	stw	r20,32(sp)
    2bb0:	dcc00715 	stw	r19,28(sp)
    2bb4:	dc800615 	stw	r18,24(sp)
    2bb8:	dc000415 	stw	r16,16(sp)
    2bbc:	d9000115 	stw	r4,4(sp)
    2bc0:	d9400215 	stw	r5,8(sp)
    2bc4:	14407416 	blt	r2,r17,2d98 <quorem+0x210>
    2bc8:	8c7fffc4 	addi	r17,r17,-1
    2bcc:	882a90ba 	slli	r21,r17,2
    2bd0:	2dc00504 	addi	r23,r5,20
    2bd4:	24c00504 	addi	r19,r4,20
    2bd8:	bd65883a 	add	r18,r23,r21
    2bdc:	9d45883a 	add	r2,r19,r21
    2be0:	97000017 	ldw	fp,0(r18)
    2be4:	15000017 	ldw	r20,0(r2)
    2be8:	d8800315 	stw	r2,12(sp)
    2bec:	e7000044 	addi	fp,fp,1
    2bf0:	e00b883a 	mov	r5,fp
    2bf4:	a009883a 	mov	r4,r20
    2bf8:	000afd00 	call	afd0 <__udivsi3>
    2bfc:	d8800015 	stw	r2,0(sp)
    2c00:	a7002e36 	bltu	r20,fp,2cbc <quorem+0x134>
    2c04:	b829883a 	mov	r20,r23
    2c08:	982d883a 	mov	r22,r19
    2c0c:	0039883a 	mov	fp,zero
    2c10:	002b883a 	mov	r21,zero
    2c14:	a4000017 	ldw	r16,0(r20)
    2c18:	d9400017 	ldw	r5,0(sp)
    2c1c:	b5800104 	addi	r22,r22,4
    2c20:	813fffcc 	andi	r4,r16,65535
    2c24:	000b0900 	call	b090 <__mulsi3>
    2c28:	8008d43a 	srli	r4,r16,16
    2c2c:	d9400017 	ldw	r5,0(sp)
    2c30:	1739883a 	add	fp,r2,fp
    2c34:	a5000104 	addi	r20,r20,4
    2c38:	000b0900 	call	b090 <__mulsi3>
    2c3c:	b17fff17 	ldw	r5,-4(r22)
    2c40:	e13fffcc 	andi	r4,fp,65535
    2c44:	e038d43a 	srli	fp,fp,16
    2c48:	28ffffcc 	andi	r3,r5,65535
    2c4c:	1907c83a 	sub	r3,r3,r4
    2c50:	1d47883a 	add	r3,r3,r21
    2c54:	1809d43a 	srai	r4,r3,16
    2c58:	280ad43a 	srli	r5,r5,16
    2c5c:	1705883a 	add	r2,r2,fp
    2c60:	11bfffcc 	andi	r6,r2,65535
    2c64:	2189c83a 	sub	r4,r4,r6
    2c68:	2149883a 	add	r4,r4,r5
    2c6c:	200a943a 	slli	r5,r4,16
    2c70:	18ffffcc 	andi	r3,r3,65535
    2c74:	1038d43a 	srli	fp,r2,16
    2c78:	1946b03a 	or	r3,r3,r5
    2c7c:	b0ffff15 	stw	r3,-4(r22)
    2c80:	202bd43a 	srai	r21,r4,16
    2c84:	953fe32e 	bgeu	r18,r20,2c14 <quorem+0x8c>
    2c88:	d8c00317 	ldw	r3,12(sp)
    2c8c:	18800017 	ldw	r2,0(r3)
    2c90:	10000a1e 	bne	r2,zero,2cbc <quorem+0x134>
    2c94:	1d7fff04 	addi	r21,r3,-4
    2c98:	9d400336 	bltu	r19,r21,2ca8 <quorem+0x120>
    2c9c:	00000506 	br	2cb4 <quorem+0x12c>
    2ca0:	8c7fffc4 	addi	r17,r17,-1
    2ca4:	9d40032e 	bgeu	r19,r21,2cb4 <quorem+0x12c>
    2ca8:	a8800017 	ldw	r2,0(r21)
    2cac:	ad7fff04 	addi	r21,r21,-4
    2cb0:	103ffb26 	beq	r2,zero,2ca0 <quorem+0x118>
    2cb4:	d8800117 	ldw	r2,4(sp)
    2cb8:	14400415 	stw	r17,16(r2)
    2cbc:	d9400217 	ldw	r5,8(sp)
    2cc0:	d9000117 	ldw	r4,4(sp)
    2cc4:	0006f2c0 	call	6f2c <__mcmp>
    2cc8:	10002616 	blt	r2,zero,2d64 <quorem+0x1dc>
    2ccc:	980d883a 	mov	r6,r19
    2cd0:	0005883a 	mov	r2,zero
    2cd4:	31000017 	ldw	r4,0(r6)
    2cd8:	b9400017 	ldw	r5,0(r23)
    2cdc:	31800104 	addi	r6,r6,4
    2ce0:	20ffffcc 	andi	r3,r4,65535
    2ce4:	29ffffcc 	andi	r7,r5,65535
    2ce8:	19c7c83a 	sub	r3,r3,r7
    2cec:	1887883a 	add	r3,r3,r2
    2cf0:	1805d43a 	srai	r2,r3,16
    2cf4:	280ad43a 	srli	r5,r5,16
    2cf8:	2008d43a 	srli	r4,r4,16
    2cfc:	18ffffcc 	andi	r3,r3,65535
    2d00:	1145c83a 	sub	r2,r2,r5
    2d04:	1105883a 	add	r2,r2,r4
    2d08:	1008943a 	slli	r4,r2,16
    2d0c:	bdc00104 	addi	r23,r23,4
    2d10:	1005d43a 	srai	r2,r2,16
    2d14:	1906b03a 	or	r3,r3,r4
    2d18:	30ffff15 	stw	r3,-4(r6)
    2d1c:	95ffed2e 	bgeu	r18,r23,2cd4 <quorem+0x14c>
    2d20:	880490ba 	slli	r2,r17,2
    2d24:	9885883a 	add	r2,r19,r2
    2d28:	10c00017 	ldw	r3,0(r2)
    2d2c:	18000a1e 	bne	r3,zero,2d58 <quorem+0x1d0>
    2d30:	10bfff04 	addi	r2,r2,-4
    2d34:	98800336 	bltu	r19,r2,2d44 <quorem+0x1bc>
    2d38:	00000506 	br	2d50 <quorem+0x1c8>
    2d3c:	8c7fffc4 	addi	r17,r17,-1
    2d40:	9880032e 	bgeu	r19,r2,2d50 <quorem+0x1c8>
    2d44:	10c00017 	ldw	r3,0(r2)
    2d48:	10bfff04 	addi	r2,r2,-4
    2d4c:	183ffb26 	beq	r3,zero,2d3c <quorem+0x1b4>
    2d50:	d8800117 	ldw	r2,4(sp)
    2d54:	14400415 	stw	r17,16(r2)
    2d58:	d8800017 	ldw	r2,0(sp)
    2d5c:	10800044 	addi	r2,r2,1
    2d60:	d8800015 	stw	r2,0(sp)
    2d64:	d8800017 	ldw	r2,0(sp)
    2d68:	dfc00d17 	ldw	ra,52(sp)
    2d6c:	df000c17 	ldw	fp,48(sp)
    2d70:	ddc00b17 	ldw	r23,44(sp)
    2d74:	dd800a17 	ldw	r22,40(sp)
    2d78:	dd400917 	ldw	r21,36(sp)
    2d7c:	dd000817 	ldw	r20,32(sp)
    2d80:	dcc00717 	ldw	r19,28(sp)
    2d84:	dc800617 	ldw	r18,24(sp)
    2d88:	dc400517 	ldw	r17,20(sp)
    2d8c:	dc000417 	ldw	r16,16(sp)
    2d90:	dec00e04 	addi	sp,sp,56
    2d94:	f800283a 	ret
    2d98:	0005883a 	mov	r2,zero
    2d9c:	003ff206 	br	2d68 <quorem+0x1e0>

00002da0 <_dtoa_r>:
    2da0:	20801017 	ldw	r2,64(r4)
    2da4:	deffe104 	addi	sp,sp,-124
    2da8:	dd401a15 	stw	r21,104(sp)
    2dac:	dc801715 	stw	r18,92(sp)
    2db0:	dc401615 	stw	r17,88(sp)
    2db4:	dc001515 	stw	r16,84(sp)
    2db8:	dfc01e15 	stw	ra,120(sp)
    2dbc:	df001d15 	stw	fp,116(sp)
    2dc0:	ddc01c15 	stw	r23,112(sp)
    2dc4:	dd801b15 	stw	r22,108(sp)
    2dc8:	dd001915 	stw	r20,100(sp)
    2dcc:	dcc01815 	stw	r19,96(sp)
    2dd0:	d9400215 	stw	r5,8(sp)
    2dd4:	d9c00115 	stw	r7,4(sp)
    2dd8:	dc402117 	ldw	r17,132(sp)
    2ddc:	2021883a 	mov	r16,r4
    2de0:	3025883a 	mov	r18,r6
    2de4:	302b883a 	mov	r21,r6
    2de8:	10000826 	beq	r2,zero,2e0c <_dtoa_r+0x6c>
    2dec:	21801117 	ldw	r6,68(r4)
    2df0:	00c00044 	movi	r3,1
    2df4:	100b883a 	mov	r5,r2
    2df8:	1986983a 	sll	r3,r3,r6
    2dfc:	11800115 	stw	r6,4(r2)
    2e00:	10c00215 	stw	r3,8(r2)
    2e04:	000651c0 	call	651c <_Bfree>
    2e08:	80001015 	stw	zero,64(r16)
    2e0c:	90019316 	blt	r18,zero,345c <_dtoa_r+0x6bc>
    2e10:	88000015 	stw	zero,0(r17)
    2e14:	909ffc2c 	andhi	r2,r18,32752
    2e18:	00dffc34 	movhi	r3,32752
    2e1c:	10c19826 	beq	r2,r3,3480 <_dtoa_r+0x6e0>
    2e20:	d9000217 	ldw	r4,8(sp)
    2e24:	000d883a 	mov	r6,zero
    2e28:	000f883a 	mov	r7,zero
    2e2c:	a80b883a 	mov	r5,r21
    2e30:	000c2a80 	call	c2a8 <__eqdf2>
    2e34:	1000181e 	bne	r2,zero,2e98 <_dtoa_r+0xf8>
    2e38:	d8c02017 	ldw	r3,128(sp)
    2e3c:	00800044 	movi	r2,1
    2e40:	18800015 	stw	r2,0(r3)
    2e44:	d8802217 	ldw	r2,136(sp)
    2e48:	10000426 	beq	r2,zero,2e5c <_dtoa_r+0xbc>
    2e4c:	d8c02217 	ldw	r3,136(sp)
    2e50:	00800074 	movhi	r2,1
    2e54:	10817844 	addi	r2,r2,1505
    2e58:	18800015 	stw	r2,0(r3)
    2e5c:	07000074 	movhi	fp,1
    2e60:	e7017804 	addi	fp,fp,1504
    2e64:	e005883a 	mov	r2,fp
    2e68:	dfc01e17 	ldw	ra,120(sp)
    2e6c:	df001d17 	ldw	fp,116(sp)
    2e70:	ddc01c17 	ldw	r23,112(sp)
    2e74:	dd801b17 	ldw	r22,108(sp)
    2e78:	dd401a17 	ldw	r21,104(sp)
    2e7c:	dd001917 	ldw	r20,100(sp)
    2e80:	dcc01817 	ldw	r19,96(sp)
    2e84:	dc801717 	ldw	r18,92(sp)
    2e88:	dc401617 	ldw	r17,88(sp)
    2e8c:	dc001517 	ldw	r16,84(sp)
    2e90:	dec01f04 	addi	sp,sp,124
    2e94:	f800283a 	ret
    2e98:	dcc00217 	ldw	r19,8(sp)
    2e9c:	d8801304 	addi	r2,sp,76
    2ea0:	9022d53a 	srli	r17,r18,20
    2ea4:	d8800015 	stw	r2,0(sp)
    2ea8:	d9c01404 	addi	r7,sp,80
    2eac:	980b883a 	mov	r5,r19
    2eb0:	a80d883a 	mov	r6,r21
    2eb4:	8009883a 	mov	r4,r16
    2eb8:	00073140 	call	7314 <__d2b>
    2ebc:	102f883a 	mov	r23,r2
    2ec0:	8801811e 	bne	r17,zero,34c8 <_dtoa_r+0x728>
    2ec4:	dd001317 	ldw	r20,76(sp)
    2ec8:	dc401417 	ldw	r17,80(sp)
    2ecc:	a463883a 	add	r17,r20,r17
    2ed0:	88810c84 	addi	r2,r17,1074
    2ed4:	10c00850 	cmplti	r3,r2,33
    2ed8:	1803101e 	bne	r3,zero,3b1c <_dtoa_r+0xd7c>
    2edc:	00c01004 	movi	r3,64
    2ee0:	1887c83a 	sub	r3,r3,r2
    2ee4:	90c8983a 	sll	r4,r18,r3
    2ee8:	d8c00217 	ldw	r3,8(sp)
    2eec:	88810484 	addi	r2,r17,1042
    2ef0:	1884d83a 	srl	r2,r3,r2
    2ef4:	2088b03a 	or	r4,r4,r2
    2ef8:	000d8600 	call	d860 <__floatunsidf>
    2efc:	1009883a 	mov	r4,r2
    2f00:	00bf8434 	movhi	r2,65040
    2f04:	188b883a 	add	r5,r3,r2
    2f08:	00800044 	movi	r2,1
    2f0c:	8c7fffc4 	addi	r17,r17,-1
    2f10:	d8800915 	stw	r2,36(sp)
    2f14:	000d883a 	mov	r6,zero
    2f18:	01cffe34 	movhi	r7,16376
    2f1c:	000cd380 	call	cd38 <__subdf3>
    2f20:	0198dbf4 	movhi	r6,25455
    2f24:	01cff4f4 	movhi	r7,16339
    2f28:	3190d844 	addi	r6,r6,17249
    2f2c:	39e1e9c4 	addi	r7,r7,-30809
    2f30:	1009883a 	mov	r4,r2
    2f34:	180b883a 	mov	r5,r3
    2f38:	000c5300 	call	c530 <__muldf3>
    2f3c:	01a2d874 	movhi	r6,35681
    2f40:	01cff1f4 	movhi	r7,16327
    2f44:	31b22cc4 	addi	r6,r6,-14157
    2f48:	39e28a04 	addi	r7,r7,-30168
    2f4c:	180b883a 	mov	r5,r3
    2f50:	1009883a 	mov	r4,r2
    2f54:	000b0b80 	call	b0b8 <__adddf3>
    2f58:	8809883a 	mov	r4,r17
    2f5c:	1027883a 	mov	r19,r2
    2f60:	1825883a 	mov	r18,r3
    2f64:	000d7a80 	call	d7a8 <__floatsidf>
    2f68:	019427f4 	movhi	r6,20639
    2f6c:	01cff4f4 	movhi	r7,16339
    2f70:	319e7ec4 	addi	r6,r6,31227
    2f74:	39d104c4 	addi	r7,r7,17427
    2f78:	1009883a 	mov	r4,r2
    2f7c:	180b883a 	mov	r5,r3
    2f80:	000c5300 	call	c530 <__muldf3>
    2f84:	100d883a 	mov	r6,r2
    2f88:	180f883a 	mov	r7,r3
    2f8c:	9809883a 	mov	r4,r19
    2f90:	900b883a 	mov	r5,r18
    2f94:	000b0b80 	call	b0b8 <__adddf3>
    2f98:	1009883a 	mov	r4,r2
    2f9c:	180b883a 	mov	r5,r3
    2fa0:	1027883a 	mov	r19,r2
    2fa4:	1825883a 	mov	r18,r3
    2fa8:	000d7280 	call	d728 <__fixdfsi>
    2fac:	000d883a 	mov	r6,zero
    2fb0:	000f883a 	mov	r7,zero
    2fb4:	9809883a 	mov	r4,r19
    2fb8:	900b883a 	mov	r5,r18
    2fbc:	102d883a 	mov	r22,r2
    2fc0:	000c4380 	call	c438 <__ledf2>
    2fc4:	1002a616 	blt	r2,zero,3a60 <_dtoa_r+0xcc0>
    2fc8:	a469c83a 	sub	r20,r20,r17
    2fcc:	a0ffffc4 	addi	r3,r20,-1
    2fd0:	b08005e8 	cmpgeui	r2,r22,23
    2fd4:	d8c00415 	stw	r3,16(sp)
    2fd8:	1002981e 	bne	r2,zero,3a3c <_dtoa_r+0xc9c>
    2fdc:	b00490fa 	slli	r2,r22,3
    2fe0:	02c00074 	movhi	r11,1
    2fe4:	5ac1c104 	addi	r11,r11,1796
    2fe8:	5885883a 	add	r2,r11,r2
    2fec:	11800017 	ldw	r6,0(r2)
    2ff0:	11c00117 	ldw	r7,4(r2)
    2ff4:	d9000217 	ldw	r4,8(sp)
    2ff8:	a80b883a 	mov	r5,r21
    2ffc:	000c4380 	call	c438 <__ledf2>
    3000:	1001d60e 	bge	r2,zero,375c <_dtoa_r+0x9bc>
    3004:	d8000815 	stw	zero,32(sp)
    3008:	a0bfffc4 	addi	r2,r20,-1
    300c:	b5bfffc4 	addi	r22,r22,-1
    3010:	10028e16 	blt	r2,zero,3a4c <_dtoa_r+0xcac>
    3014:	d8000515 	stw	zero,20(sp)
    3018:	b001d30e 	bge	r22,zero,3768 <_dtoa_r+0x9c8>
    301c:	d8800517 	ldw	r2,20(sp)
    3020:	d8c00117 	ldw	r3,4(sp)
    3024:	dd800615 	stw	r22,24(sp)
    3028:	1585c83a 	sub	r2,r2,r22
    302c:	d8800515 	stw	r2,20(sp)
    3030:	0585c83a 	sub	r2,zero,r22
    3034:	d8800315 	stw	r2,12(sp)
    3038:	188002a8 	cmpgeui	r2,r3,10
    303c:	002d883a 	mov	r22,zero
    3040:	1001d11e 	bne	r2,zero,3788 <_dtoa_r+0x9e8>
    3044:	18800190 	cmplti	r2,r3,6
    3048:	1002a31e 	bne	r2,zero,3ad8 <_dtoa_r+0xd38>
    304c:	18ffff04 	addi	r3,r3,-4
    3050:	d8c00115 	stw	r3,4(sp)
    3054:	188000e0 	cmpeqi	r2,r3,3
    3058:	0023883a 	mov	r17,zero
    305c:	1003b71e 	bne	r2,zero,3f3c <_dtoa_r+0x119c>
    3060:	18800108 	cmpgei	r2,r3,4
    3064:	1003a626 	beq	r2,zero,3f00 <_dtoa_r+0x1160>
    3068:	d8800117 	ldw	r2,4(sp)
    306c:	10800120 	cmpeqi	r2,r2,4
    3070:	1003611e 	bne	r2,zero,3df8 <_dtoa_r+0x1058>
    3074:	00800144 	movi	r2,5
    3078:	d8800115 	stw	r2,4(sp)
    307c:	00800044 	movi	r2,1
    3080:	d8800715 	stw	r2,28(sp)
    3084:	d8801f17 	ldw	r2,124(sp)
    3088:	d8c00617 	ldw	r3,24(sp)
    308c:	10c5883a 	add	r2,r2,r3
    3090:	14800044 	addi	r18,r2,1
    3094:	d8800a15 	stw	r2,40(sp)
    3098:	900d883a 	mov	r6,r18
    309c:	0485320e 	bge	zero,r18,4568 <_dtoa_r+0x17c8>
    30a0:	30800608 	cmpgei	r2,r6,24
    30a4:	10053026 	beq	r2,zero,4568 <_dtoa_r+0x17c8>
    30a8:	00c00044 	movi	r3,1
    30ac:	00800104 	movi	r2,4
    30b0:	1085883a 	add	r2,r2,r2
    30b4:	11000504 	addi	r4,r2,20
    30b8:	180b883a 	mov	r5,r3
    30bc:	18c00044 	addi	r3,r3,1
    30c0:	313ffb2e 	bgeu	r6,r4,30b0 <_dtoa_r+0x310>
    30c4:	81401115 	stw	r5,68(r16)
    30c8:	8009883a 	mov	r4,r16
    30cc:	00064780 	call	6478 <_Balloc>
    30d0:	1039883a 	mov	fp,r2
    30d4:	10050d26 	beq	r2,zero,450c <_dtoa_r+0x176c>
    30d8:	80801015 	stw	r2,64(r16)
    30dc:	908003e8 	cmpgeui	r2,r18,15
    30e0:	1001291e 	bne	r2,zero,3588 <_dtoa_r+0x7e8>
    30e4:	88012826 	beq	r17,zero,3588 <_dtoa_r+0x7e8>
    30e8:	d8c00617 	ldw	r3,24(sp)
    30ec:	00c3b40e 	bge	zero,r3,3fc0 <_dtoa_r+0x1220>
    30f0:	188003cc 	andi	r2,r3,15
    30f4:	100490fa 	slli	r2,r2,3
    30f8:	1823d13a 	srai	r17,r3,4
    30fc:	02c00074 	movhi	r11,1
    3100:	5ac1c104 	addi	r11,r11,1796
    3104:	5885883a 	add	r2,r11,r2
    3108:	88c0040c 	andi	r3,r17,16
    310c:	12400017 	ldw	r9,0(r2)
    3110:	12000117 	ldw	r8,4(r2)
    3114:	18037626 	beq	r3,zero,3ef0 <_dtoa_r+0x1150>
    3118:	00800074 	movhi	r2,1
    311c:	1081b704 	addi	r2,r2,1756
    3120:	d9000217 	ldw	r4,8(sp)
    3124:	11800817 	ldw	r6,32(r2)
    3128:	11c00917 	ldw	r7,36(r2)
    312c:	a80b883a 	mov	r5,r21
    3130:	da000c15 	stw	r8,48(sp)
    3134:	da400b15 	stw	r9,44(sp)
    3138:	000b9bc0 	call	b9bc <__divdf3>
    313c:	da400b17 	ldw	r9,44(sp)
    3140:	da000c17 	ldw	r8,48(sp)
    3144:	8c4003cc 	andi	r17,r17,15
    3148:	1009883a 	mov	r4,r2
    314c:	180b883a 	mov	r5,r3
    3150:	04c000c4 	movi	r19,3
    3154:	88001c26 	beq	r17,zero,31c8 <_dtoa_r+0x428>
    3158:	05000074 	movhi	r20,1
    315c:	a501b704 	addi	r20,r20,1756
    3160:	dc800b15 	stw	r18,44(sp)
    3164:	dc000c15 	stw	r16,48(sp)
    3168:	9825883a 	mov	r18,r19
    316c:	a021883a 	mov	r16,r20
    3170:	2827883a 	mov	r19,r5
    3174:	2029883a 	mov	r20,r4
    3178:	400b883a 	mov	r5,r8
    317c:	4809883a 	mov	r4,r9
    3180:	8980004c 	andi	r6,r17,1
    3184:	30000626 	beq	r6,zero,31a0 <_dtoa_r+0x400>
    3188:	81800017 	ldw	r6,0(r16)
    318c:	81c00117 	ldw	r7,4(r16)
    3190:	94800044 	addi	r18,r18,1
    3194:	000c5300 	call	c530 <__muldf3>
    3198:	1009883a 	mov	r4,r2
    319c:	180b883a 	mov	r5,r3
    31a0:	8823d07a 	srai	r17,r17,1
    31a4:	84000204 	addi	r16,r16,8
    31a8:	883ff51e 	bne	r17,zero,3180 <_dtoa_r+0x3e0>
    31ac:	2811883a 	mov	r8,r5
    31b0:	dc000c17 	ldw	r16,48(sp)
    31b4:	980b883a 	mov	r5,r19
    31b8:	9027883a 	mov	r19,r18
    31bc:	dc800b17 	ldw	r18,44(sp)
    31c0:	2013883a 	mov	r9,r4
    31c4:	a009883a 	mov	r4,r20
    31c8:	480d883a 	mov	r6,r9
    31cc:	400f883a 	mov	r7,r8
    31d0:	000b9bc0 	call	b9bc <__divdf3>
    31d4:	1023883a 	mov	r17,r2
    31d8:	1829883a 	mov	r20,r3
    31dc:	d8800817 	ldw	r2,32(sp)
    31e0:	10000626 	beq	r2,zero,31fc <_dtoa_r+0x45c>
    31e4:	000d883a 	mov	r6,zero
    31e8:	01cffc34 	movhi	r7,16368
    31ec:	8809883a 	mov	r4,r17
    31f0:	a00b883a 	mov	r5,r20
    31f4:	000c4380 	call	c438 <__ledf2>
    31f8:	10045a16 	blt	r2,zero,4364 <_dtoa_r+0x15c4>
    31fc:	9809883a 	mov	r4,r19
    3200:	000d7a80 	call	d7a8 <__floatsidf>
    3204:	880d883a 	mov	r6,r17
    3208:	a00f883a 	mov	r7,r20
    320c:	1009883a 	mov	r4,r2
    3210:	180b883a 	mov	r5,r3
    3214:	000c5300 	call	c530 <__muldf3>
    3218:	000d883a 	mov	r6,zero
    321c:	01d00734 	movhi	r7,16412
    3220:	1009883a 	mov	r4,r2
    3224:	180b883a 	mov	r5,r3
    3228:	000b0b80 	call	b0b8 <__adddf3>
    322c:	d8800b15 	stw	r2,44(sp)
    3230:	00bf3034 	movhi	r2,64704
    3234:	18a7883a 	add	r19,r3,r2
    3238:	9000c026 	beq	r18,zero,353c <_dtoa_r+0x79c>
    323c:	d8800617 	ldw	r2,24(sp)
    3240:	dc800c15 	stw	r18,48(sp)
    3244:	d8801115 	stw	r2,68(sp)
    3248:	d8800c17 	ldw	r2,48(sp)
    324c:	02c00074 	movhi	r11,1
    3250:	5ac1c104 	addi	r11,r11,1796
    3254:	10bfffc4 	addi	r2,r2,-1
    3258:	100490fa 	slli	r2,r2,3
    325c:	8809883a 	mov	r4,r17
    3260:	a00b883a 	mov	r5,r20
    3264:	5885883a 	add	r2,r11,r2
    3268:	10c00017 	ldw	r3,0(r2)
    326c:	10800117 	ldw	r2,4(r2)
    3270:	dac00d15 	stw	r11,52(sp)
    3274:	d8c00f15 	stw	r3,60(sp)
    3278:	d8801015 	stw	r2,64(sp)
    327c:	000d7280 	call	d728 <__fixdfsi>
    3280:	11400c04 	addi	r5,r2,48
    3284:	1009883a 	mov	r4,r2
    3288:	d9400e15 	stw	r5,56(sp)
    328c:	000d7a80 	call	d7a8 <__floatsidf>
    3290:	8809883a 	mov	r4,r17
    3294:	a00b883a 	mov	r5,r20
    3298:	100d883a 	mov	r6,r2
    329c:	180f883a 	mov	r7,r3
    32a0:	000cd380 	call	cd38 <__subdf3>
    32a4:	d9000717 	ldw	r4,28(sp)
    32a8:	dac00d17 	ldw	r11,52(sp)
    32ac:	e2000044 	addi	r8,fp,1
    32b0:	1029883a 	mov	r20,r2
    32b4:	1823883a 	mov	r17,r3
    32b8:	2003ce26 	beq	r4,zero,41f4 <_dtoa_r+0x1454>
    32bc:	d9800f17 	ldw	r6,60(sp)
    32c0:	d9c01017 	ldw	r7,64(sp)
    32c4:	0009883a 	mov	r4,zero
    32c8:	014ff834 	movhi	r5,16352
    32cc:	da001215 	stw	r8,72(sp)
    32d0:	000b9bc0 	call	b9bc <__divdf3>
    32d4:	d9800b17 	ldw	r6,44(sp)
    32d8:	980f883a 	mov	r7,r19
    32dc:	1009883a 	mov	r4,r2
    32e0:	180b883a 	mov	r5,r3
    32e4:	000cd380 	call	cd38 <__subdf3>
    32e8:	1009883a 	mov	r4,r2
    32ec:	d8800e17 	ldw	r2,56(sp)
    32f0:	180b883a 	mov	r5,r3
    32f4:	a00d883a 	mov	r6,r20
    32f8:	e0800005 	stb	r2,0(fp)
    32fc:	880f883a 	mov	r7,r17
    3300:	d9000d15 	stw	r4,52(sp)
    3304:	d8c00b15 	stw	r3,44(sp)
    3308:	000c33c0 	call	c33c <__gedf2>
    330c:	d9400b17 	ldw	r5,44(sp)
    3310:	d9000d17 	ldw	r4,52(sp)
    3314:	da001217 	ldw	r8,72(sp)
    3318:	00840b16 	blt	zero,r2,4348 <_dtoa_r+0x15a8>
    331c:	0005883a 	mov	r2,zero
    3320:	dc800d15 	stw	r18,52(sp)
    3324:	dd800e15 	stw	r22,56(sp)
    3328:	ddc00b15 	stw	r23,44(sp)
    332c:	dd400f15 	stw	r21,60(sp)
    3330:	ddc00c17 	ldw	r23,48(sp)
    3334:	402d883a 	mov	r22,r8
    3338:	dc000c15 	stw	r16,48(sp)
    333c:	2025883a 	mov	r18,r4
    3340:	2827883a 	mov	r19,r5
    3344:	102b883a 	mov	r21,r2
    3348:	00002606 	br	33e4 <_dtoa_r+0x644>
    334c:	ad400044 	addi	r21,r21,1
    3350:	adc4460e 	bge	r21,r23,446c <_dtoa_r+0x16cc>
    3354:	9009883a 	mov	r4,r18
    3358:	980b883a 	mov	r5,r19
    335c:	000d883a 	mov	r6,zero
    3360:	01d00934 	movhi	r7,16420
    3364:	000c5300 	call	c530 <__muldf3>
    3368:	000d883a 	mov	r6,zero
    336c:	01d00934 	movhi	r7,16420
    3370:	a009883a 	mov	r4,r20
    3374:	880b883a 	mov	r5,r17
    3378:	1025883a 	mov	r18,r2
    337c:	1827883a 	mov	r19,r3
    3380:	000c5300 	call	c530 <__muldf3>
    3384:	180b883a 	mov	r5,r3
    3388:	1009883a 	mov	r4,r2
    338c:	1823883a 	mov	r17,r3
    3390:	1029883a 	mov	r20,r2
    3394:	000d7280 	call	d728 <__fixdfsi>
    3398:	1009883a 	mov	r4,r2
    339c:	1021883a 	mov	r16,r2
    33a0:	000d7a80 	call	d7a8 <__floatsidf>
    33a4:	a009883a 	mov	r4,r20
    33a8:	880b883a 	mov	r5,r17
    33ac:	100d883a 	mov	r6,r2
    33b0:	180f883a 	mov	r7,r3
    33b4:	000cd380 	call	cd38 <__subdf3>
    33b8:	b5800044 	addi	r22,r22,1
    33bc:	82000c04 	addi	r8,r16,48
    33c0:	b23fffc5 	stb	r8,-1(r22)
    33c4:	900d883a 	mov	r6,r18
    33c8:	980f883a 	mov	r7,r19
    33cc:	1009883a 	mov	r4,r2
    33d0:	180b883a 	mov	r5,r3
    33d4:	1029883a 	mov	r20,r2
    33d8:	1823883a 	mov	r17,r3
    33dc:	000c4380 	call	c438 <__ledf2>
    33e0:	10041e16 	blt	r2,zero,445c <_dtoa_r+0x16bc>
    33e4:	a00d883a 	mov	r6,r20
    33e8:	880f883a 	mov	r7,r17
    33ec:	0009883a 	mov	r4,zero
    33f0:	014ffc34 	movhi	r5,16368
    33f4:	000cd380 	call	cd38 <__subdf3>
    33f8:	900d883a 	mov	r6,r18
    33fc:	980f883a 	mov	r7,r19
    3400:	1009883a 	mov	r4,r2
    3404:	180b883a 	mov	r5,r3
    3408:	000c4380 	call	c438 <__ledf2>
    340c:	103fcf0e 	bge	r2,zero,334c <_dtoa_r+0x5ac>
    3410:	d8801117 	ldw	r2,68(sp)
    3414:	b027883a 	mov	r19,r22
    3418:	ddc00b17 	ldw	r23,44(sp)
    341c:	dc000c17 	ldw	r16,48(sp)
    3420:	15800044 	addi	r22,r2,1
    3424:	00000106 	br	342c <_dtoa_r+0x68c>
    3428:	e4c3ed26 	beq	fp,r19,43e0 <_dtoa_r+0x1640>
    342c:	98ffffc3 	ldbu	r3,-1(r19)
    3430:	9811883a 	mov	r8,r19
    3434:	9cffffc4 	addi	r19,r19,-1
    3438:	18803fcc 	andi	r2,r3,255
    343c:	1080201c 	xori	r2,r2,128
    3440:	10bfe004 	addi	r2,r2,-128
    3444:	10800e60 	cmpeqi	r2,r2,57
    3448:	103ff71e 	bne	r2,zero,3428 <_dtoa_r+0x688>
    344c:	18c00044 	addi	r3,r3,1
    3450:	98c00005 	stb	r3,0(r19)
    3454:	b02b883a 	mov	r21,r22
    3458:	00015a06 	br	39c4 <_dtoa_r+0xc24>
    345c:	00a00034 	movhi	r2,32768
    3460:	10bfffc4 	addi	r2,r2,-1
    3464:	90aa703a 	and	r21,r18,r2
    3468:	a825883a 	mov	r18,r21
    346c:	00800044 	movi	r2,1
    3470:	88800015 	stw	r2,0(r17)
    3474:	00dffc34 	movhi	r3,32752
    3478:	909ffc2c 	andhi	r2,r18,32752
    347c:	10fe681e 	bne	r2,r3,2e20 <_dtoa_r+0x80>
    3480:	d9002017 	ldw	r4,128(sp)
    3484:	00c9c3c4 	movi	r3,9999
    3488:	00800434 	movhi	r2,16
    348c:	20c00015 	stw	r3,0(r4)
    3490:	d8c00217 	ldw	r3,8(sp)
    3494:	10bfffc4 	addi	r2,r2,-1
    3498:	9084703a 	and	r2,r18,r2
    349c:	10c4b03a 	or	r2,r2,r3
    34a0:	1000121e 	bne	r2,zero,34ec <_dtoa_r+0x74c>
    34a4:	d8802217 	ldw	r2,136(sp)
    34a8:	07000074 	movhi	fp,1
    34ac:	10041e26 	beq	r2,zero,4528 <_dtoa_r+0x1788>
    34b0:	00800074 	movhi	r2,1
    34b4:	e7018104 	addi	fp,fp,1540
    34b8:	10818304 	addi	r2,r2,1548
    34bc:	d8c02217 	ldw	r3,136(sp)
    34c0:	18800015 	stw	r2,0(r3)
    34c4:	003e6706 	br	2e64 <_dtoa_r+0xc4>
    34c8:	01400434 	movhi	r5,16
    34cc:	297fffc4 	addi	r5,r5,-1
    34d0:	a94a703a 	and	r5,r21,r5
    34d4:	dd001317 	ldw	r20,76(sp)
    34d8:	9809883a 	mov	r4,r19
    34dc:	294ffc34 	orhi	r5,r5,16368
    34e0:	8c7f0044 	addi	r17,r17,-1023
    34e4:	d8000915 	stw	zero,36(sp)
    34e8:	003e8a06 	br	2f14 <_dtoa_r+0x174>
    34ec:	d8802217 	ldw	r2,136(sp)
    34f0:	07000074 	movhi	fp,1
    34f4:	10023c1e 	bne	r2,zero,3de8 <_dtoa_r+0x1048>
    34f8:	e7018404 	addi	fp,fp,1552
    34fc:	003e5906 	br	2e64 <_dtoa_r+0xc4>
    3500:	9809883a 	mov	r4,r19
    3504:	000d7a80 	call	d7a8 <__floatsidf>
    3508:	880d883a 	mov	r6,r17
    350c:	a00f883a 	mov	r7,r20
    3510:	1009883a 	mov	r4,r2
    3514:	180b883a 	mov	r5,r3
    3518:	000c5300 	call	c530 <__muldf3>
    351c:	000d883a 	mov	r6,zero
    3520:	01d00734 	movhi	r7,16412
    3524:	1009883a 	mov	r4,r2
    3528:	180b883a 	mov	r5,r3
    352c:	000b0b80 	call	b0b8 <__adddf3>
    3530:	d8800b15 	stw	r2,44(sp)
    3534:	00bf3034 	movhi	r2,64704
    3538:	18a7883a 	add	r19,r3,r2
    353c:	8809883a 	mov	r4,r17
    3540:	a00b883a 	mov	r5,r20
    3544:	000d883a 	mov	r6,zero
    3548:	01d00534 	movhi	r7,16404
    354c:	000cd380 	call	cd38 <__subdf3>
    3550:	d9800b17 	ldw	r6,44(sp)
    3554:	980f883a 	mov	r7,r19
    3558:	1009883a 	mov	r4,r2
    355c:	180b883a 	mov	r5,r3
    3560:	1029883a 	mov	r20,r2
    3564:	1823883a 	mov	r17,r3
    3568:	000c33c0 	call	c33c <__gedf2>
    356c:	0083a716 	blt	zero,r2,440c <_dtoa_r+0x166c>
    3570:	d9800b17 	ldw	r6,44(sp)
    3574:	99e0003c 	xorhi	r7,r19,32768
    3578:	a009883a 	mov	r4,r20
    357c:	880b883a 	mov	r5,r17
    3580:	000c4380 	call	c438 <__ledf2>
    3584:	10001d16 	blt	r2,zero,35fc <_dtoa_r+0x85c>
    3588:	d8801417 	ldw	r2,80(sp)
    358c:	10008816 	blt	r2,zero,37b0 <_dtoa_r+0xa10>
    3590:	d8c00617 	ldw	r3,24(sp)
    3594:	18c003d0 	cmplti	r3,r3,15
    3598:	18008526 	beq	r3,zero,37b0 <_dtoa_r+0xa10>
    359c:	02c00074 	movhi	r11,1
    35a0:	5ac1c104 	addi	r11,r11,1796
    35a4:	d8800617 	ldw	r2,24(sp)
    35a8:	100490fa 	slli	r2,r2,3
    35ac:	5885883a 	add	r2,r11,r2
    35b0:	10c00017 	ldw	r3,0(r2)
    35b4:	10800117 	ldw	r2,4(r2)
    35b8:	d8c00115 	stw	r3,4(sp)
    35bc:	d8800315 	stw	r2,12(sp)
    35c0:	d8801f17 	ldw	r2,124(sp)
    35c4:	1000130e 	bge	r2,zero,3614 <_dtoa_r+0x874>
    35c8:	04801216 	blt	zero,r18,3614 <_dtoa_r+0x874>
    35cc:	90000b1e 	bne	r18,zero,35fc <_dtoa_r+0x85c>
    35d0:	d9000117 	ldw	r4,4(sp)
    35d4:	d9400317 	ldw	r5,12(sp)
    35d8:	000d883a 	mov	r6,zero
    35dc:	01d00534 	movhi	r7,16404
    35e0:	000c5300 	call	c530 <__muldf3>
    35e4:	d9000217 	ldw	r4,8(sp)
    35e8:	100d883a 	mov	r6,r2
    35ec:	180f883a 	mov	r7,r3
    35f0:	a80b883a 	mov	r5,r21
    35f4:	000c4380 	call	c438 <__ledf2>
    35f8:	00838416 	blt	zero,r2,440c <_dtoa_r+0x166c>
    35fc:	e011883a 	mov	r8,fp
    3600:	d8000315 	stw	zero,12(sp)
    3604:	0023883a 	mov	r17,zero
    3608:	d8801f17 	ldw	r2,124(sp)
    360c:	00a4303a 	nor	r18,zero,r2
    3610:	0001da06 	br	3d7c <_dtoa_r+0xfdc>
    3614:	dcc00117 	ldw	r19,4(sp)
    3618:	dd000317 	ldw	r20,12(sp)
    361c:	dd800217 	ldw	r22,8(sp)
    3620:	980d883a 	mov	r6,r19
    3624:	a00f883a 	mov	r7,r20
    3628:	b009883a 	mov	r4,r22
    362c:	a80b883a 	mov	r5,r21
    3630:	000b9bc0 	call	b9bc <__divdf3>
    3634:	180b883a 	mov	r5,r3
    3638:	1009883a 	mov	r4,r2
    363c:	000d7280 	call	d728 <__fixdfsi>
    3640:	1009883a 	mov	r4,r2
    3644:	1023883a 	mov	r17,r2
    3648:	000d7a80 	call	d7a8 <__floatsidf>
    364c:	980d883a 	mov	r6,r19
    3650:	a00f883a 	mov	r7,r20
    3654:	1009883a 	mov	r4,r2
    3658:	180b883a 	mov	r5,r3
    365c:	000c5300 	call	c530 <__muldf3>
    3660:	100d883a 	mov	r6,r2
    3664:	b009883a 	mov	r4,r22
    3668:	a80b883a 	mov	r5,r21
    366c:	180f883a 	mov	r7,r3
    3670:	000cd380 	call	cd38 <__subdf3>
    3674:	89000c04 	addi	r4,r17,48
    3678:	e1000005 	stb	r4,0(fp)
    367c:	91800060 	cmpeqi	r6,r18,1
    3680:	1009883a 	mov	r4,r2
    3684:	180b883a 	mov	r5,r3
    3688:	e4c00044 	addi	r19,fp,1
    368c:	3002891e 	bne	r6,zero,40b4 <_dtoa_r+0x1314>
    3690:	ddc00215 	stw	r23,8(sp)
    3694:	05800044 	movi	r22,1
    3698:	ddc00117 	ldw	r23,4(sp)
    369c:	dc000415 	stw	r16,16(sp)
    36a0:	a023883a 	mov	r17,r20
    36a4:	00001c06 	br	3718 <_dtoa_r+0x978>
    36a8:	b80d883a 	mov	r6,r23
    36ac:	880f883a 	mov	r7,r17
    36b0:	a809883a 	mov	r4,r21
    36b4:	a00b883a 	mov	r5,r20
    36b8:	000b9bc0 	call	b9bc <__divdf3>
    36bc:	180b883a 	mov	r5,r3
    36c0:	1009883a 	mov	r4,r2
    36c4:	000d7280 	call	d728 <__fixdfsi>
    36c8:	1009883a 	mov	r4,r2
    36cc:	1021883a 	mov	r16,r2
    36d0:	000d7a80 	call	d7a8 <__floatsidf>
    36d4:	b80d883a 	mov	r6,r23
    36d8:	880f883a 	mov	r7,r17
    36dc:	1009883a 	mov	r4,r2
    36e0:	180b883a 	mov	r5,r3
    36e4:	000c5300 	call	c530 <__muldf3>
    36e8:	a809883a 	mov	r4,r21
    36ec:	a00b883a 	mov	r5,r20
    36f0:	100d883a 	mov	r6,r2
    36f4:	180f883a 	mov	r7,r3
    36f8:	000cd380 	call	cd38 <__subdf3>
    36fc:	81000c04 	addi	r4,r16,48
    3700:	99000005 	stb	r4,0(r19)
    3704:	b5800044 	addi	r22,r22,1
    3708:	9cc00044 	addi	r19,r19,1
    370c:	1009883a 	mov	r4,r2
    3710:	180b883a 	mov	r5,r3
    3714:	b4826426 	beq	r22,r18,40a8 <_dtoa_r+0x1308>
    3718:	000d883a 	mov	r6,zero
    371c:	01d00934 	movhi	r7,16420
    3720:	000c5300 	call	c530 <__muldf3>
    3724:	000d883a 	mov	r6,zero
    3728:	000f883a 	mov	r7,zero
    372c:	1009883a 	mov	r4,r2
    3730:	180b883a 	mov	r5,r3
    3734:	102b883a 	mov	r21,r2
    3738:	1829883a 	mov	r20,r3
    373c:	000c2a80 	call	c2a8 <__eqdf2>
    3740:	103fd91e 	bne	r2,zero,36a8 <_dtoa_r+0x908>
    3744:	d8800617 	ldw	r2,24(sp)
    3748:	ddc00217 	ldw	r23,8(sp)
    374c:	dc000417 	ldw	r16,16(sp)
    3750:	15400044 	addi	r21,r2,1
    3754:	9811883a 	mov	r8,r19
    3758:	00009a06 	br	39c4 <_dtoa_r+0xc24>
    375c:	0502120e 	bge	zero,r20,3fa8 <_dtoa_r+0x1208>
    3760:	d8000815 	stw	zero,32(sp)
    3764:	d8000515 	stw	zero,20(sp)
    3768:	d8800417 	ldw	r2,16(sp)
    376c:	d8c00117 	ldw	r3,4(sp)
    3770:	dd800615 	stw	r22,24(sp)
    3774:	1585883a 	add	r2,r2,r22
    3778:	d8800415 	stw	r2,16(sp)
    377c:	d8000315 	stw	zero,12(sp)
    3780:	188002a8 	cmpgeui	r2,r3,10
    3784:	103e2f26 	beq	r2,zero,3044 <_dtoa_r+0x2a4>
    3788:	00800044 	movi	r2,1
    378c:	04400044 	movi	r17,1
    3790:	d8000115 	stw	zero,4(sp)
    3794:	d8800715 	stw	r2,28(sp)
    3798:	04bfffc4 	movi	r18,-1
    379c:	d8001f15 	stw	zero,124(sp)
    37a0:	80001115 	stw	zero,68(r16)
    37a4:	dc800a15 	stw	r18,40(sp)
    37a8:	000b883a 	mov	r5,zero
    37ac:	003e4606 	br	30c8 <_dtoa_r+0x328>
    37b0:	d8c00717 	ldw	r3,28(sp)
    37b4:	1800b41e 	bne	r3,zero,3a88 <_dtoa_r+0xce8>
    37b8:	dd000317 	ldw	r20,12(sp)
    37bc:	dcc00517 	ldw	r19,20(sp)
    37c0:	d8000715 	stw	zero,28(sp)
    37c4:	0023883a 	mov	r17,zero
    37c8:	98000b26 	beq	r19,zero,37f8 <_dtoa_r+0xa58>
    37cc:	d8c00417 	ldw	r3,16(sp)
    37d0:	00c0090e 	bge	zero,r3,37f8 <_dtoa_r+0xa58>
    37d4:	9805883a 	mov	r2,r19
    37d8:	1cc1ab16 	blt	r3,r19,3e88 <_dtoa_r+0x10e8>
    37dc:	d8c00517 	ldw	r3,20(sp)
    37e0:	98a7c83a 	sub	r19,r19,r2
    37e4:	1887c83a 	sub	r3,r3,r2
    37e8:	d8c00515 	stw	r3,20(sp)
    37ec:	d8c00417 	ldw	r3,16(sp)
    37f0:	1885c83a 	sub	r2,r3,r2
    37f4:	d8800415 	stw	r2,16(sp)
    37f8:	d8800317 	ldw	r2,12(sp)
    37fc:	10000826 	beq	r2,zero,3820 <_dtoa_r+0xa80>
    3800:	d8800717 	ldw	r2,28(sp)
    3804:	10000126 	beq	r2,zero,380c <_dtoa_r+0xa6c>
    3808:	a0025a1e 	bne	r20,zero,4174 <_dtoa_r+0x13d4>
    380c:	d9800317 	ldw	r6,12(sp)
    3810:	b80b883a 	mov	r5,r23
    3814:	8009883a 	mov	r4,r16
    3818:	0006c640 	call	6c64 <__pow5mult>
    381c:	102f883a 	mov	r23,r2
    3820:	01400044 	movi	r5,1
    3824:	8009883a 	mov	r4,r16
    3828:	00068f00 	call	68f0 <__i2b>
    382c:	d8800315 	stw	r2,12(sp)
    3830:	b0015a1e 	bne	r22,zero,3d9c <_dtoa_r+0xffc>
    3834:	d8800117 	ldw	r2,4(sp)
    3838:	10800090 	cmplti	r2,r2,2
    383c:	1001751e 	bne	r2,zero,3e14 <_dtoa_r+0x1074>
    3840:	00800044 	movi	r2,1
    3844:	d9400417 	ldw	r5,16(sp)
    3848:	1145883a 	add	r2,r2,r5
    384c:	108007cc 	andi	r2,r2,31
    3850:	10009826 	beq	r2,zero,3ab4 <_dtoa_r+0xd14>
    3854:	00c00804 	movi	r3,32
    3858:	1887c83a 	sub	r3,r3,r2
    385c:	19000150 	cmplti	r4,r3,5
    3860:	20017e1e 	bne	r4,zero,3e5c <_dtoa_r+0x10bc>
    3864:	00c00704 	movi	r3,28
    3868:	1885c83a 	sub	r2,r3,r2
    386c:	d8c00517 	ldw	r3,20(sp)
    3870:	98a7883a 	add	r19,r19,r2
    3874:	1887883a 	add	r3,r3,r2
    3878:	2885883a 	add	r2,r5,r2
    387c:	d8c00515 	stw	r3,20(sp)
    3880:	d8800415 	stw	r2,16(sp)
    3884:	d8800517 	ldw	r2,20(sp)
    3888:	0080050e 	bge	zero,r2,38a0 <_dtoa_r+0xb00>
    388c:	b80b883a 	mov	r5,r23
    3890:	100d883a 	mov	r6,r2
    3894:	8009883a 	mov	r4,r16
    3898:	0006da40 	call	6da4 <__lshift>
    389c:	102f883a 	mov	r23,r2
    38a0:	d8800417 	ldw	r2,16(sp)
    38a4:	0080050e 	bge	zero,r2,38bc <_dtoa_r+0xb1c>
    38a8:	d9400317 	ldw	r5,12(sp)
    38ac:	100d883a 	mov	r6,r2
    38b0:	8009883a 	mov	r4,r16
    38b4:	0006da40 	call	6da4 <__lshift>
    38b8:	d8800315 	stw	r2,12(sp)
    38bc:	d8800817 	ldw	r2,32(sp)
    38c0:	10004c1e 	bne	r2,zero,39f4 <_dtoa_r+0xc54>
    38c4:	04811a0e 	bge	zero,r18,3d30 <_dtoa_r+0xf90>
    38c8:	d8800717 	ldw	r2,28(sp)
    38cc:	1000a11e 	bne	r2,zero,3b54 <_dtoa_r+0xdb4>
    38d0:	d8800617 	ldw	r2,24(sp)
    38d4:	15400044 	addi	r21,r2,1
    38d8:	dd800317 	ldw	r22,12(sp)
    38dc:	04c00044 	movi	r19,1
    38e0:	00000706 	br	3900 <_dtoa_r+0xb60>
    38e4:	b80b883a 	mov	r5,r23
    38e8:	000f883a 	mov	r7,zero
    38ec:	01800284 	movi	r6,10
    38f0:	8009883a 	mov	r4,r16
    38f4:	00065400 	call	6540 <__multadd>
    38f8:	102f883a 	mov	r23,r2
    38fc:	9cc00044 	addi	r19,r19,1
    3900:	b00b883a 	mov	r5,r22
    3904:	b809883a 	mov	r4,r23
    3908:	0002b880 	call	2b88 <quorem>
    390c:	15000c04 	addi	r20,r2,48
    3910:	e4c5883a 	add	r2,fp,r19
    3914:	153fffc5 	stb	r20,-1(r2)
    3918:	9cbff216 	blt	r19,r18,38e4 <_dtoa_r+0xb44>
    391c:	04800116 	blt	zero,r18,3924 <_dtoa_r+0xb84>
    3920:	04800044 	movi	r18,1
    3924:	e4a5883a 	add	r18,fp,r18
    3928:	d8000215 	stw	zero,8(sp)
    392c:	b80b883a 	mov	r5,r23
    3930:	8009883a 	mov	r4,r16
    3934:	01800044 	movi	r6,1
    3938:	0006da40 	call	6da4 <__lshift>
    393c:	d9400317 	ldw	r5,12(sp)
    3940:	1009883a 	mov	r4,r2
    3944:	102f883a 	mov	r23,r2
    3948:	0006f2c0 	call	6f2c <__mcmp>
    394c:	00800216 	blt	zero,r2,3958 <_dtoa_r+0xbb8>
    3950:	00017c06 	br	3f44 <_dtoa_r+0x11a4>
    3954:	e4819026 	beq	fp,r18,3f98 <_dtoa_r+0x11f8>
    3958:	90ffffc3 	ldbu	r3,-1(r18)
    395c:	9011883a 	mov	r8,r18
    3960:	94bfffc4 	addi	r18,r18,-1
    3964:	18803fcc 	andi	r2,r3,255
    3968:	1080201c 	xori	r2,r2,128
    396c:	10bfe004 	addi	r2,r2,-128
    3970:	10800e60 	cmpeqi	r2,r2,57
    3974:	103ff71e 	bne	r2,zero,3954 <_dtoa_r+0xbb4>
    3978:	18c00044 	addi	r3,r3,1
    397c:	90c00005 	stb	r3,0(r18)
    3980:	d9400317 	ldw	r5,12(sp)
    3984:	8009883a 	mov	r4,r16
    3988:	da000115 	stw	r8,4(sp)
    398c:	000651c0 	call	651c <_Bfree>
    3990:	da000117 	ldw	r8,4(sp)
    3994:	88000b26 	beq	r17,zero,39c4 <_dtoa_r+0xc24>
    3998:	d9400217 	ldw	r5,8(sp)
    399c:	28000426 	beq	r5,zero,39b0 <_dtoa_r+0xc10>
    39a0:	2c400326 	beq	r5,r17,39b0 <_dtoa_r+0xc10>
    39a4:	8009883a 	mov	r4,r16
    39a8:	000651c0 	call	651c <_Bfree>
    39ac:	da000117 	ldw	r8,4(sp)
    39b0:	880b883a 	mov	r5,r17
    39b4:	8009883a 	mov	r4,r16
    39b8:	da000115 	stw	r8,4(sp)
    39bc:	000651c0 	call	651c <_Bfree>
    39c0:	da000117 	ldw	r8,4(sp)
    39c4:	b80b883a 	mov	r5,r23
    39c8:	8009883a 	mov	r4,r16
    39cc:	da000115 	stw	r8,4(sp)
    39d0:	000651c0 	call	651c <_Bfree>
    39d4:	da000117 	ldw	r8,4(sp)
    39d8:	d8802017 	ldw	r2,128(sp)
    39dc:	40000005 	stb	zero,0(r8)
    39e0:	15400015 	stw	r21,0(r2)
    39e4:	d8802217 	ldw	r2,136(sp)
    39e8:	103d1e26 	beq	r2,zero,2e64 <_dtoa_r+0xc4>
    39ec:	12000015 	stw	r8,0(r2)
    39f0:	003d1c06 	br	2e64 <_dtoa_r+0xc4>
    39f4:	d9400317 	ldw	r5,12(sp)
    39f8:	b809883a 	mov	r4,r23
    39fc:	0006f2c0 	call	6f2c <__mcmp>
    3a00:	103fb00e 	bge	r2,zero,38c4 <_dtoa_r+0xb24>
    3a04:	b80b883a 	mov	r5,r23
    3a08:	000f883a 	mov	r7,zero
    3a0c:	01800284 	movi	r6,10
    3a10:	8009883a 	mov	r4,r16
    3a14:	00065400 	call	6540 <__multadd>
    3a18:	d8c00617 	ldw	r3,24(sp)
    3a1c:	102f883a 	mov	r23,r2
    3a20:	d8800717 	ldw	r2,28(sp)
    3a24:	1d7fffc4 	addi	r21,r3,-1
    3a28:	1000411e 	bne	r2,zero,3b30 <_dtoa_r+0xd90>
    3a2c:	dc800a17 	ldw	r18,40(sp)
    3a30:	0482940e 	bge	zero,r18,4484 <_dtoa_r+0x16e4>
    3a34:	dd400617 	ldw	r21,24(sp)
    3a38:	003fa706 	br	38d8 <_dtoa_r+0xb38>
    3a3c:	00800044 	movi	r2,1
    3a40:	d8800815 	stw	r2,32(sp)
    3a44:	a0bfffc4 	addi	r2,r20,-1
    3a48:	103d720e 	bge	r2,zero,3014 <_dtoa_r+0x274>
    3a4c:	00800044 	movi	r2,1
    3a50:	1505c83a 	sub	r2,r2,r20
    3a54:	d8800515 	stw	r2,20(sp)
    3a58:	d8000415 	stw	zero,16(sp)
    3a5c:	003d6e06 	br	3018 <_dtoa_r+0x278>
    3a60:	b009883a 	mov	r4,r22
    3a64:	000d7a80 	call	d7a8 <__floatsidf>
    3a68:	980d883a 	mov	r6,r19
    3a6c:	900f883a 	mov	r7,r18
    3a70:	1009883a 	mov	r4,r2
    3a74:	180b883a 	mov	r5,r3
    3a78:	000c2a80 	call	c2a8 <__eqdf2>
    3a7c:	103d5226 	beq	r2,zero,2fc8 <_dtoa_r+0x228>
    3a80:	b5bfffc4 	addi	r22,r22,-1
    3a84:	003d5006 	br	2fc8 <_dtoa_r+0x228>
    3a88:	d8c00117 	ldw	r3,4(sp)
    3a8c:	18c00088 	cmpgei	r3,r3,2
    3a90:	18013526 	beq	r3,zero,3f68 <_dtoa_r+0x11c8>
    3a94:	d8800317 	ldw	r2,12(sp)
    3a98:	953fffc4 	addi	r20,r18,-1
    3a9c:	1500fc16 	blt	r2,r20,3e90 <_dtoa_r+0x10f0>
    3aa0:	1529c83a 	sub	r20,r2,r20
    3aa4:	d8800517 	ldw	r2,20(sp)
    3aa8:	9002620e 	bge	r18,zero,4434 <_dtoa_r+0x1694>
    3aac:	14a7c83a 	sub	r19,r2,r18
    3ab0:	00010306 	br	3ec0 <_dtoa_r+0x1120>
    3ab4:	00800704 	movi	r2,28
    3ab8:	d8c00517 	ldw	r3,20(sp)
    3abc:	98a7883a 	add	r19,r19,r2
    3ac0:	1887883a 	add	r3,r3,r2
    3ac4:	d8c00515 	stw	r3,20(sp)
    3ac8:	d8c00417 	ldw	r3,16(sp)
    3acc:	1885883a 	add	r2,r3,r2
    3ad0:	d8800415 	stw	r2,16(sp)
    3ad4:	003f6b06 	br	3884 <_dtoa_r+0xae4>
    3ad8:	d8c00117 	ldw	r3,4(sp)
    3adc:	188000e0 	cmpeqi	r2,r3,3
    3ae0:	1001151e 	bne	r2,zero,3f38 <_dtoa_r+0x1198>
    3ae4:	18800108 	cmpgei	r2,r3,4
    3ae8:	10000226 	beq	r2,zero,3af4 <_dtoa_r+0xd54>
    3aec:	04400044 	movi	r17,1
    3af0:	003d5d06 	br	3068 <_dtoa_r+0x2c8>
    3af4:	188000a0 	cmpeqi	r2,r3,2
    3af8:	10028d26 	beq	r2,zero,4530 <_dtoa_r+0x1790>
    3afc:	04400044 	movi	r17,1
    3b00:	d8000715 	stw	zero,28(sp)
    3b04:	d8801f17 	ldw	r2,124(sp)
    3b08:	0080be0e 	bge	zero,r2,3e04 <_dtoa_r+0x1064>
    3b0c:	d8800a15 	stw	r2,40(sp)
    3b10:	1025883a 	mov	r18,r2
    3b14:	100d883a 	mov	r6,r2
    3b18:	003d6106 	br	30a0 <_dtoa_r+0x300>
    3b1c:	01000804 	movi	r4,32
    3b20:	2089c83a 	sub	r4,r4,r2
    3b24:	d8800217 	ldw	r2,8(sp)
    3b28:	1108983a 	sll	r4,r2,r4
    3b2c:	003cf206 	br	2ef8 <_dtoa_r+0x158>
    3b30:	880b883a 	mov	r5,r17
    3b34:	000f883a 	mov	r7,zero
    3b38:	01800284 	movi	r6,10
    3b3c:	8009883a 	mov	r4,r16
    3b40:	00065400 	call	6540 <__multadd>
    3b44:	dc800a17 	ldw	r18,40(sp)
    3b48:	1023883a 	mov	r17,r2
    3b4c:	04825d0e 	bge	zero,r18,44c4 <_dtoa_r+0x1724>
    3b50:	dd400615 	stw	r21,24(sp)
    3b54:	04c0c616 	blt	zero,r19,3e70 <_dtoa_r+0x10d0>
    3b58:	b0016e1e 	bne	r22,zero,4114 <_dtoa_r+0x1374>
    3b5c:	8827883a 	mov	r19,r17
    3b60:	e0bfffc4 	addi	r2,fp,-1
    3b64:	1485883a 	add	r2,r2,r18
    3b68:	d8800515 	stw	r2,20(sp)
    3b6c:	d8800217 	ldw	r2,8(sp)
    3b70:	e02d883a 	mov	r22,fp
    3b74:	df000815 	stw	fp,32(sp)
    3b78:	1080004c 	andi	r2,r2,1
    3b7c:	d8800715 	stw	r2,28(sp)
    3b80:	dc800317 	ldw	r18,12(sp)
    3b84:	b809883a 	mov	r4,r23
    3b88:	900b883a 	mov	r5,r18
    3b8c:	0002b880 	call	2b88 <quorem>
    3b90:	880b883a 	mov	r5,r17
    3b94:	b809883a 	mov	r4,r23
    3b98:	102b883a 	mov	r21,r2
    3b9c:	0006f2c0 	call	6f2c <__mcmp>
    3ba0:	900b883a 	mov	r5,r18
    3ba4:	980d883a 	mov	r6,r19
    3ba8:	8009883a 	mov	r4,r16
    3bac:	1025883a 	mov	r18,r2
    3bb0:	0006f840 	call	6f84 <__mdiff>
    3bb4:	100b883a 	mov	r5,r2
    3bb8:	10800317 	ldw	r2,12(r2)
    3bbc:	af000c04 	addi	fp,r21,48
    3bc0:	1000261e 	bne	r2,zero,3c5c <_dtoa_r+0xebc>
    3bc4:	b809883a 	mov	r4,r23
    3bc8:	d9400415 	stw	r5,16(sp)
    3bcc:	0006f2c0 	call	6f2c <__mcmp>
    3bd0:	d9400417 	ldw	r5,16(sp)
    3bd4:	1029883a 	mov	r20,r2
    3bd8:	8009883a 	mov	r4,r16
    3bdc:	000651c0 	call	651c <_Bfree>
    3be0:	a000401e 	bne	r20,zero,3ce4 <_dtoa_r+0xf44>
    3be4:	d8800117 	ldw	r2,4(sp)
    3be8:	1000021e 	bne	r2,zero,3bf4 <_dtoa_r+0xe54>
    3bec:	d8800717 	ldw	r2,28(sp)
    3bf0:	1000cb26 	beq	r2,zero,3f20 <_dtoa_r+0x1180>
    3bf4:	90020816 	blt	r18,zero,4418 <_dtoa_r+0x1678>
    3bf8:	d8800517 	ldw	r2,20(sp)
    3bfc:	b7000005 	stb	fp,0(r22)
    3c00:	b4800044 	addi	r18,r22,1
    3c04:	15815426 	beq	r2,r22,4158 <_dtoa_r+0x13b8>
    3c08:	b80b883a 	mov	r5,r23
    3c0c:	000f883a 	mov	r7,zero
    3c10:	01800284 	movi	r6,10
    3c14:	8009883a 	mov	r4,r16
    3c18:	00065400 	call	6540 <__multadd>
    3c1c:	102f883a 	mov	r23,r2
    3c20:	880b883a 	mov	r5,r17
    3c24:	000f883a 	mov	r7,zero
    3c28:	01800284 	movi	r6,10
    3c2c:	8009883a 	mov	r4,r16
    3c30:	8cc02826 	beq	r17,r19,3cd4 <_dtoa_r+0xf34>
    3c34:	00065400 	call	6540 <__multadd>
    3c38:	980b883a 	mov	r5,r19
    3c3c:	000f883a 	mov	r7,zero
    3c40:	01800284 	movi	r6,10
    3c44:	8009883a 	mov	r4,r16
    3c48:	1023883a 	mov	r17,r2
    3c4c:	00065400 	call	6540 <__multadd>
    3c50:	1027883a 	mov	r19,r2
    3c54:	902d883a 	mov	r22,r18
    3c58:	003fc906 	br	3b80 <_dtoa_r+0xde0>
    3c5c:	8009883a 	mov	r4,r16
    3c60:	e029883a 	mov	r20,fp
    3c64:	df000817 	ldw	fp,32(sp)
    3c68:	000651c0 	call	651c <_Bfree>
    3c6c:	90000616 	blt	r18,zero,3c88 <_dtoa_r+0xee8>
    3c70:	d8800217 	ldw	r2,8(sp)
    3c74:	d8c00117 	ldw	r3,4(sp)
    3c78:	1080004c 	andi	r2,r2,1
    3c7c:	1ca4b03a 	or	r18,r3,r18
    3c80:	1484b03a 	or	r2,r2,r18
    3c84:	1000201e 	bne	r2,zero,3d08 <_dtoa_r+0xf68>
    3c88:	b80b883a 	mov	r5,r23
    3c8c:	8009883a 	mov	r4,r16
    3c90:	01800044 	movi	r6,1
    3c94:	0006da40 	call	6da4 <__lshift>
    3c98:	d9400317 	ldw	r5,12(sp)
    3c9c:	1009883a 	mov	r4,r2
    3ca0:	102f883a 	mov	r23,r2
    3ca4:	0006f2c0 	call	6f2c <__mcmp>
    3ca8:	0080990e 	bge	zero,r2,3f10 <_dtoa_r+0x1170>
    3cac:	a0c00e60 	cmpeqi	r3,r20,57
    3cb0:	1801ce1e 	bne	r3,zero,43ec <_dtoa_r+0x164c>
    3cb4:	ad000c44 	addi	r20,r21,49
    3cb8:	d8800617 	ldw	r2,24(sp)
    3cbc:	dc400215 	stw	r17,8(sp)
    3cc0:	b2000044 	addi	r8,r22,1
    3cc4:	b5000005 	stb	r20,0(r22)
    3cc8:	15400044 	addi	r21,r2,1
    3ccc:	9823883a 	mov	r17,r19
    3cd0:	003f2b06 	br	3980 <_dtoa_r+0xbe0>
    3cd4:	00065400 	call	6540 <__multadd>
    3cd8:	1023883a 	mov	r17,r2
    3cdc:	1027883a 	mov	r19,r2
    3ce0:	003fdc06 	br	3c54 <_dtoa_r+0xeb4>
    3ce4:	90022316 	blt	r18,zero,4574 <_dtoa_r+0x17d4>
    3ce8:	d8800117 	ldw	r2,4(sp)
    3cec:	14a4b03a 	or	r18,r2,r18
    3cf0:	d8800717 	ldw	r2,28(sp)
    3cf4:	14a4b03a 	or	r18,r2,r18
    3cf8:	90021e26 	beq	r18,zero,4574 <_dtoa_r+0x17d4>
    3cfc:	053fbe0e 	bge	zero,r20,3bf8 <_dtoa_r+0xe58>
    3d00:	e029883a 	mov	r20,fp
    3d04:	df000817 	ldw	fp,32(sp)
    3d08:	a0800e60 	cmpeqi	r2,r20,57
    3d0c:	1001b71e 	bne	r2,zero,43ec <_dtoa_r+0x164c>
    3d10:	d8800617 	ldw	r2,24(sp)
    3d14:	a0c00044 	addi	r3,r20,1
    3d18:	dc400215 	stw	r17,8(sp)
    3d1c:	b2000044 	addi	r8,r22,1
    3d20:	15400044 	addi	r21,r2,1
    3d24:	b0c00005 	stb	r3,0(r22)
    3d28:	9823883a 	mov	r17,r19
    3d2c:	003f1406 	br	3980 <_dtoa_r+0xbe0>
    3d30:	d8800117 	ldw	r2,4(sp)
    3d34:	108000d0 	cmplti	r2,r2,3
    3d38:	103ee31e 	bne	r2,zero,38c8 <_dtoa_r+0xb28>
    3d3c:	9000d81e 	bne	r18,zero,40a0 <_dtoa_r+0x1300>
    3d40:	d9400317 	ldw	r5,12(sp)
    3d44:	8009883a 	mov	r4,r16
    3d48:	000f883a 	mov	r7,zero
    3d4c:	01800144 	movi	r6,5
    3d50:	00065400 	call	6540 <__multadd>
    3d54:	100b883a 	mov	r5,r2
    3d58:	b809883a 	mov	r4,r23
    3d5c:	d8800315 	stw	r2,12(sp)
    3d60:	0006f2c0 	call	6f2c <__mcmp>
    3d64:	0080ce0e 	bge	zero,r2,40a0 <_dtoa_r+0x1300>
    3d68:	00800c44 	movi	r2,49
    3d6c:	e0800005 	stb	r2,0(fp)
    3d70:	d8800617 	ldw	r2,24(sp)
    3d74:	e2000044 	addi	r8,fp,1
    3d78:	14800044 	addi	r18,r2,1
    3d7c:	d9400317 	ldw	r5,12(sp)
    3d80:	8009883a 	mov	r4,r16
    3d84:	da000115 	stw	r8,4(sp)
    3d88:	000651c0 	call	651c <_Bfree>
    3d8c:	da000117 	ldw	r8,4(sp)
    3d90:	95400044 	addi	r21,r18,1
    3d94:	883f061e 	bne	r17,zero,39b0 <_dtoa_r+0xc10>
    3d98:	003f0a06 	br	39c4 <_dtoa_r+0xc24>
    3d9c:	100b883a 	mov	r5,r2
    3da0:	b00d883a 	mov	r6,r22
    3da4:	8009883a 	mov	r4,r16
    3da8:	0006c640 	call	6c64 <__pow5mult>
    3dac:	d8c00117 	ldw	r3,4(sp)
    3db0:	d8800315 	stw	r2,12(sp)
    3db4:	18c00090 	cmplti	r3,r3,2
    3db8:	1800461e 	bne	r3,zero,3ed4 <_dtoa_r+0x1134>
    3dbc:	002d883a 	mov	r22,zero
    3dc0:	d8c00317 	ldw	r3,12(sp)
    3dc4:	18800417 	ldw	r2,16(r3)
    3dc8:	10800104 	addi	r2,r2,4
    3dcc:	100490ba 	slli	r2,r2,2
    3dd0:	1885883a 	add	r2,r3,r2
    3dd4:	11000017 	ldw	r4,0(r2)
    3dd8:	00067cc0 	call	67cc <__hi0bits>
    3ddc:	00c00804 	movi	r3,32
    3de0:	1885c83a 	sub	r2,r3,r2
    3de4:	003e9706 	br	3844 <_dtoa_r+0xaa4>
    3de8:	00800074 	movhi	r2,1
    3dec:	e7018404 	addi	fp,fp,1552
    3df0:	108184c4 	addi	r2,r2,1555
    3df4:	003db106 	br	34bc <_dtoa_r+0x71c>
    3df8:	00800044 	movi	r2,1
    3dfc:	d8800715 	stw	r2,28(sp)
    3e00:	003f4006 	br	3b04 <_dtoa_r+0xd64>
    3e04:	00800044 	movi	r2,1
    3e08:	04800044 	movi	r18,1
    3e0c:	d8801f15 	stw	r2,124(sp)
    3e10:	003e6306 	br	37a0 <_dtoa_r+0xa00>
    3e14:	d8800217 	ldw	r2,8(sp)
    3e18:	103e891e 	bne	r2,zero,3840 <_dtoa_r+0xaa0>
    3e1c:	00800434 	movhi	r2,16
    3e20:	10bfffc4 	addi	r2,r2,-1
    3e24:	a884703a 	and	r2,r21,r2
    3e28:	103e851e 	bne	r2,zero,3840 <_dtoa_r+0xaa0>
    3e2c:	a89ffc2c 	andhi	r2,r21,32752
    3e30:	10017c26 	beq	r2,zero,4424 <_dtoa_r+0x1684>
    3e34:	d8800517 	ldw	r2,20(sp)
    3e38:	10800044 	addi	r2,r2,1
    3e3c:	d8800515 	stw	r2,20(sp)
    3e40:	d8800417 	ldw	r2,16(sp)
    3e44:	10800044 	addi	r2,r2,1
    3e48:	d8800415 	stw	r2,16(sp)
    3e4c:	00800044 	movi	r2,1
    3e50:	b001761e 	bne	r22,zero,442c <_dtoa_r+0x168c>
    3e54:	102d883a 	mov	r22,r2
    3e58:	003e7906 	br	3840 <_dtoa_r+0xaa0>
    3e5c:	18c00120 	cmpeqi	r3,r3,4
    3e60:	183e881e 	bne	r3,zero,3884 <_dtoa_r+0xae4>
    3e64:	00c00f04 	movi	r3,60
    3e68:	1885c83a 	sub	r2,r3,r2
    3e6c:	003f1206 	br	3ab8 <_dtoa_r+0xd18>
    3e70:	880b883a 	mov	r5,r17
    3e74:	980d883a 	mov	r6,r19
    3e78:	8009883a 	mov	r4,r16
    3e7c:	0006da40 	call	6da4 <__lshift>
    3e80:	1023883a 	mov	r17,r2
    3e84:	003f3406 	br	3b58 <_dtoa_r+0xdb8>
    3e88:	1805883a 	mov	r2,r3
    3e8c:	003e5306 	br	37dc <_dtoa_r+0xa3c>
    3e90:	d8800317 	ldw	r2,12(sp)
    3e94:	d8c00517 	ldw	r3,20(sp)
    3e98:	dd000315 	stw	r20,12(sp)
    3e9c:	a085c83a 	sub	r2,r20,r2
    3ea0:	b0ad883a 	add	r22,r22,r2
    3ea4:	d8800417 	ldw	r2,16(sp)
    3ea8:	1827883a 	mov	r19,r3
    3eac:	0029883a 	mov	r20,zero
    3eb0:	1485883a 	add	r2,r2,r18
    3eb4:	d8800415 	stw	r2,16(sp)
    3eb8:	1c85883a 	add	r2,r3,r18
    3ebc:	d8800515 	stw	r2,20(sp)
    3ec0:	01400044 	movi	r5,1
    3ec4:	8009883a 	mov	r4,r16
    3ec8:	00068f00 	call	68f0 <__i2b>
    3ecc:	1023883a 	mov	r17,r2
    3ed0:	003e3d06 	br	37c8 <_dtoa_r+0xa28>
    3ed4:	d8800217 	ldw	r2,8(sp)
    3ed8:	103fb81e 	bne	r2,zero,3dbc <_dtoa_r+0x101c>
    3edc:	00800434 	movhi	r2,16
    3ee0:	10bfffc4 	addi	r2,r2,-1
    3ee4:	a884703a 	and	r2,r21,r2
    3ee8:	103fb41e 	bne	r2,zero,3dbc <_dtoa_r+0x101c>
    3eec:	003fcf06 	br	3e2c <_dtoa_r+0x108c>
    3ef0:	d9000217 	ldw	r4,8(sp)
    3ef4:	a80b883a 	mov	r5,r21
    3ef8:	04c00084 	movi	r19,2
    3efc:	003c9506 	br	3154 <_dtoa_r+0x3b4>
    3f00:	00800084 	movi	r2,2
    3f04:	d8800115 	stw	r2,4(sp)
    3f08:	d8000715 	stw	zero,28(sp)
    3f0c:	003efd06 	br	3b04 <_dtoa_r+0xd64>
    3f10:	103f691e 	bne	r2,zero,3cb8 <_dtoa_r+0xf18>
    3f14:	a080004c 	andi	r2,r20,1
    3f18:	103f641e 	bne	r2,zero,3cac <_dtoa_r+0xf0c>
    3f1c:	003f6606 	br	3cb8 <_dtoa_r+0xf18>
    3f20:	e029883a 	mov	r20,fp
    3f24:	a0800e60 	cmpeqi	r2,r20,57
    3f28:	df000817 	ldw	fp,32(sp)
    3f2c:	10012f1e 	bne	r2,zero,43ec <_dtoa_r+0x164c>
    3f30:	04bf6016 	blt	zero,r18,3cb4 <_dtoa_r+0xf14>
    3f34:	003f6006 	br	3cb8 <_dtoa_r+0xf18>
    3f38:	04400044 	movi	r17,1
    3f3c:	d8000715 	stw	zero,28(sp)
    3f40:	003c5006 	br	3084 <_dtoa_r+0x2e4>
    3f44:	1000021e 	bne	r2,zero,3f50 <_dtoa_r+0x11b0>
    3f48:	a0c0004c 	andi	r3,r20,1
    3f4c:	183e821e 	bne	r3,zero,3958 <_dtoa_r+0xbb8>
    3f50:	90bfffc7 	ldb	r2,-1(r18)
    3f54:	9011883a 	mov	r8,r18
    3f58:	94bfffc4 	addi	r18,r18,-1
    3f5c:	10800c20 	cmpeqi	r2,r2,48
    3f60:	103ffb1e 	bne	r2,zero,3f50 <_dtoa_r+0x11b0>
    3f64:	003e8606 	br	3980 <_dtoa_r+0xbe0>
    3f68:	d8c00917 	ldw	r3,36(sp)
    3f6c:	18009526 	beq	r3,zero,41c4 <_dtoa_r+0x1424>
    3f70:	d8c00517 	ldw	r3,20(sp)
    3f74:	d9000417 	ldw	r4,16(sp)
    3f78:	10810cc4 	addi	r2,r2,1075
    3f7c:	dd000317 	ldw	r20,12(sp)
    3f80:	2089883a 	add	r4,r4,r2
    3f84:	1885883a 	add	r2,r3,r2
    3f88:	1827883a 	mov	r19,r3
    3f8c:	d9000415 	stw	r4,16(sp)
    3f90:	d8800515 	stw	r2,20(sp)
    3f94:	003fca06 	br	3ec0 <_dtoa_r+0x1120>
    3f98:	00800c44 	movi	r2,49
    3f9c:	e0800005 	stb	r2,0(fp)
    3fa0:	ad400044 	addi	r21,r21,1
    3fa4:	003e7606 	br	3980 <_dtoa_r+0xbe0>
    3fa8:	00800044 	movi	r2,1
    3fac:	1505c83a 	sub	r2,r2,r20
    3fb0:	d8800515 	stw	r2,20(sp)
    3fb4:	d8000415 	stw	zero,16(sp)
    3fb8:	d8000815 	stw	zero,32(sp)
    3fbc:	003dea06 	br	3768 <_dtoa_r+0x9c8>
    3fc0:	d8800617 	ldw	r2,24(sp)
    3fc4:	1000e326 	beq	r2,zero,4354 <_dtoa_r+0x15b4>
    3fc8:	0091c83a 	sub	r8,zero,r2
    3fcc:	408003cc 	andi	r2,r8,15
    3fd0:	100490fa 	slli	r2,r2,3
    3fd4:	02c00074 	movhi	r11,1
    3fd8:	5ac1c104 	addi	r11,r11,1796
    3fdc:	5885883a 	add	r2,r11,r2
    3fe0:	4011d13a 	srai	r8,r8,4
    3fe4:	11800017 	ldw	r6,0(r2)
    3fe8:	11c00117 	ldw	r7,4(r2)
    3fec:	d9000217 	ldw	r4,8(sp)
    3ff0:	a80b883a 	mov	r5,r21
    3ff4:	da000b15 	stw	r8,44(sp)
    3ff8:	000c5300 	call	c530 <__muldf3>
    3ffc:	da000b17 	ldw	r8,44(sp)
    4000:	40013726 	beq	r8,zero,44e0 <_dtoa_r+0x1740>
    4004:	02400074 	movhi	r9,1
    4008:	000b883a 	mov	r5,zero
    400c:	04c00084 	movi	r19,2
    4010:	4a41b704 	addi	r9,r9,1756
    4014:	dc800b15 	stw	r18,44(sp)
    4018:	1009883a 	mov	r4,r2
    401c:	9825883a 	mov	r18,r19
    4020:	d8800c15 	stw	r2,48(sp)
    4024:	8027883a 	mov	r19,r16
    4028:	2805883a 	mov	r2,r5
    402c:	1829883a 	mov	r20,r3
    4030:	4021883a 	mov	r16,r8
    4034:	4823883a 	mov	r17,r9
    4038:	180b883a 	mov	r5,r3
    403c:	8180004c 	andi	r6,r16,1
    4040:	30000726 	beq	r6,zero,4060 <_dtoa_r+0x12c0>
    4044:	89800017 	ldw	r6,0(r17)
    4048:	89c00117 	ldw	r7,4(r17)
    404c:	94800044 	addi	r18,r18,1
    4050:	000c5300 	call	c530 <__muldf3>
    4054:	1009883a 	mov	r4,r2
    4058:	180b883a 	mov	r5,r3
    405c:	00800044 	movi	r2,1
    4060:	8021d07a 	srai	r16,r16,1
    4064:	8c400204 	addi	r17,r17,8
    4068:	803ff41e 	bne	r16,zero,403c <_dtoa_r+0x129c>
    406c:	a007883a 	mov	r3,r20
    4070:	2829883a 	mov	r20,r5
    4074:	100b883a 	mov	r5,r2
    4078:	29403fcc 	andi	r5,r5,255
    407c:	9821883a 	mov	r16,r19
    4080:	d8800c17 	ldw	r2,48(sp)
    4084:	9027883a 	mov	r19,r18
    4088:	2023883a 	mov	r17,r4
    408c:	dc800b17 	ldw	r18,44(sp)
    4090:	283c521e 	bne	r5,zero,31dc <_dtoa_r+0x43c>
    4094:	1023883a 	mov	r17,r2
    4098:	1829883a 	mov	r20,r3
    409c:	003c4f06 	br	31dc <_dtoa_r+0x43c>
    40a0:	e011883a 	mov	r8,fp
    40a4:	003d5806 	br	3608 <_dtoa_r+0x868>
    40a8:	8023883a 	mov	r17,r16
    40ac:	ddc00217 	ldw	r23,8(sp)
    40b0:	dc000417 	ldw	r16,16(sp)
    40b4:	200d883a 	mov	r6,r4
    40b8:	280f883a 	mov	r7,r5
    40bc:	000b0b80 	call	b0b8 <__adddf3>
    40c0:	1009883a 	mov	r4,r2
    40c4:	d9800117 	ldw	r6,4(sp)
    40c8:	d9c00317 	ldw	r7,12(sp)
    40cc:	1029883a 	mov	r20,r2
    40d0:	d8800617 	ldw	r2,24(sp)
    40d4:	180b883a 	mov	r5,r3
    40d8:	1825883a 	mov	r18,r3
    40dc:	15400044 	addi	r21,r2,1
    40e0:	000c33c0 	call	c33c <__gedf2>
    40e4:	a82d883a 	mov	r22,r21
    40e8:	00bcd016 	blt	zero,r2,342c <_dtoa_r+0x68c>
    40ec:	d9800117 	ldw	r6,4(sp)
    40f0:	d9c00317 	ldw	r7,12(sp)
    40f4:	a009883a 	mov	r4,r20
    40f8:	900b883a 	mov	r5,r18
    40fc:	000c2a80 	call	c2a8 <__eqdf2>
    4100:	1000021e 	bne	r2,zero,410c <_dtoa_r+0x136c>
    4104:	8880004c 	andi	r2,r17,1
    4108:	103cc81e 	bne	r2,zero,342c <_dtoa_r+0x68c>
    410c:	9811883a 	mov	r8,r19
    4110:	003e2c06 	br	39c4 <_dtoa_r+0xc24>
    4114:	89400117 	ldw	r5,4(r17)
    4118:	8009883a 	mov	r4,r16
    411c:	00064780 	call	6478 <_Balloc>
    4120:	1027883a 	mov	r19,r2
    4124:	1000f226 	beq	r2,zero,44f0 <_dtoa_r+0x1750>
    4128:	89800417 	ldw	r6,16(r17)
    412c:	89400304 	addi	r5,r17,12
    4130:	11000304 	addi	r4,r2,12
    4134:	31800084 	addi	r6,r6,2
    4138:	300c90ba 	slli	r6,r6,2
    413c:	00061100 	call	6110 <memcpy>
    4140:	980b883a 	mov	r5,r19
    4144:	01800044 	movi	r6,1
    4148:	8009883a 	mov	r4,r16
    414c:	0006da40 	call	6da4 <__lshift>
    4150:	1027883a 	mov	r19,r2
    4154:	003e8206 	br	3b60 <_dtoa_r+0xdc0>
    4158:	d8800617 	ldw	r2,24(sp)
    415c:	e029883a 	mov	r20,fp
    4160:	dc400215 	stw	r17,8(sp)
    4164:	df000817 	ldw	fp,32(sp)
    4168:	15400044 	addi	r21,r2,1
    416c:	9823883a 	mov	r17,r19
    4170:	003dee06 	br	392c <_dtoa_r+0xb8c>
    4174:	880b883a 	mov	r5,r17
    4178:	a00d883a 	mov	r6,r20
    417c:	8009883a 	mov	r4,r16
    4180:	0006c640 	call	6c64 <__pow5mult>
    4184:	b80d883a 	mov	r6,r23
    4188:	100b883a 	mov	r5,r2
    418c:	8009883a 	mov	r4,r16
    4190:	1023883a 	mov	r17,r2
    4194:	00069a00 	call	69a0 <__multiply>
    4198:	d8800915 	stw	r2,36(sp)
    419c:	d8800317 	ldw	r2,12(sp)
    41a0:	b80b883a 	mov	r5,r23
    41a4:	8009883a 	mov	r4,r16
    41a8:	1529c83a 	sub	r20,r2,r20
    41ac:	dd000315 	stw	r20,12(sp)
    41b0:	000651c0 	call	651c <_Bfree>
    41b4:	d8800917 	ldw	r2,36(sp)
    41b8:	102f883a 	mov	r23,r2
    41bc:	a03d9826 	beq	r20,zero,3820 <_dtoa_r+0xa80>
    41c0:	003d9206 	br	380c <_dtoa_r+0xa6c>
    41c4:	d8c01317 	ldw	r3,76(sp)
    41c8:	00800d84 	movi	r2,54
    41cc:	d9000517 	ldw	r4,20(sp)
    41d0:	10c5c83a 	sub	r2,r2,r3
    41d4:	d8c00417 	ldw	r3,16(sp)
    41d8:	dd000317 	ldw	r20,12(sp)
    41dc:	2027883a 	mov	r19,r4
    41e0:	1887883a 	add	r3,r3,r2
    41e4:	2085883a 	add	r2,r4,r2
    41e8:	d8c00415 	stw	r3,16(sp)
    41ec:	d8800515 	stw	r2,20(sp)
    41f0:	003f3306 	br	3ec0 <_dtoa_r+0x1120>
    41f4:	d9000b17 	ldw	r4,44(sp)
    41f8:	d9800f17 	ldw	r6,60(sp)
    41fc:	d9c01017 	ldw	r7,64(sp)
    4200:	980b883a 	mov	r5,r19
    4204:	dac01215 	stw	r11,72(sp)
    4208:	da000d15 	stw	r8,52(sp)
    420c:	000c5300 	call	c530 <__muldf3>
    4210:	d9000e17 	ldw	r4,56(sp)
    4214:	d9400c17 	ldw	r5,48(sp)
    4218:	d8800715 	stw	r2,28(sp)
    421c:	e1000005 	stb	r4,0(fp)
    4220:	d8c00915 	stw	r3,36(sp)
    4224:	29000058 	cmpnei	r4,r5,1
    4228:	da000d17 	ldw	r8,52(sp)
    422c:	dac01217 	ldw	r11,72(sp)
    4230:	e167883a 	add	r19,fp,r5
    4234:	2000a126 	beq	r4,zero,44bc <_dtoa_r+0x171c>
    4238:	dc000c15 	stw	r16,48(sp)
    423c:	dc800b15 	stw	r18,44(sp)
    4240:	4021883a 	mov	r16,r8
    4244:	a009883a 	mov	r4,r20
    4248:	880b883a 	mov	r5,r17
    424c:	dac00d15 	stw	r11,52(sp)
    4250:	000d883a 	mov	r6,zero
    4254:	01d00934 	movhi	r7,16420
    4258:	000c5300 	call	c530 <__muldf3>
    425c:	180b883a 	mov	r5,r3
    4260:	1009883a 	mov	r4,r2
    4264:	1825883a 	mov	r18,r3
    4268:	1029883a 	mov	r20,r2
    426c:	000d7280 	call	d728 <__fixdfsi>
    4270:	1009883a 	mov	r4,r2
    4274:	1023883a 	mov	r17,r2
    4278:	000d7a80 	call	d7a8 <__floatsidf>
    427c:	a009883a 	mov	r4,r20
    4280:	900b883a 	mov	r5,r18
    4284:	100d883a 	mov	r6,r2
    4288:	180f883a 	mov	r7,r3
    428c:	84000044 	addi	r16,r16,1
    4290:	8c400c04 	addi	r17,r17,48
    4294:	000cd380 	call	cd38 <__subdf3>
    4298:	847fffc5 	stb	r17,-1(r16)
    429c:	1009883a 	mov	r4,r2
    42a0:	180b883a 	mov	r5,r3
    42a4:	9c3fea1e 	bne	r19,r16,4250 <_dtoa_r+0x14b0>
    42a8:	dc800b17 	ldw	r18,44(sp)
    42ac:	dc000c17 	ldw	r16,48(sp)
    42b0:	dac00d17 	ldw	r11,52(sp)
    42b4:	1029883a 	mov	r20,r2
    42b8:	1823883a 	mov	r17,r3
    42bc:	d9000717 	ldw	r4,28(sp)
    42c0:	d9400917 	ldw	r5,36(sp)
    42c4:	000d883a 	mov	r6,zero
    42c8:	01cff834 	movhi	r7,16352
    42cc:	dac00b15 	stw	r11,44(sp)
    42d0:	000b0b80 	call	b0b8 <__adddf3>
    42d4:	100d883a 	mov	r6,r2
    42d8:	180f883a 	mov	r7,r3
    42dc:	a009883a 	mov	r4,r20
    42e0:	880b883a 	mov	r5,r17
    42e4:	000c33c0 	call	c33c <__gedf2>
    42e8:	00805916 	blt	zero,r2,4450 <_dtoa_r+0x16b0>
    42ec:	d9800717 	ldw	r6,28(sp)
    42f0:	d9c00917 	ldw	r7,36(sp)
    42f4:	0009883a 	mov	r4,zero
    42f8:	014ff834 	movhi	r5,16352
    42fc:	000cd380 	call	cd38 <__subdf3>
    4300:	100d883a 	mov	r6,r2
    4304:	180f883a 	mov	r7,r3
    4308:	a009883a 	mov	r4,r20
    430c:	880b883a 	mov	r5,r17
    4310:	000c4380 	call	c438 <__ledf2>
    4314:	dac00b17 	ldw	r11,44(sp)
    4318:	10000616 	blt	r2,zero,4334 <_dtoa_r+0x1594>
    431c:	d8801417 	ldw	r2,80(sp)
    4320:	103d2516 	blt	r2,zero,37b8 <_dtoa_r+0xa18>
    4324:	d8800617 	ldw	r2,24(sp)
    4328:	108003c8 	cmpgei	r2,r2,15
    432c:	103d221e 	bne	r2,zero,37b8 <_dtoa_r+0xa18>
    4330:	003c9c06 	br	35a4 <_dtoa_r+0x804>
    4334:	98bfffc7 	ldb	r2,-1(r19)
    4338:	9811883a 	mov	r8,r19
    433c:	9cffffc4 	addi	r19,r19,-1
    4340:	10800c20 	cmpeqi	r2,r2,48
    4344:	103ffb1e 	bne	r2,zero,4334 <_dtoa_r+0x1594>
    4348:	d8801117 	ldw	r2,68(sp)
    434c:	15400044 	addi	r21,r2,1
    4350:	003d9c06 	br	39c4 <_dtoa_r+0xc24>
    4354:	dc400217 	ldw	r17,8(sp)
    4358:	a829883a 	mov	r20,r21
    435c:	04c00084 	movi	r19,2
    4360:	003b9e06 	br	31dc <_dtoa_r+0x43c>
    4364:	903c6626 	beq	r18,zero,3500 <_dtoa_r+0x760>
    4368:	d8800a17 	ldw	r2,40(sp)
    436c:	00bc860e 	bge	zero,r2,3588 <_dtoa_r+0x7e8>
    4370:	a00b883a 	mov	r5,r20
    4374:	8809883a 	mov	r4,r17
    4378:	000d883a 	mov	r6,zero
    437c:	01d00934 	movhi	r7,16420
    4380:	000c5300 	call	c530 <__muldf3>
    4384:	99000044 	addi	r4,r19,1
    4388:	1023883a 	mov	r17,r2
    438c:	1829883a 	mov	r20,r3
    4390:	000d7a80 	call	d7a8 <__floatsidf>
    4394:	880d883a 	mov	r6,r17
    4398:	a00f883a 	mov	r7,r20
    439c:	1009883a 	mov	r4,r2
    43a0:	180b883a 	mov	r5,r3
    43a4:	000c5300 	call	c530 <__muldf3>
    43a8:	1009883a 	mov	r4,r2
    43ac:	000d883a 	mov	r6,zero
    43b0:	01d00734 	movhi	r7,16412
    43b4:	180b883a 	mov	r5,r3
    43b8:	000b0b80 	call	b0b8 <__adddf3>
    43bc:	d9000617 	ldw	r4,24(sp)
    43c0:	d8800b15 	stw	r2,44(sp)
    43c4:	00bf3034 	movhi	r2,64704
    43c8:	18a7883a 	add	r19,r3,r2
    43cc:	d8800a17 	ldw	r2,40(sp)
    43d0:	213fffc4 	addi	r4,r4,-1
    43d4:	d9001115 	stw	r4,68(sp)
    43d8:	d8800c15 	stw	r2,48(sp)
    43dc:	003b9a06 	br	3248 <_dtoa_r+0x4a8>
    43e0:	00c00c44 	movi	r3,49
    43e4:	b5800044 	addi	r22,r22,1
    43e8:	003c1906 	br	3450 <_dtoa_r+0x6b0>
    43ec:	00800e44 	movi	r2,57
    43f0:	b0800005 	stb	r2,0(r22)
    43f4:	d8800617 	ldw	r2,24(sp)
    43f8:	dc400215 	stw	r17,8(sp)
    43fc:	b4800044 	addi	r18,r22,1
    4400:	15400044 	addi	r21,r2,1
    4404:	9823883a 	mov	r17,r19
    4408:	003d5306 	br	3958 <_dtoa_r+0xbb8>
    440c:	d8000315 	stw	zero,12(sp)
    4410:	0023883a 	mov	r17,zero
    4414:	003e5406 	br	3d68 <_dtoa_r+0xfc8>
    4418:	e029883a 	mov	r20,fp
    441c:	df000817 	ldw	fp,32(sp)
    4420:	003e2506 	br	3cb8 <_dtoa_r+0xf18>
    4424:	0005883a 	mov	r2,zero
    4428:	003e8906 	br	3e50 <_dtoa_r+0x10b0>
    442c:	102d883a 	mov	r22,r2
    4430:	003e6306 	br	3dc0 <_dtoa_r+0x1020>
    4434:	d8c00417 	ldw	r3,16(sp)
    4438:	1027883a 	mov	r19,r2
    443c:	1485883a 	add	r2,r2,r18
    4440:	1c87883a 	add	r3,r3,r18
    4444:	d8c00415 	stw	r3,16(sp)
    4448:	d8800515 	stw	r2,20(sp)
    444c:	003e9c06 	br	3ec0 <_dtoa_r+0x1120>
    4450:	d8801117 	ldw	r2,68(sp)
    4454:	15800044 	addi	r22,r2,1
    4458:	003bf406 	br	342c <_dtoa_r+0x68c>
    445c:	ddc00b17 	ldw	r23,44(sp)
    4460:	dc000c17 	ldw	r16,48(sp)
    4464:	b011883a 	mov	r8,r22
    4468:	003fb706 	br	4348 <_dtoa_r+0x15a8>
    446c:	dc800d17 	ldw	r18,52(sp)
    4470:	dd800e17 	ldw	r22,56(sp)
    4474:	ddc00b17 	ldw	r23,44(sp)
    4478:	dc000c17 	ldw	r16,48(sp)
    447c:	dd400f17 	ldw	r21,60(sp)
    4480:	003c4106 	br	3588 <_dtoa_r+0x7e8>
    4484:	d8800117 	ldw	r2,4(sp)
    4488:	108000c8 	cmpgei	r2,r2,3
    448c:	1000081e 	bne	r2,zero,44b0 <_dtoa_r+0x1710>
    4490:	d9400317 	ldw	r5,12(sp)
    4494:	b809883a 	mov	r4,r23
    4498:	0002b880 	call	2b88 <quorem>
    449c:	15000c04 	addi	r20,r2,48
    44a0:	dd400617 	ldw	r21,24(sp)
    44a4:	dc800a17 	ldw	r18,40(sp)
    44a8:	e5000005 	stb	r20,0(fp)
    44ac:	003d1b06 	br	391c <_dtoa_r+0xb7c>
    44b0:	dc800a17 	ldw	r18,40(sp)
    44b4:	dd400615 	stw	r21,24(sp)
    44b8:	003e2006 	br	3d3c <_dtoa_r+0xf9c>
    44bc:	4027883a 	mov	r19,r8
    44c0:	003f7e06 	br	42bc <_dtoa_r+0x151c>
    44c4:	d8800117 	ldw	r2,4(sp)
    44c8:	108000c8 	cmpgei	r2,r2,3
    44cc:	103ff81e 	bne	r2,zero,44b0 <_dtoa_r+0x1710>
    44d0:	dd400615 	stw	r21,24(sp)
    44d4:	dc800a17 	ldw	r18,40(sp)
    44d8:	04fd9f0e 	bge	zero,r19,3b58 <_dtoa_r+0xdb8>
    44dc:	003e6406 	br	3e70 <_dtoa_r+0x10d0>
    44e0:	1023883a 	mov	r17,r2
    44e4:	1829883a 	mov	r20,r3
    44e8:	04c00084 	movi	r19,2
    44ec:	003b3b06 	br	31dc <_dtoa_r+0x43c>
    44f0:	01c00074 	movhi	r7,1
    44f4:	01000074 	movhi	r4,1
    44f8:	39c18504 	addi	r7,r7,1556
    44fc:	000d883a 	mov	r6,zero
    4500:	0140ba84 	movi	r5,746
    4504:	21018a04 	addi	r4,r4,1576
    4508:	00093100 	call	9310 <__assert_func>
    450c:	01c00074 	movhi	r7,1
    4510:	01000074 	movhi	r4,1
    4514:	39c18504 	addi	r7,r7,1556
    4518:	000d883a 	mov	r6,zero
    451c:	01406a84 	movi	r5,426
    4520:	21018a04 	addi	r4,r4,1576
    4524:	00093100 	call	9310 <__assert_func>
    4528:	e7018104 	addi	fp,fp,1540
    452c:	003a4d06 	br	2e64 <_dtoa_r+0xc4>
    4530:	80001115 	stw	zero,68(r16)
    4534:	000b883a 	mov	r5,zero
    4538:	8009883a 	mov	r4,r16
    453c:	00064780 	call	6478 <_Balloc>
    4540:	1039883a 	mov	fp,r2
    4544:	103ff126 	beq	r2,zero,450c <_dtoa_r+0x176c>
    4548:	80801015 	stw	r2,64(r16)
    454c:	00bfffc4 	movi	r2,-1
    4550:	d8800a15 	stw	r2,40(sp)
    4554:	00800044 	movi	r2,1
    4558:	04bfffc4 	movi	r18,-1
    455c:	d8800715 	stw	r2,28(sp)
    4560:	d8001f15 	stw	zero,124(sp)
    4564:	003c0806 	br	3588 <_dtoa_r+0x7e8>
    4568:	80001115 	stw	zero,68(r16)
    456c:	000b883a 	mov	r5,zero
    4570:	003ad506 	br	30c8 <_dtoa_r+0x328>
    4574:	a005883a 	mov	r2,r20
    4578:	e029883a 	mov	r20,fp
    457c:	df000817 	ldw	fp,32(sp)
    4580:	00bdcd0e 	bge	zero,r2,3cb8 <_dtoa_r+0xf18>
    4584:	003dc006 	br	3c88 <_dtoa_r+0xee8>

00004588 <__sflush_r>:
    4588:	2880030b 	ldhu	r2,12(r5)
    458c:	defffb04 	addi	sp,sp,-20
    4590:	dcc00315 	stw	r19,12(sp)
    4594:	dc000015 	stw	r16,0(sp)
    4598:	dfc00415 	stw	ra,16(sp)
    459c:	dc800215 	stw	r18,8(sp)
    45a0:	dc400115 	stw	r17,4(sp)
    45a4:	10c0020c 	andi	r3,r2,8
    45a8:	2821883a 	mov	r16,r5
    45ac:	2027883a 	mov	r19,r4
    45b0:	18003c1e 	bne	r3,zero,46a4 <__sflush_r+0x11c>
    45b4:	29000117 	ldw	r4,4(r5)
    45b8:	10c20014 	ori	r3,r2,2048
    45bc:	28c0030d 	sth	r3,12(r5)
    45c0:	0100580e 	bge	zero,r4,4724 <__sflush_r+0x19c>
    45c4:	82000a17 	ldw	r8,40(r16)
    45c8:	40003426 	beq	r8,zero,469c <__sflush_r+0x114>
    45cc:	9c400017 	ldw	r17,0(r19)
    45d0:	1084000c 	andi	r2,r2,4096
    45d4:	98000015 	stw	zero,0(r19)
    45d8:	81400717 	ldw	r5,28(r16)
    45dc:	1000561e 	bne	r2,zero,4738 <__sflush_r+0x1b0>
    45e0:	000d883a 	mov	r6,zero
    45e4:	01c00044 	movi	r7,1
    45e8:	9809883a 	mov	r4,r19
    45ec:	403ee83a 	callr	r8
    45f0:	100d883a 	mov	r6,r2
    45f4:	10bfffd8 	cmpnei	r2,r2,-1
    45f8:	10005b26 	beq	r2,zero,4768 <__sflush_r+0x1e0>
    45fc:	80c0030b 	ldhu	r3,12(r16)
    4600:	82000a17 	ldw	r8,40(r16)
    4604:	18c0010c 	andi	r3,r3,4
    4608:	18000626 	beq	r3,zero,4624 <__sflush_r+0x9c>
    460c:	80c00117 	ldw	r3,4(r16)
    4610:	80800c17 	ldw	r2,48(r16)
    4614:	30cdc83a 	sub	r6,r6,r3
    4618:	10000226 	beq	r2,zero,4624 <__sflush_r+0x9c>
    461c:	80800f17 	ldw	r2,60(r16)
    4620:	308dc83a 	sub	r6,r6,r2
    4624:	81400717 	ldw	r5,28(r16)
    4628:	000f883a 	mov	r7,zero
    462c:	9809883a 	mov	r4,r19
    4630:	403ee83a 	callr	r8
    4634:	10ffffd8 	cmpnei	r3,r2,-1
    4638:	1800411e 	bne	r3,zero,4740 <__sflush_r+0x1b8>
    463c:	99400017 	ldw	r5,0(r19)
    4640:	28c007b0 	cmpltui	r3,r5,30
    4644:	18002c26 	beq	r3,zero,46f8 <__sflush_r+0x170>
    4648:	00f7f034 	movhi	r3,57280
    464c:	18ffff84 	addi	r3,r3,-2
    4650:	1949d83a 	sra	r4,r3,r5
    4654:	80c0030b 	ldhu	r3,12(r16)
    4658:	2100004c 	andi	r4,r4,1
    465c:	2000271e 	bne	r4,zero,46fc <__sflush_r+0x174>
    4660:	81000417 	ldw	r4,16(r16)
    4664:	19bdffcc 	andi	r6,r3,63487
    4668:	8180030d 	sth	r6,12(r16)
    466c:	80000115 	stw	zero,4(r16)
    4670:	81000015 	stw	r4,0(r16)
    4674:	18c4000c 	andi	r3,r3,4096
    4678:	1800431e 	bne	r3,zero,4788 <__sflush_r+0x200>
    467c:	81400c17 	ldw	r5,48(r16)
    4680:	9c400015 	stw	r17,0(r19)
    4684:	28000526 	beq	r5,zero,469c <__sflush_r+0x114>
    4688:	80801004 	addi	r2,r16,64
    468c:	28800226 	beq	r5,r2,4698 <__sflush_r+0x110>
    4690:	9809883a 	mov	r4,r19
    4694:	0004d240 	call	4d24 <_free_r>
    4698:	80000c15 	stw	zero,48(r16)
    469c:	0005883a 	mov	r2,zero
    46a0:	00001906 	br	4708 <__sflush_r+0x180>
    46a4:	2c800417 	ldw	r18,16(r5)
    46a8:	903ffc26 	beq	r18,zero,469c <__sflush_r+0x114>
    46ac:	2c400017 	ldw	r17,0(r5)
    46b0:	108000cc 	andi	r2,r2,3
    46b4:	2c800015 	stw	r18,0(r5)
    46b8:	8ca3c83a 	sub	r17,r17,r18
    46bc:	10001c1e 	bne	r2,zero,4730 <__sflush_r+0x1a8>
    46c0:	28800517 	ldw	r2,20(r5)
    46c4:	80800215 	stw	r2,8(r16)
    46c8:	04400316 	blt	zero,r17,46d8 <__sflush_r+0x150>
    46cc:	003ff306 	br	469c <__sflush_r+0x114>
    46d0:	90a5883a 	add	r18,r18,r2
    46d4:	047ff10e 	bge	zero,r17,469c <__sflush_r+0x114>
    46d8:	80800917 	ldw	r2,36(r16)
    46dc:	81400717 	ldw	r5,28(r16)
    46e0:	880f883a 	mov	r7,r17
    46e4:	900d883a 	mov	r6,r18
    46e8:	9809883a 	mov	r4,r19
    46ec:	103ee83a 	callr	r2
    46f0:	88a3c83a 	sub	r17,r17,r2
    46f4:	00bff616 	blt	zero,r2,46d0 <__sflush_r+0x148>
    46f8:	80c0030b 	ldhu	r3,12(r16)
    46fc:	18c01014 	ori	r3,r3,64
    4700:	80c0030d 	sth	r3,12(r16)
    4704:	00bfffc4 	movi	r2,-1
    4708:	dfc00417 	ldw	ra,16(sp)
    470c:	dcc00317 	ldw	r19,12(sp)
    4710:	dc800217 	ldw	r18,8(sp)
    4714:	dc400117 	ldw	r17,4(sp)
    4718:	dc000017 	ldw	r16,0(sp)
    471c:	dec00504 	addi	sp,sp,20
    4720:	f800283a 	ret
    4724:	29000f17 	ldw	r4,60(r5)
    4728:	013fa616 	blt	zero,r4,45c4 <__sflush_r+0x3c>
    472c:	003fdb06 	br	469c <__sflush_r+0x114>
    4730:	0005883a 	mov	r2,zero
    4734:	003fe306 	br	46c4 <__sflush_r+0x13c>
    4738:	81801417 	ldw	r6,80(r16)
    473c:	003fb106 	br	4604 <__sflush_r+0x7c>
    4740:	80c0030b 	ldhu	r3,12(r16)
    4744:	81000417 	ldw	r4,16(r16)
    4748:	80000115 	stw	zero,4(r16)
    474c:	197dffcc 	andi	r5,r3,63487
    4750:	8140030d 	sth	r5,12(r16)
    4754:	81000015 	stw	r4,0(r16)
    4758:	18c4000c 	andi	r3,r3,4096
    475c:	183fc726 	beq	r3,zero,467c <__sflush_r+0xf4>
    4760:	80801415 	stw	r2,80(r16)
    4764:	003fc506 	br	467c <__sflush_r+0xf4>
    4768:	98800017 	ldw	r2,0(r19)
    476c:	103fa326 	beq	r2,zero,45fc <__sflush_r+0x74>
    4770:	10c00760 	cmpeqi	r3,r2,29
    4774:	1800021e 	bne	r3,zero,4780 <__sflush_r+0x1f8>
    4778:	10800598 	cmpnei	r2,r2,22
    477c:	103fde1e 	bne	r2,zero,46f8 <__sflush_r+0x170>
    4780:	9c400015 	stw	r17,0(r19)
    4784:	003fc506 	br	469c <__sflush_r+0x114>
    4788:	283fbc1e 	bne	r5,zero,467c <__sflush_r+0xf4>
    478c:	003ff406 	br	4760 <__sflush_r+0x1d8>

00004790 <_fflush_r>:
    4790:	defffd04 	addi	sp,sp,-12
    4794:	dc000115 	stw	r16,4(sp)
    4798:	dfc00215 	stw	ra,8(sp)
    479c:	2021883a 	mov	r16,r4
    47a0:	20000226 	beq	r4,zero,47ac <_fflush_r+0x1c>
    47a4:	20800e17 	ldw	r2,56(r4)
    47a8:	10000726 	beq	r2,zero,47c8 <_fflush_r+0x38>
    47ac:	2880030f 	ldh	r2,12(r5)
    47b0:	10000a1e 	bne	r2,zero,47dc <_fflush_r+0x4c>
    47b4:	0005883a 	mov	r2,zero
    47b8:	dfc00217 	ldw	ra,8(sp)
    47bc:	dc000117 	ldw	r16,4(sp)
    47c0:	dec00304 	addi	sp,sp,12
    47c4:	f800283a 	ret
    47c8:	d9400015 	stw	r5,0(sp)
    47cc:	0004bb80 	call	4bb8 <__sinit>
    47d0:	d9400017 	ldw	r5,0(sp)
    47d4:	2880030f 	ldh	r2,12(r5)
    47d8:	103ff626 	beq	r2,zero,47b4 <_fflush_r+0x24>
    47dc:	8009883a 	mov	r4,r16
    47e0:	dfc00217 	ldw	ra,8(sp)
    47e4:	dc000117 	ldw	r16,4(sp)
    47e8:	dec00304 	addi	sp,sp,12
    47ec:	00045881 	jmpi	4588 <__sflush_r>

000047f0 <fflush>:
    47f0:	20001726 	beq	r4,zero,4850 <fflush+0x60>
    47f4:	00800074 	movhi	r2,1
    47f8:	200b883a 	mov	r5,r4
    47fc:	1109e617 	ldw	r4,10136(r2)
    4800:	20000226 	beq	r4,zero,480c <fflush+0x1c>
    4804:	20800e17 	ldw	r2,56(r4)
    4808:	10000526 	beq	r2,zero,4820 <fflush+0x30>
    480c:	2880030f 	ldh	r2,12(r5)
    4810:	1000021e 	bne	r2,zero,481c <fflush+0x2c>
    4814:	0005883a 	mov	r2,zero
    4818:	f800283a 	ret
    481c:	00045881 	jmpi	4588 <__sflush_r>
    4820:	defffd04 	addi	sp,sp,-12
    4824:	d9400115 	stw	r5,4(sp)
    4828:	d9000015 	stw	r4,0(sp)
    482c:	dfc00215 	stw	ra,8(sp)
    4830:	0004bb80 	call	4bb8 <__sinit>
    4834:	d9400117 	ldw	r5,4(sp)
    4838:	d9000017 	ldw	r4,0(sp)
    483c:	2880030f 	ldh	r2,12(r5)
    4840:	10000826 	beq	r2,zero,4864 <fflush+0x74>
    4844:	dfc00217 	ldw	ra,8(sp)
    4848:	dec00304 	addi	sp,sp,12
    484c:	00045881 	jmpi	4588 <__sflush_r>
    4850:	00800074 	movhi	r2,1
    4854:	1109e517 	ldw	r4,10132(r2)
    4858:	01400034 	movhi	r5,0
    485c:	2951e404 	addi	r5,r5,18320
    4860:	000556c1 	jmpi	556c <_fwalk_reent>
    4864:	0005883a 	mov	r2,zero
    4868:	dfc00217 	ldw	ra,8(sp)
    486c:	dec00304 	addi	sp,sp,12
    4870:	f800283a 	ret

00004874 <__fp_lock>:
    4874:	0005883a 	mov	r2,zero
    4878:	f800283a 	ret

0000487c <_cleanup_r>:
    487c:	01400074 	movhi	r5,1
    4880:	29653f04 	addi	r5,r5,-27396
    4884:	000556c1 	jmpi	556c <_fwalk_reent>

00004888 <__fp_unlock>:
    4888:	0005883a 	mov	r2,zero
    488c:	f800283a 	ret

00004890 <__sinit.part.0>:
    4890:	00c00034 	movhi	r3,0
    4894:	20800117 	ldw	r2,4(r4)
    4898:	18d21f04 	addi	r3,r3,18556
    489c:	20c00f15 	stw	r3,60(r4)
    48a0:	2140bb04 	addi	r5,r4,748
    48a4:	00c000c4 	movi	r3,3
    48a8:	20c0b915 	stw	r3,740(r4)
    48ac:	2140ba15 	stw	r5,744(r4)
    48b0:	2000b815 	stw	zero,736(r4)
    48b4:	10001705 	stb	zero,92(r2)
    48b8:	10001745 	stb	zero,93(r2)
    48bc:	10001785 	stb	zero,94(r2)
    48c0:	100017c5 	stb	zero,95(r2)
    48c4:	10001805 	stb	zero,96(r2)
    48c8:	10001845 	stb	zero,97(r2)
    48cc:	10001885 	stb	zero,98(r2)
    48d0:	100018c5 	stb	zero,99(r2)
    48d4:	00c00104 	movi	r3,4
    48d8:	10c00315 	stw	r3,12(r2)
    48dc:	02000034 	movhi	r8,0
    48e0:	20c00217 	ldw	r3,8(r4)
    48e4:	01c00034 	movhi	r7,0
    48e8:	01800034 	movhi	r6,0
    48ec:	01400034 	movhi	r5,0
    48f0:	421f2a04 	addi	r8,r8,31912
    48f4:	39df4104 	addi	r7,r7,32004
    48f8:	319f6104 	addi	r6,r6,32132
    48fc:	295f7804 	addi	r5,r5,32224
    4900:	02400074 	movhi	r9,1
    4904:	10000015 	stw	zero,0(r2)
    4908:	10000115 	stw	zero,4(r2)
    490c:	10000215 	stw	zero,8(r2)
    4910:	10001915 	stw	zero,100(r2)
    4914:	10000415 	stw	zero,16(r2)
    4918:	10000515 	stw	zero,20(r2)
    491c:	10000615 	stw	zero,24(r2)
    4920:	10800715 	stw	r2,28(r2)
    4924:	12000815 	stw	r8,32(r2)
    4928:	11c00915 	stw	r7,36(r2)
    492c:	11800a15 	stw	r6,40(r2)
    4930:	11400b15 	stw	r5,44(r2)
    4934:	4a400284 	addi	r9,r9,10
    4938:	1a400315 	stw	r9,12(r3)
    493c:	18000015 	stw	zero,0(r3)
    4940:	18000115 	stw	zero,4(r3)
    4944:	18000215 	stw	zero,8(r3)
    4948:	18001915 	stw	zero,100(r3)
    494c:	18000415 	stw	zero,16(r3)
    4950:	18001705 	stb	zero,92(r3)
    4954:	18001745 	stb	zero,93(r3)
    4958:	18001785 	stb	zero,94(r3)
    495c:	180017c5 	stb	zero,95(r3)
    4960:	18001805 	stb	zero,96(r3)
    4964:	18001845 	stb	zero,97(r3)
    4968:	18001885 	stb	zero,98(r3)
    496c:	180018c5 	stb	zero,99(r3)
    4970:	20800317 	ldw	r2,12(r4)
    4974:	024000b4 	movhi	r9,2
    4978:	18000515 	stw	zero,20(r3)
    497c:	18000615 	stw	zero,24(r3)
    4980:	18c00715 	stw	r3,28(r3)
    4984:	1a000815 	stw	r8,32(r3)
    4988:	19c00915 	stw	r7,36(r3)
    498c:	19800a15 	stw	r6,40(r3)
    4990:	19400b15 	stw	r5,44(r3)
    4994:	4a400484 	addi	r9,r9,18
    4998:	10000015 	stw	zero,0(r2)
    499c:	10000115 	stw	zero,4(r2)
    49a0:	10000215 	stw	zero,8(r2)
    49a4:	10001915 	stw	zero,100(r2)
    49a8:	12400315 	stw	r9,12(r2)
    49ac:	10000415 	stw	zero,16(r2)
    49b0:	10000515 	stw	zero,20(r2)
    49b4:	10000615 	stw	zero,24(r2)
    49b8:	10001705 	stb	zero,92(r2)
    49bc:	10001745 	stb	zero,93(r2)
    49c0:	10001785 	stb	zero,94(r2)
    49c4:	100017c5 	stb	zero,95(r2)
    49c8:	10001805 	stb	zero,96(r2)
    49cc:	10001845 	stb	zero,97(r2)
    49d0:	10001885 	stb	zero,98(r2)
    49d4:	100018c5 	stb	zero,99(r2)
    49d8:	10800715 	stw	r2,28(r2)
    49dc:	12000815 	stw	r8,32(r2)
    49e0:	11c00915 	stw	r7,36(r2)
    49e4:	11800a15 	stw	r6,40(r2)
    49e8:	11400b15 	stw	r5,44(r2)
    49ec:	00800044 	movi	r2,1
    49f0:	20800e15 	stw	r2,56(r4)
    49f4:	f800283a 	ret

000049f8 <__sfmoreglue>:
    49f8:	defffc04 	addi	sp,sp,-16
    49fc:	dc800215 	stw	r18,8(sp)
    4a00:	2825883a 	mov	r18,r5
    4a04:	dc000015 	stw	r16,0(sp)
    4a08:	01401a04 	movi	r5,104
    4a0c:	2021883a 	mov	r16,r4
    4a10:	913fffc4 	addi	r4,r18,-1
    4a14:	dfc00315 	stw	ra,12(sp)
    4a18:	dc400115 	stw	r17,4(sp)
    4a1c:	000b0900 	call	b090 <__mulsi3>
    4a20:	8009883a 	mov	r4,r16
    4a24:	11401d04 	addi	r5,r2,116
    4a28:	1023883a 	mov	r17,r2
    4a2c:	00058600 	call	5860 <_malloc_r>
    4a30:	1021883a 	mov	r16,r2
    4a34:	10000726 	beq	r2,zero,4a54 <__sfmoreglue+0x5c>
    4a38:	11000304 	addi	r4,r2,12
    4a3c:	10000015 	stw	zero,0(r2)
    4a40:	14800115 	stw	r18,4(r2)
    4a44:	11000215 	stw	r4,8(r2)
    4a48:	89801a04 	addi	r6,r17,104
    4a4c:	000b883a 	mov	r5,zero
    4a50:	00063380 	call	6338 <memset>
    4a54:	8005883a 	mov	r2,r16
    4a58:	dfc00317 	ldw	ra,12(sp)
    4a5c:	dc800217 	ldw	r18,8(sp)
    4a60:	dc400117 	ldw	r17,4(sp)
    4a64:	dc000017 	ldw	r16,0(sp)
    4a68:	dec00404 	addi	sp,sp,16
    4a6c:	f800283a 	ret

00004a70 <__sfp>:
    4a70:	defffc04 	addi	sp,sp,-16
    4a74:	00800074 	movhi	r2,1
    4a78:	dc400115 	stw	r17,4(sp)
    4a7c:	1449e517 	ldw	r17,10132(r2)
    4a80:	dc800215 	stw	r18,8(sp)
    4a84:	dfc00315 	stw	ra,12(sp)
    4a88:	88800e17 	ldw	r2,56(r17)
    4a8c:	dc000015 	stw	r16,0(sp)
    4a90:	2025883a 	mov	r18,r4
    4a94:	10002d26 	beq	r2,zero,4b4c <__sfp+0xdc>
    4a98:	8c40b804 	addi	r17,r17,736
    4a9c:	88800117 	ldw	r2,4(r17)
    4aa0:	8c000217 	ldw	r16,8(r17)
    4aa4:	10bfffc4 	addi	r2,r2,-1
    4aa8:	1000030e 	bge	r2,zero,4ab8 <__sfp+0x48>
    4aac:	00002306 	br	4b3c <__sfp+0xcc>
    4ab0:	84001a04 	addi	r16,r16,104
    4ab4:	28002126 	beq	r5,zero,4b3c <__sfp+0xcc>
    4ab8:	80c0030f 	ldh	r3,12(r16)
    4abc:	10bfffc4 	addi	r2,r2,-1
    4ac0:	117fffd8 	cmpnei	r5,r2,-1
    4ac4:	183ffa1e 	bne	r3,zero,4ab0 <__sfp+0x40>
    4ac8:	00bffff4 	movhi	r2,65535
    4acc:	10800044 	addi	r2,r2,1
    4ad0:	80800315 	stw	r2,12(r16)
    4ad4:	80001915 	stw	zero,100(r16)
    4ad8:	80000015 	stw	zero,0(r16)
    4adc:	80000215 	stw	zero,8(r16)
    4ae0:	80000115 	stw	zero,4(r16)
    4ae4:	80000415 	stw	zero,16(r16)
    4ae8:	80000515 	stw	zero,20(r16)
    4aec:	80000615 	stw	zero,24(r16)
    4af0:	80001705 	stb	zero,92(r16)
    4af4:	80001745 	stb	zero,93(r16)
    4af8:	80001785 	stb	zero,94(r16)
    4afc:	800017c5 	stb	zero,95(r16)
    4b00:	80001805 	stb	zero,96(r16)
    4b04:	80001845 	stb	zero,97(r16)
    4b08:	80001885 	stb	zero,98(r16)
    4b0c:	800018c5 	stb	zero,99(r16)
    4b10:	80000c15 	stw	zero,48(r16)
    4b14:	80000d15 	stw	zero,52(r16)
    4b18:	80001115 	stw	zero,68(r16)
    4b1c:	80001215 	stw	zero,72(r16)
    4b20:	8005883a 	mov	r2,r16
    4b24:	dfc00317 	ldw	ra,12(sp)
    4b28:	dc800217 	ldw	r18,8(sp)
    4b2c:	dc400117 	ldw	r17,4(sp)
    4b30:	dc000017 	ldw	r16,0(sp)
    4b34:	dec00404 	addi	sp,sp,16
    4b38:	f800283a 	ret
    4b3c:	8c000017 	ldw	r16,0(r17)
    4b40:	80000526 	beq	r16,zero,4b58 <__sfp+0xe8>
    4b44:	8023883a 	mov	r17,r16
    4b48:	003fd406 	br	4a9c <__sfp+0x2c>
    4b4c:	8809883a 	mov	r4,r17
    4b50:	00048900 	call	4890 <__sinit.part.0>
    4b54:	003fd006 	br	4a98 <__sfp+0x28>
    4b58:	01406b04 	movi	r5,428
    4b5c:	9009883a 	mov	r4,r18
    4b60:	00058600 	call	5860 <_malloc_r>
    4b64:	1021883a 	mov	r16,r2
    4b68:	10000a26 	beq	r2,zero,4b94 <__sfp+0x124>
    4b6c:	10000015 	stw	zero,0(r2)
    4b70:	11000304 	addi	r4,r2,12
    4b74:	00800104 	movi	r2,4
    4b78:	80800115 	stw	r2,4(r16)
    4b7c:	81000215 	stw	r4,8(r16)
    4b80:	01806804 	movi	r6,416
    4b84:	000b883a 	mov	r5,zero
    4b88:	00063380 	call	6338 <memset>
    4b8c:	8c000015 	stw	r16,0(r17)
    4b90:	003fec06 	br	4b44 <__sfp+0xd4>
    4b94:	88000015 	stw	zero,0(r17)
    4b98:	00800304 	movi	r2,12
    4b9c:	90800015 	stw	r2,0(r18)
    4ba0:	003fdf06 	br	4b20 <__sfp+0xb0>

00004ba4 <_cleanup>:
    4ba4:	00800074 	movhi	r2,1
    4ba8:	1109e517 	ldw	r4,10132(r2)
    4bac:	01400074 	movhi	r5,1
    4bb0:	29653f04 	addi	r5,r5,-27396
    4bb4:	000556c1 	jmpi	556c <_fwalk_reent>

00004bb8 <__sinit>:
    4bb8:	20800e17 	ldw	r2,56(r4)
    4bbc:	10000126 	beq	r2,zero,4bc4 <__sinit+0xc>
    4bc0:	f800283a 	ret
    4bc4:	00048901 	jmpi	4890 <__sinit.part.0>

00004bc8 <__sfp_lock_acquire>:
    4bc8:	f800283a 	ret

00004bcc <__sfp_lock_release>:
    4bcc:	f800283a 	ret

00004bd0 <__sinit_lock_acquire>:
    4bd0:	f800283a 	ret

00004bd4 <__sinit_lock_release>:
    4bd4:	f800283a 	ret

00004bd8 <__fp_lock_all>:
    4bd8:	00800074 	movhi	r2,1
    4bdc:	1109e617 	ldw	r4,10136(r2)
    4be0:	01400034 	movhi	r5,0
    4be4:	29521d04 	addi	r5,r5,18548
    4be8:	00054d41 	jmpi	54d4 <_fwalk>

00004bec <__fp_unlock_all>:
    4bec:	00800074 	movhi	r2,1
    4bf0:	1109e617 	ldw	r4,10136(r2)
    4bf4:	01400034 	movhi	r5,0
    4bf8:	29522204 	addi	r5,r5,18568
    4bfc:	00054d41 	jmpi	54d4 <_fwalk>

00004c00 <_malloc_trim_r>:
    4c00:	defffa04 	addi	sp,sp,-24
    4c04:	dcc00315 	stw	r19,12(sp)
    4c08:	04c00074 	movhi	r19,1
    4c0c:	dd000415 	stw	r20,16(sp)
    4c10:	dc800215 	stw	r18,8(sp)
    4c14:	dc400115 	stw	r17,4(sp)
    4c18:	dc000015 	stw	r16,0(sp)
    4c1c:	2829883a 	mov	r20,r5
    4c20:	dfc00515 	stw	ra,20(sp)
    4c24:	9cc40604 	addi	r19,r19,4120
    4c28:	2025883a 	mov	r18,r4
    4c2c:	000e0740 	call	e074 <__malloc_lock>
    4c30:	98800217 	ldw	r2,8(r19)
    4c34:	14400117 	ldw	r17,4(r2)
    4c38:	00bfff04 	movi	r2,-4
    4c3c:	88a2703a 	and	r17,r17,r2
    4c40:	8c03fbc4 	addi	r16,r17,4079
    4c44:	8521c83a 	sub	r16,r16,r20
    4c48:	8020d33a 	srli	r16,r16,12
    4c4c:	843fffc4 	addi	r16,r16,-1
    4c50:	8020933a 	slli	r16,r16,12
    4c54:	80840008 	cmpgei	r2,r16,4096
    4c58:	10000626 	beq	r2,zero,4c74 <_malloc_trim_r+0x74>
    4c5c:	000b883a 	mov	r5,zero
    4c60:	9009883a 	mov	r4,r18
    4c64:	0007c500 	call	7c50 <_sbrk_r>
    4c68:	98c00217 	ldw	r3,8(r19)
    4c6c:	1c47883a 	add	r3,r3,r17
    4c70:	10c00b26 	beq	r2,r3,4ca0 <_malloc_trim_r+0xa0>
    4c74:	9009883a 	mov	r4,r18
    4c78:	000e0980 	call	e098 <__malloc_unlock>
    4c7c:	0005883a 	mov	r2,zero
    4c80:	dfc00517 	ldw	ra,20(sp)
    4c84:	dd000417 	ldw	r20,16(sp)
    4c88:	dcc00317 	ldw	r19,12(sp)
    4c8c:	dc800217 	ldw	r18,8(sp)
    4c90:	dc400117 	ldw	r17,4(sp)
    4c94:	dc000017 	ldw	r16,0(sp)
    4c98:	dec00604 	addi	sp,sp,24
    4c9c:	f800283a 	ret
    4ca0:	040bc83a 	sub	r5,zero,r16
    4ca4:	9009883a 	mov	r4,r18
    4ca8:	0007c500 	call	7c50 <_sbrk_r>
    4cac:	10bfffd8 	cmpnei	r2,r2,-1
    4cb0:	10000d26 	beq	r2,zero,4ce8 <_malloc_trim_r+0xe8>
    4cb4:	00800074 	movhi	r2,1
    4cb8:	1090f617 	ldw	r2,17368(r2)
    4cbc:	98c00217 	ldw	r3,8(r19)
    4cc0:	8c23c83a 	sub	r17,r17,r16
    4cc4:	8c400054 	ori	r17,r17,1
    4cc8:	1405c83a 	sub	r2,r2,r16
    4ccc:	1c400115 	stw	r17,4(r3)
    4cd0:	9009883a 	mov	r4,r18
    4cd4:	00c00074 	movhi	r3,1
    4cd8:	1890f615 	stw	r2,17368(r3)
    4cdc:	000e0980 	call	e098 <__malloc_unlock>
    4ce0:	00800044 	movi	r2,1
    4ce4:	003fe606 	br	4c80 <_malloc_trim_r+0x80>
    4ce8:	000b883a 	mov	r5,zero
    4cec:	9009883a 	mov	r4,r18
    4cf0:	0007c500 	call	7c50 <_sbrk_r>
    4cf4:	99000217 	ldw	r4,8(r19)
    4cf8:	1107c83a 	sub	r3,r2,r4
    4cfc:	19400410 	cmplti	r5,r3,16
    4d00:	283fdc1e 	bne	r5,zero,4c74 <_malloc_trim_r+0x74>
    4d04:	01400074 	movhi	r5,1
    4d08:	2949e717 	ldw	r5,10140(r5)
    4d0c:	18c00054 	ori	r3,r3,1
    4d10:	20c00115 	stw	r3,4(r4)
    4d14:	1145c83a 	sub	r2,r2,r5
    4d18:	01400074 	movhi	r5,1
    4d1c:	2890f615 	stw	r2,17368(r5)
    4d20:	003fd406 	br	4c74 <_malloc_trim_r+0x74>

00004d24 <_free_r>:
    4d24:	28005f26 	beq	r5,zero,4ea4 <_free_r+0x180>
    4d28:	defffd04 	addi	sp,sp,-12
    4d2c:	dc400115 	stw	r17,4(sp)
    4d30:	dc000015 	stw	r16,0(sp)
    4d34:	2023883a 	mov	r17,r4
    4d38:	2821883a 	mov	r16,r5
    4d3c:	dfc00215 	stw	ra,8(sp)
    4d40:	000e0740 	call	e074 <__malloc_lock>
    4d44:	81ffff17 	ldw	r7,-4(r16)
    4d48:	00bfff84 	movi	r2,-2
    4d4c:	80fffe04 	addi	r3,r16,-8
    4d50:	3884703a 	and	r2,r7,r2
    4d54:	01800074 	movhi	r6,1
    4d58:	1889883a 	add	r4,r3,r2
    4d5c:	31840604 	addi	r6,r6,4120
    4d60:	21400117 	ldw	r5,4(r4)
    4d64:	32000217 	ldw	r8,8(r6)
    4d68:	027fff04 	movi	r9,-4
    4d6c:	2a4a703a 	and	r5,r5,r9
    4d70:	41006526 	beq	r8,r4,4f08 <_free_r+0x1e4>
    4d74:	21400115 	stw	r5,4(r4)
    4d78:	39c0004c 	andi	r7,r7,1
    4d7c:	2151883a 	add	r8,r4,r5
    4d80:	3800281e 	bne	r7,zero,4e24 <_free_r+0x100>
    4d84:	82bffe17 	ldw	r10,-8(r16)
    4d88:	42000117 	ldw	r8,4(r8)
    4d8c:	01c00074 	movhi	r7,1
    4d90:	1a87c83a 	sub	r3,r3,r10
    4d94:	1a400217 	ldw	r9,8(r3)
    4d98:	39c40804 	addi	r7,r7,4128
    4d9c:	1285883a 	add	r2,r2,r10
    4da0:	4200004c 	andi	r8,r8,1
    4da4:	49c04d26 	beq	r9,r7,4edc <_free_r+0x1b8>
    4da8:	1a800317 	ldw	r10,12(r3)
    4dac:	4a800315 	stw	r10,12(r9)
    4db0:	52400215 	stw	r9,8(r10)
    4db4:	40006926 	beq	r8,zero,4f5c <_free_r+0x238>
    4db8:	11400054 	ori	r5,r2,1
    4dbc:	19400115 	stw	r5,4(r3)
    4dc0:	20800015 	stw	r2,0(r4)
    4dc4:	11008028 	cmpgeui	r4,r2,512
    4dc8:	20001e1e 	bne	r4,zero,4e44 <_free_r+0x120>
    4dcc:	1008d0fa 	srli	r4,r2,3
    4dd0:	100ad17a 	srli	r5,r2,5
    4dd4:	31c00117 	ldw	r7,4(r6)
    4dd8:	20800044 	addi	r2,r4,1
    4ddc:	100490fa 	slli	r2,r2,3
    4de0:	01000044 	movi	r4,1
    4de4:	2148983a 	sll	r4,r4,r5
    4de8:	3085883a 	add	r2,r6,r2
    4dec:	11400017 	ldw	r5,0(r2)
    4df0:	21c8b03a 	or	r4,r4,r7
    4df4:	11fffe04 	addi	r7,r2,-8
    4df8:	19c00315 	stw	r7,12(r3)
    4dfc:	19400215 	stw	r5,8(r3)
    4e00:	31000115 	stw	r4,4(r6)
    4e04:	10c00015 	stw	r3,0(r2)
    4e08:	28c00315 	stw	r3,12(r5)
    4e0c:	8809883a 	mov	r4,r17
    4e10:	dfc00217 	ldw	ra,8(sp)
    4e14:	dc400117 	ldw	r17,4(sp)
    4e18:	dc000017 	ldw	r16,0(sp)
    4e1c:	dec00304 	addi	sp,sp,12
    4e20:	000e0981 	jmpi	e098 <__malloc_unlock>
    4e24:	41c00117 	ldw	r7,4(r8)
    4e28:	39c0004c 	andi	r7,r7,1
    4e2c:	38001e26 	beq	r7,zero,4ea8 <_free_r+0x184>
    4e30:	11400054 	ori	r5,r2,1
    4e34:	817fff15 	stw	r5,-4(r16)
    4e38:	20800015 	stw	r2,0(r4)
    4e3c:	11008028 	cmpgeui	r4,r2,512
    4e40:	203fe226 	beq	r4,zero,4dcc <_free_r+0xa8>
    4e44:	1008d27a 	srli	r4,r2,9
    4e48:	21400168 	cmpgeui	r5,r4,5
    4e4c:	2800451e 	bne	r5,zero,4f64 <_free_r+0x240>
    4e50:	1008d1ba 	srli	r4,r2,6
    4e54:	21c00e44 	addi	r7,r4,57
    4e58:	380e90fa 	slli	r7,r7,3
    4e5c:	21000e04 	addi	r4,r4,56
    4e60:	31cf883a 	add	r7,r6,r7
    4e64:	39400017 	ldw	r5,0(r7)
    4e68:	39fffe04 	addi	r7,r7,-8
    4e6c:	39405326 	beq	r7,r5,4fbc <_free_r+0x298>
    4e70:	01bfff04 	movi	r6,-4
    4e74:	00000206 	br	4e80 <_free_r+0x15c>
    4e78:	29400217 	ldw	r5,8(r5)
    4e7c:	39400326 	beq	r7,r5,4e8c <_free_r+0x168>
    4e80:	29000117 	ldw	r4,4(r5)
    4e84:	2188703a 	and	r4,r4,r6
    4e88:	113ffb36 	bltu	r2,r4,4e78 <_free_r+0x154>
    4e8c:	29c00317 	ldw	r7,12(r5)
    4e90:	19c00315 	stw	r7,12(r3)
    4e94:	19400215 	stw	r5,8(r3)
    4e98:	38c00215 	stw	r3,8(r7)
    4e9c:	28c00315 	stw	r3,12(r5)
    4ea0:	003fda06 	br	4e0c <_free_r+0xe8>
    4ea4:	f800283a 	ret
    4ea8:	01c00074 	movhi	r7,1
    4eac:	1145883a 	add	r2,r2,r5
    4eb0:	39c40804 	addi	r7,r7,4128
    4eb4:	21400217 	ldw	r5,8(r4)
    4eb8:	29c03726 	beq	r5,r7,4f98 <_free_r+0x274>
    4ebc:	22000317 	ldw	r8,12(r4)
    4ec0:	11c00054 	ori	r7,r2,1
    4ec4:	1889883a 	add	r4,r3,r2
    4ec8:	2a000315 	stw	r8,12(r5)
    4ecc:	41400215 	stw	r5,8(r8)
    4ed0:	19c00115 	stw	r7,4(r3)
    4ed4:	20800015 	stw	r2,0(r4)
    4ed8:	003fba06 	br	4dc4 <_free_r+0xa0>
    4edc:	40004f1e 	bne	r8,zero,501c <_free_r+0x2f8>
    4ee0:	21800217 	ldw	r6,8(r4)
    4ee4:	21000317 	ldw	r4,12(r4)
    4ee8:	288b883a 	add	r5,r5,r2
    4eec:	28800054 	ori	r2,r5,1
    4ef0:	31000315 	stw	r4,12(r6)
    4ef4:	21800215 	stw	r6,8(r4)
    4ef8:	18800115 	stw	r2,4(r3)
    4efc:	1947883a 	add	r3,r3,r5
    4f00:	19400015 	stw	r5,0(r3)
    4f04:	003fc106 	br	4e0c <_free_r+0xe8>
    4f08:	39c0004c 	andi	r7,r7,1
    4f0c:	114b883a 	add	r5,r2,r5
    4f10:	3800071e 	bne	r7,zero,4f30 <_free_r+0x20c>
    4f14:	81fffe17 	ldw	r7,-8(r16)
    4f18:	19c7c83a 	sub	r3,r3,r7
    4f1c:	18800317 	ldw	r2,12(r3)
    4f20:	19000217 	ldw	r4,8(r3)
    4f24:	29cb883a 	add	r5,r5,r7
    4f28:	20800315 	stw	r2,12(r4)
    4f2c:	11000215 	stw	r4,8(r2)
    4f30:	00800074 	movhi	r2,1
    4f34:	29000054 	ori	r4,r5,1
    4f38:	1089e817 	ldw	r2,10144(r2)
    4f3c:	19000115 	stw	r4,4(r3)
    4f40:	30c00215 	stw	r3,8(r6)
    4f44:	28bfb136 	bltu	r5,r2,4e0c <_free_r+0xe8>
    4f48:	00800074 	movhi	r2,1
    4f4c:	1150eb17 	ldw	r5,17324(r2)
    4f50:	8809883a 	mov	r4,r17
    4f54:	0004c000 	call	4c00 <_malloc_trim_r>
    4f58:	003fac06 	br	4e0c <_free_r+0xe8>
    4f5c:	1145883a 	add	r2,r2,r5
    4f60:	003fd406 	br	4eb4 <_free_r+0x190>
    4f64:	21400568 	cmpgeui	r5,r4,21
    4f68:	28000726 	beq	r5,zero,4f88 <_free_r+0x264>
    4f6c:	21401568 	cmpgeui	r5,r4,85
    4f70:	2800191e 	bne	r5,zero,4fd8 <_free_r+0x2b4>
    4f74:	1008d33a 	srli	r4,r2,12
    4f78:	21c01bc4 	addi	r7,r4,111
    4f7c:	380e90fa 	slli	r7,r7,3
    4f80:	21001b84 	addi	r4,r4,110
    4f84:	003fb606 	br	4e60 <_free_r+0x13c>
    4f88:	21c01704 	addi	r7,r4,92
    4f8c:	380e90fa 	slli	r7,r7,3
    4f90:	210016c4 	addi	r4,r4,91
    4f94:	003fb206 	br	4e60 <_free_r+0x13c>
    4f98:	30c00515 	stw	r3,20(r6)
    4f9c:	30c00415 	stw	r3,16(r6)
    4fa0:	11000054 	ori	r4,r2,1
    4fa4:	19c00315 	stw	r7,12(r3)
    4fa8:	19c00215 	stw	r7,8(r3)
    4fac:	19000115 	stw	r4,4(r3)
    4fb0:	1887883a 	add	r3,r3,r2
    4fb4:	18800015 	stw	r2,0(r3)
    4fb8:	003f9406 	br	4e0c <_free_r+0xe8>
    4fbc:	2009d0ba 	srai	r4,r4,2
    4fc0:	00800044 	movi	r2,1
    4fc4:	32000117 	ldw	r8,4(r6)
    4fc8:	1104983a 	sll	r2,r2,r4
    4fcc:	1204b03a 	or	r2,r2,r8
    4fd0:	30800115 	stw	r2,4(r6)
    4fd4:	003fae06 	br	4e90 <_free_r+0x16c>
    4fd8:	21405568 	cmpgeui	r5,r4,341
    4fdc:	2800051e 	bne	r5,zero,4ff4 <_free_r+0x2d0>
    4fe0:	1008d3fa 	srli	r4,r2,15
    4fe4:	21c01e04 	addi	r7,r4,120
    4fe8:	380e90fa 	slli	r7,r7,3
    4fec:	21001dc4 	addi	r4,r4,119
    4ff0:	003f9b06 	br	4e60 <_free_r+0x13c>
    4ff4:	21015568 	cmpgeui	r4,r4,1365
    4ff8:	2000051e 	bne	r4,zero,5010 <_free_r+0x2ec>
    4ffc:	1008d4ba 	srli	r4,r2,18
    5000:	21c01f44 	addi	r7,r4,125
    5004:	380e90fa 	slli	r7,r7,3
    5008:	21001f04 	addi	r4,r4,124
    500c:	003f9406 	br	4e60 <_free_r+0x13c>
    5010:	01c0fe04 	movi	r7,1016
    5014:	01001f84 	movi	r4,126
    5018:	003f9106 	br	4e60 <_free_r+0x13c>
    501c:	11400054 	ori	r5,r2,1
    5020:	19400115 	stw	r5,4(r3)
    5024:	20800015 	stw	r2,0(r4)
    5028:	003f7806 	br	4e0c <_free_r+0xe8>

0000502c <__sfvwrite_r>:
    502c:	30800217 	ldw	r2,8(r6)
    5030:	1000c426 	beq	r2,zero,5344 <__sfvwrite_r+0x318>
    5034:	2a80030b 	ldhu	r10,12(r5)
    5038:	defff504 	addi	sp,sp,-44
    503c:	df000915 	stw	fp,36(sp)
    5040:	dcc00415 	stw	r19,16(sp)
    5044:	dc000115 	stw	r16,4(sp)
    5048:	dfc00a15 	stw	ra,40(sp)
    504c:	ddc00815 	stw	r23,32(sp)
    5050:	dd800715 	stw	r22,28(sp)
    5054:	dd400615 	stw	r21,24(sp)
    5058:	dd000515 	stw	r20,20(sp)
    505c:	dc800315 	stw	r18,12(sp)
    5060:	dc400215 	stw	r17,8(sp)
    5064:	5080020c 	andi	r2,r10,8
    5068:	3039883a 	mov	fp,r6
    506c:	2027883a 	mov	r19,r4
    5070:	2821883a 	mov	r16,r5
    5074:	10002226 	beq	r2,zero,5100 <__sfvwrite_r+0xd4>
    5078:	28800417 	ldw	r2,16(r5)
    507c:	10002026 	beq	r2,zero,5100 <__sfvwrite_r+0xd4>
    5080:	5080008c 	andi	r2,r10,2
    5084:	e4400017 	ldw	r17,0(fp)
    5088:	10002526 	beq	r2,zero,5120 <__sfvwrite_r+0xf4>
    508c:	80800917 	ldw	r2,36(r16)
    5090:	81400717 	ldw	r5,28(r16)
    5094:	05600034 	movhi	r21,32768
    5098:	0029883a 	mov	r20,zero
    509c:	0025883a 	mov	r18,zero
    50a0:	ad7f0004 	addi	r21,r21,-1024
    50a4:	a00d883a 	mov	r6,r20
    50a8:	9809883a 	mov	r4,r19
    50ac:	90001026 	beq	r18,zero,50f0 <__sfvwrite_r+0xc4>
    50b0:	900f883a 	mov	r7,r18
    50b4:	ac80012e 	bgeu	r21,r18,50bc <__sfvwrite_r+0x90>
    50b8:	a80f883a 	mov	r7,r21
    50bc:	103ee83a 	callr	r2
    50c0:	00809b0e 	bge	zero,r2,5330 <__sfvwrite_r+0x304>
    50c4:	e0c00217 	ldw	r3,8(fp)
    50c8:	a0a9883a 	add	r20,r20,r2
    50cc:	90a5c83a 	sub	r18,r18,r2
    50d0:	1885c83a 	sub	r2,r3,r2
    50d4:	e0800215 	stw	r2,8(fp)
    50d8:	10008426 	beq	r2,zero,52ec <__sfvwrite_r+0x2c0>
    50dc:	80800917 	ldw	r2,36(r16)
    50e0:	81400717 	ldw	r5,28(r16)
    50e4:	a00d883a 	mov	r6,r20
    50e8:	9809883a 	mov	r4,r19
    50ec:	903ff01e 	bne	r18,zero,50b0 <__sfvwrite_r+0x84>
    50f0:	8d000017 	ldw	r20,0(r17)
    50f4:	8c800117 	ldw	r18,4(r17)
    50f8:	8c400204 	addi	r17,r17,8
    50fc:	003fe906 	br	50a4 <__sfvwrite_r+0x78>
    5100:	800b883a 	mov	r5,r16
    5104:	9809883a 	mov	r4,r19
    5108:	0002a3c0 	call	2a3c <__swsetup_r>
    510c:	10008b1e 	bne	r2,zero,533c <__sfvwrite_r+0x310>
    5110:	8280030b 	ldhu	r10,12(r16)
    5114:	e4400017 	ldw	r17,0(fp)
    5118:	5080008c 	andi	r2,r10,2
    511c:	103fdb1e 	bne	r2,zero,508c <__sfvwrite_r+0x60>
    5120:	5080004c 	andi	r2,r10,1
    5124:	10004f1e 	bne	r2,zero,5264 <__sfvwrite_r+0x238>
    5128:	00a00034 	movhi	r2,32768
    512c:	81c00017 	ldw	r7,0(r16)
    5130:	80c00217 	ldw	r3,8(r16)
    5134:	10bfffc4 	addi	r2,r2,-1
    5138:	002d883a 	mov	r22,zero
    513c:	0025883a 	mov	r18,zero
    5140:	d8800015 	stw	r2,0(sp)
    5144:	3809883a 	mov	r4,r7
    5148:	1829883a 	mov	r20,r3
    514c:	90004126 	beq	r18,zero,5254 <__sfvwrite_r+0x228>
    5150:	5080800c 	andi	r2,r10,512
    5154:	10009526 	beq	r2,zero,53ac <__sfvwrite_r+0x380>
    5158:	182b883a 	mov	r21,r3
    515c:	90c0ba36 	bltu	r18,r3,5448 <__sfvwrite_r+0x41c>
    5160:	5081200c 	andi	r2,r10,1152
    5164:	10002526 	beq	r2,zero,51fc <__sfvwrite_r+0x1d0>
    5168:	80c00517 	ldw	r3,20(r16)
    516c:	81000417 	ldw	r4,16(r16)
    5170:	18c5883a 	add	r2,r3,r3
    5174:	10c5883a 	add	r2,r2,r3
    5178:	1012d7fa 	srli	r9,r2,31
    517c:	392fc83a 	sub	r23,r7,r4
    5180:	b8c00044 	addi	r3,r23,1
    5184:	4893883a 	add	r9,r9,r2
    5188:	4829d07a 	srai	r20,r9,1
    518c:	1c85883a 	add	r2,r3,r18
    5190:	a00b883a 	mov	r5,r20
    5194:	a080022e 	bgeu	r20,r2,51a0 <__sfvwrite_r+0x174>
    5198:	1029883a 	mov	r20,r2
    519c:	100b883a 	mov	r5,r2
    51a0:	5281000c 	andi	r10,r10,1024
    51a4:	5000b926 	beq	r10,zero,548c <__sfvwrite_r+0x460>
    51a8:	9809883a 	mov	r4,r19
    51ac:	00058600 	call	5860 <_malloc_r>
    51b0:	1000c426 	beq	r2,zero,54c4 <__sfvwrite_r+0x498>
    51b4:	81400417 	ldw	r5,16(r16)
    51b8:	1009883a 	mov	r4,r2
    51bc:	b80d883a 	mov	r6,r23
    51c0:	00061100 	call	6110 <memcpy>
    51c4:	1007883a 	mov	r3,r2
    51c8:	8080030b 	ldhu	r2,12(r16)
    51cc:	013edfc4 	movi	r4,-1153
    51d0:	1104703a 	and	r2,r2,r4
    51d4:	10802014 	ori	r2,r2,128
    51d8:	8080030d 	sth	r2,12(r16)
    51dc:	a5cfc83a 	sub	r7,r20,r23
    51e0:	1dc9883a 	add	r4,r3,r23
    51e4:	85000515 	stw	r20,20(r16)
    51e8:	80c00415 	stw	r3,16(r16)
    51ec:	81000015 	stw	r4,0(r16)
    51f0:	9029883a 	mov	r20,r18
    51f4:	81c00215 	stw	r7,8(r16)
    51f8:	902b883a 	mov	r21,r18
    51fc:	a80d883a 	mov	r6,r21
    5200:	b00b883a 	mov	r5,r22
    5204:	00062100 	call	6210 <memmove>
    5208:	80c00217 	ldw	r3,8(r16)
    520c:	81c00017 	ldw	r7,0(r16)
    5210:	902f883a 	mov	r23,r18
    5214:	1d07c83a 	sub	r3,r3,r20
    5218:	3d4d883a 	add	r6,r7,r21
    521c:	80c00215 	stw	r3,8(r16)
    5220:	81800015 	stw	r6,0(r16)
    5224:	0025883a 	mov	r18,zero
    5228:	e0800217 	ldw	r2,8(fp)
    522c:	b5ed883a 	add	r22,r22,r23
    5230:	15c5c83a 	sub	r2,r2,r23
    5234:	e0800215 	stw	r2,8(fp)
    5238:	10002c26 	beq	r2,zero,52ec <__sfvwrite_r+0x2c0>
    523c:	81c00017 	ldw	r7,0(r16)
    5240:	80c00217 	ldw	r3,8(r16)
    5244:	8280030b 	ldhu	r10,12(r16)
    5248:	3809883a 	mov	r4,r7
    524c:	1829883a 	mov	r20,r3
    5250:	903fbf1e 	bne	r18,zero,5150 <__sfvwrite_r+0x124>
    5254:	8d800017 	ldw	r22,0(r17)
    5258:	8c800117 	ldw	r18,4(r17)
    525c:	8c400204 	addi	r17,r17,8
    5260:	003fb806 	br	5144 <__sfvwrite_r+0x118>
    5264:	002f883a 	mov	r23,zero
    5268:	0005883a 	mov	r2,zero
    526c:	002b883a 	mov	r21,zero
    5270:	0029883a 	mov	r20,zero
    5274:	a0003526 	beq	r20,zero,534c <__sfvwrite_r+0x320>
    5278:	10003926 	beq	r2,zero,5360 <__sfvwrite_r+0x334>
    527c:	b805883a 	mov	r2,r23
    5280:	a02d883a 	mov	r22,r20
    5284:	1500012e 	bgeu	r2,r20,528c <__sfvwrite_r+0x260>
    5288:	102d883a 	mov	r22,r2
    528c:	81000017 	ldw	r4,0(r16)
    5290:	80800417 	ldw	r2,16(r16)
    5294:	84800217 	ldw	r18,8(r16)
    5298:	81c00517 	ldw	r7,20(r16)
    529c:	1100022e 	bgeu	r2,r4,52a8 <__sfvwrite_r+0x27c>
    52a0:	91e5883a 	add	r18,r18,r7
    52a4:	95803616 	blt	r18,r22,5380 <__sfvwrite_r+0x354>
    52a8:	b1c06a16 	blt	r22,r7,5454 <__sfvwrite_r+0x428>
    52ac:	80800917 	ldw	r2,36(r16)
    52b0:	81400717 	ldw	r5,28(r16)
    52b4:	a80d883a 	mov	r6,r21
    52b8:	9809883a 	mov	r4,r19
    52bc:	103ee83a 	callr	r2
    52c0:	1025883a 	mov	r18,r2
    52c4:	00801a0e 	bge	zero,r2,5330 <__sfvwrite_r+0x304>
    52c8:	bcafc83a 	sub	r23,r23,r18
    52cc:	b8001426 	beq	r23,zero,5320 <__sfvwrite_r+0x2f4>
    52d0:	00800044 	movi	r2,1
    52d4:	e0c00217 	ldw	r3,8(fp)
    52d8:	acab883a 	add	r21,r21,r18
    52dc:	a4a9c83a 	sub	r20,r20,r18
    52e0:	1c87c83a 	sub	r3,r3,r18
    52e4:	e0c00215 	stw	r3,8(fp)
    52e8:	183fe21e 	bne	r3,zero,5274 <__sfvwrite_r+0x248>
    52ec:	0005883a 	mov	r2,zero
    52f0:	dfc00a17 	ldw	ra,40(sp)
    52f4:	df000917 	ldw	fp,36(sp)
    52f8:	ddc00817 	ldw	r23,32(sp)
    52fc:	dd800717 	ldw	r22,28(sp)
    5300:	dd400617 	ldw	r21,24(sp)
    5304:	dd000517 	ldw	r20,20(sp)
    5308:	dcc00417 	ldw	r19,16(sp)
    530c:	dc800317 	ldw	r18,12(sp)
    5310:	dc400217 	ldw	r17,8(sp)
    5314:	dc000117 	ldw	r16,4(sp)
    5318:	dec00b04 	addi	sp,sp,44
    531c:	f800283a 	ret
    5320:	800b883a 	mov	r5,r16
    5324:	9809883a 	mov	r4,r19
    5328:	00047900 	call	4790 <_fflush_r>
    532c:	103fe926 	beq	r2,zero,52d4 <__sfvwrite_r+0x2a8>
    5330:	8080030b 	ldhu	r2,12(r16)
    5334:	10801014 	ori	r2,r2,64
    5338:	8080030d 	sth	r2,12(r16)
    533c:	00bfffc4 	movi	r2,-1
    5340:	003feb06 	br	52f0 <__sfvwrite_r+0x2c4>
    5344:	0005883a 	mov	r2,zero
    5348:	f800283a 	ret
    534c:	8d000117 	ldw	r20,4(r17)
    5350:	8805883a 	mov	r2,r17
    5354:	8c400204 	addi	r17,r17,8
    5358:	a03ffc26 	beq	r20,zero,534c <__sfvwrite_r+0x320>
    535c:	15400017 	ldw	r21,0(r2)
    5360:	a00d883a 	mov	r6,r20
    5364:	01400284 	movi	r5,10
    5368:	a809883a 	mov	r4,r21
    536c:	00060140 	call	6014 <memchr>
    5370:	10004326 	beq	r2,zero,5480 <__sfvwrite_r+0x454>
    5374:	10800044 	addi	r2,r2,1
    5378:	156fc83a 	sub	r23,r2,r21
    537c:	003fbf06 	br	527c <__sfvwrite_r+0x250>
    5380:	a80b883a 	mov	r5,r21
    5384:	900d883a 	mov	r6,r18
    5388:	00062100 	call	6210 <memmove>
    538c:	80800017 	ldw	r2,0(r16)
    5390:	800b883a 	mov	r5,r16
    5394:	9809883a 	mov	r4,r19
    5398:	1485883a 	add	r2,r2,r18
    539c:	80800015 	stw	r2,0(r16)
    53a0:	00047900 	call	4790 <_fflush_r>
    53a4:	103fc826 	beq	r2,zero,52c8 <__sfvwrite_r+0x29c>
    53a8:	003fe106 	br	5330 <__sfvwrite_r+0x304>
    53ac:	80800417 	ldw	r2,16(r16)
    53b0:	11c01236 	bltu	r2,r7,53fc <__sfvwrite_r+0x3d0>
    53b4:	81400517 	ldw	r5,20(r16)
    53b8:	91401036 	bltu	r18,r5,53fc <__sfvwrite_r+0x3d0>
    53bc:	00a00034 	movhi	r2,32768
    53c0:	902f883a 	mov	r23,r18
    53c4:	90800136 	bltu	r18,r2,53cc <__sfvwrite_r+0x3a0>
    53c8:	ddc00017 	ldw	r23,0(sp)
    53cc:	b809883a 	mov	r4,r23
    53d0:	000af5c0 	call	af5c <__modsi3>
    53d4:	80c00917 	ldw	r3,36(r16)
    53d8:	81400717 	ldw	r5,28(r16)
    53dc:	b88fc83a 	sub	r7,r23,r2
    53e0:	b00d883a 	mov	r6,r22
    53e4:	9809883a 	mov	r4,r19
    53e8:	183ee83a 	callr	r3
    53ec:	102f883a 	mov	r23,r2
    53f0:	00bfcf0e 	bge	zero,r2,5330 <__sfvwrite_r+0x304>
    53f4:	95e5c83a 	sub	r18,r18,r23
    53f8:	003f8b06 	br	5228 <__sfvwrite_r+0x1fc>
    53fc:	182f883a 	mov	r23,r3
    5400:	90c0012e 	bgeu	r18,r3,5408 <__sfvwrite_r+0x3dc>
    5404:	902f883a 	mov	r23,r18
    5408:	3809883a 	mov	r4,r7
    540c:	b80d883a 	mov	r6,r23
    5410:	b00b883a 	mov	r5,r22
    5414:	00062100 	call	6210 <memmove>
    5418:	80c00217 	ldw	r3,8(r16)
    541c:	81c00017 	ldw	r7,0(r16)
    5420:	1dc7c83a 	sub	r3,r3,r23
    5424:	3dcf883a 	add	r7,r7,r23
    5428:	80c00215 	stw	r3,8(r16)
    542c:	81c00015 	stw	r7,0(r16)
    5430:	183ff01e 	bne	r3,zero,53f4 <__sfvwrite_r+0x3c8>
    5434:	800b883a 	mov	r5,r16
    5438:	9809883a 	mov	r4,r19
    543c:	00047900 	call	4790 <_fflush_r>
    5440:	103fec26 	beq	r2,zero,53f4 <__sfvwrite_r+0x3c8>
    5444:	003fba06 	br	5330 <__sfvwrite_r+0x304>
    5448:	9029883a 	mov	r20,r18
    544c:	902b883a 	mov	r21,r18
    5450:	003f6a06 	br	51fc <__sfvwrite_r+0x1d0>
    5454:	b00d883a 	mov	r6,r22
    5458:	a80b883a 	mov	r5,r21
    545c:	00062100 	call	6210 <memmove>
    5460:	80c00217 	ldw	r3,8(r16)
    5464:	80800017 	ldw	r2,0(r16)
    5468:	b025883a 	mov	r18,r22
    546c:	1d87c83a 	sub	r3,r3,r22
    5470:	1585883a 	add	r2,r2,r22
    5474:	80c00215 	stw	r3,8(r16)
    5478:	80800015 	stw	r2,0(r16)
    547c:	003f9206 	br	52c8 <__sfvwrite_r+0x29c>
    5480:	a0800044 	addi	r2,r20,1
    5484:	102f883a 	mov	r23,r2
    5488:	003f7d06 	br	5280 <__sfvwrite_r+0x254>
    548c:	280d883a 	mov	r6,r5
    5490:	200b883a 	mov	r5,r4
    5494:	9809883a 	mov	r4,r19
    5498:	000765c0 	call	765c <_realloc_r>
    549c:	1007883a 	mov	r3,r2
    54a0:	103f4e1e 	bne	r2,zero,51dc <__sfvwrite_r+0x1b0>
    54a4:	81400417 	ldw	r5,16(r16)
    54a8:	9809883a 	mov	r4,r19
    54ac:	0004d240 	call	4d24 <_free_r>
    54b0:	8080030b 	ldhu	r2,12(r16)
    54b4:	00c00304 	movi	r3,12
    54b8:	98c00015 	stw	r3,0(r19)
    54bc:	10bfdfcc 	andi	r2,r2,65407
    54c0:	003f9c06 	br	5334 <__sfvwrite_r+0x308>
    54c4:	00c00304 	movi	r3,12
    54c8:	8080030b 	ldhu	r2,12(r16)
    54cc:	98c00015 	stw	r3,0(r19)
    54d0:	003f9806 	br	5334 <__sfvwrite_r+0x308>

000054d4 <_fwalk>:
    54d4:	defffa04 	addi	sp,sp,-24
    54d8:	dd000415 	stw	r20,16(sp)
    54dc:	dcc00315 	stw	r19,12(sp)
    54e0:	dc800215 	stw	r18,8(sp)
    54e4:	dfc00515 	stw	ra,20(sp)
    54e8:	dc400115 	stw	r17,4(sp)
    54ec:	dc000015 	stw	r16,0(sp)
    54f0:	2827883a 	mov	r19,r5
    54f4:	2480b804 	addi	r18,r4,736
    54f8:	0029883a 	mov	r20,zero
    54fc:	94400117 	ldw	r17,4(r18)
    5500:	94000217 	ldw	r16,8(r18)
    5504:	8c7fffc4 	addi	r17,r17,-1
    5508:	88000d16 	blt	r17,zero,5540 <_fwalk+0x6c>
    550c:	8080030b 	ldhu	r2,12(r16)
    5510:	8c7fffc4 	addi	r17,r17,-1
    5514:	108000b0 	cmpltui	r2,r2,2
    5518:	1000061e 	bne	r2,zero,5534 <_fwalk+0x60>
    551c:	8080038f 	ldh	r2,14(r16)
    5520:	8009883a 	mov	r4,r16
    5524:	10bfffe0 	cmpeqi	r2,r2,-1
    5528:	1000021e 	bne	r2,zero,5534 <_fwalk+0x60>
    552c:	983ee83a 	callr	r19
    5530:	a0a8b03a 	or	r20,r20,r2
    5534:	88bfffd8 	cmpnei	r2,r17,-1
    5538:	84001a04 	addi	r16,r16,104
    553c:	103ff31e 	bne	r2,zero,550c <_fwalk+0x38>
    5540:	94800017 	ldw	r18,0(r18)
    5544:	903fed1e 	bne	r18,zero,54fc <_fwalk+0x28>
    5548:	a005883a 	mov	r2,r20
    554c:	dfc00517 	ldw	ra,20(sp)
    5550:	dd000417 	ldw	r20,16(sp)
    5554:	dcc00317 	ldw	r19,12(sp)
    5558:	dc800217 	ldw	r18,8(sp)
    555c:	dc400117 	ldw	r17,4(sp)
    5560:	dc000017 	ldw	r16,0(sp)
    5564:	dec00604 	addi	sp,sp,24
    5568:	f800283a 	ret

0000556c <_fwalk_reent>:
    556c:	defff904 	addi	sp,sp,-28
    5570:	dd400515 	stw	r21,20(sp)
    5574:	dd000415 	stw	r20,16(sp)
    5578:	dcc00315 	stw	r19,12(sp)
    557c:	dc800215 	stw	r18,8(sp)
    5580:	dfc00615 	stw	ra,24(sp)
    5584:	dc400115 	stw	r17,4(sp)
    5588:	dc000015 	stw	r16,0(sp)
    558c:	2025883a 	mov	r18,r4
    5590:	2829883a 	mov	r20,r5
    5594:	24c0b804 	addi	r19,r4,736
    5598:	002b883a 	mov	r21,zero
    559c:	9c400117 	ldw	r17,4(r19)
    55a0:	9c000217 	ldw	r16,8(r19)
    55a4:	8c7fffc4 	addi	r17,r17,-1
    55a8:	88000e16 	blt	r17,zero,55e4 <_fwalk_reent+0x78>
    55ac:	8080030b 	ldhu	r2,12(r16)
    55b0:	8c7fffc4 	addi	r17,r17,-1
    55b4:	108000b0 	cmpltui	r2,r2,2
    55b8:	1000071e 	bne	r2,zero,55d8 <_fwalk_reent+0x6c>
    55bc:	8080038f 	ldh	r2,14(r16)
    55c0:	800b883a 	mov	r5,r16
    55c4:	9009883a 	mov	r4,r18
    55c8:	10bfffe0 	cmpeqi	r2,r2,-1
    55cc:	1000021e 	bne	r2,zero,55d8 <_fwalk_reent+0x6c>
    55d0:	a03ee83a 	callr	r20
    55d4:	a8aab03a 	or	r21,r21,r2
    55d8:	88bfffd8 	cmpnei	r2,r17,-1
    55dc:	84001a04 	addi	r16,r16,104
    55e0:	103ff21e 	bne	r2,zero,55ac <_fwalk_reent+0x40>
    55e4:	9cc00017 	ldw	r19,0(r19)
    55e8:	983fec1e 	bne	r19,zero,559c <_fwalk_reent+0x30>
    55ec:	a805883a 	mov	r2,r21
    55f0:	dfc00617 	ldw	ra,24(sp)
    55f4:	dd400517 	ldw	r21,20(sp)
    55f8:	dd000417 	ldw	r20,16(sp)
    55fc:	dcc00317 	ldw	r19,12(sp)
    5600:	dc800217 	ldw	r18,8(sp)
    5604:	dc400117 	ldw	r17,4(sp)
    5608:	dc000017 	ldw	r16,0(sp)
    560c:	dec00704 	addi	sp,sp,28
    5610:	f800283a 	ret

00005614 <__localeconv_l>:
    5614:	20803c04 	addi	r2,r4,240
    5618:	f800283a 	ret

0000561c <_localeconv_r>:
    561c:	00800074 	movhi	r2,1
    5620:	10854404 	addi	r2,r2,5392
    5624:	f800283a 	ret

00005628 <localeconv>:
    5628:	00800074 	movhi	r2,1
    562c:	10854404 	addi	r2,r2,5392
    5630:	f800283a 	ret

00005634 <__smakebuf_r>:
    5634:	2880030b 	ldhu	r2,12(r5)
    5638:	deffe804 	addi	sp,sp,-96
    563c:	dc001215 	stw	r16,72(sp)
    5640:	dfc01715 	stw	ra,92(sp)
    5644:	dd001615 	stw	r20,88(sp)
    5648:	dcc01515 	stw	r19,84(sp)
    564c:	dc801415 	stw	r18,80(sp)
    5650:	dc401315 	stw	r17,76(sp)
    5654:	10c0008c 	andi	r3,r2,2
    5658:	2821883a 	mov	r16,r5
    565c:	18000d26 	beq	r3,zero,5694 <__smakebuf_r+0x60>
    5660:	288010c4 	addi	r2,r5,67
    5664:	28800015 	stw	r2,0(r5)
    5668:	28800415 	stw	r2,16(r5)
    566c:	00800044 	movi	r2,1
    5670:	28800515 	stw	r2,20(r5)
    5674:	dfc01717 	ldw	ra,92(sp)
    5678:	dd001617 	ldw	r20,88(sp)
    567c:	dcc01517 	ldw	r19,84(sp)
    5680:	dc801417 	ldw	r18,80(sp)
    5684:	dc401317 	ldw	r17,76(sp)
    5688:	dc001217 	ldw	r16,72(sp)
    568c:	dec01804 	addi	sp,sp,96
    5690:	f800283a 	ret
    5694:	2940038f 	ldh	r5,14(r5)
    5698:	2023883a 	mov	r17,r4
    569c:	28002816 	blt	r5,zero,5740 <__smakebuf_r+0x10c>
    56a0:	d80d883a 	mov	r6,sp
    56a4:	000985c0 	call	985c <_fstat_r>
    56a8:	10002416 	blt	r2,zero,573c <__smakebuf_r+0x108>
    56ac:	d8800117 	ldw	r2,4(sp)
    56b0:	10bc000c 	andi	r2,r2,61440
    56b4:	10880018 	cmpnei	r2,r2,8192
    56b8:	1000421e 	bne	r2,zero,57c4 <__smakebuf_r+0x190>
    56bc:	8140038f 	ldh	r5,14(r16)
    56c0:	8809883a 	mov	r4,r17
    56c4:	00098bc0 	call	98bc <_isatty_r>
    56c8:	10000826 	beq	r2,zero,56ec <__smakebuf_r+0xb8>
    56cc:	8080030b 	ldhu	r2,12(r16)
    56d0:	80c010c4 	addi	r3,r16,67
    56d4:	80c00015 	stw	r3,0(r16)
    56d8:	10800054 	ori	r2,r2,1
    56dc:	8080030d 	sth	r2,12(r16)
    56e0:	00800044 	movi	r2,1
    56e4:	80c00415 	stw	r3,16(r16)
    56e8:	80800515 	stw	r2,20(r16)
    56ec:	04c00044 	movi	r19,1
    56f0:	05010004 	movi	r20,1024
    56f4:	04820004 	movi	r18,2048
    56f8:	a00b883a 	mov	r5,r20
    56fc:	8809883a 	mov	r4,r17
    5700:	00058600 	call	5860 <_malloc_r>
    5704:	10001726 	beq	r2,zero,5764 <__smakebuf_r+0x130>
    5708:	80c0030b 	ldhu	r3,12(r16)
    570c:	01000034 	movhi	r4,0
    5710:	21121f04 	addi	r4,r4,18556
    5714:	89000f15 	stw	r4,60(r17)
    5718:	18c02014 	ori	r3,r3,128
    571c:	80c0030d 	sth	r3,12(r16)
    5720:	80800015 	stw	r2,0(r16)
    5724:	80800415 	stw	r2,16(r16)
    5728:	85000515 	stw	r20,20(r16)
    572c:	98001d1e 	bne	r19,zero,57a4 <__smakebuf_r+0x170>
    5730:	90e4b03a 	or	r18,r18,r3
    5734:	8480030d 	sth	r18,12(r16)
    5738:	003fce06 	br	5674 <__smakebuf_r+0x40>
    573c:	8080030b 	ldhu	r2,12(r16)
    5740:	1080200c 	andi	r2,r2,128
    5744:	0027883a 	mov	r19,zero
    5748:	10001326 	beq	r2,zero,5798 <__smakebuf_r+0x164>
    574c:	05001004 	movi	r20,64
    5750:	a00b883a 	mov	r5,r20
    5754:	8809883a 	mov	r4,r17
    5758:	0025883a 	mov	r18,zero
    575c:	00058600 	call	5860 <_malloc_r>
    5760:	103fe91e 	bne	r2,zero,5708 <__smakebuf_r+0xd4>
    5764:	8080030b 	ldhu	r2,12(r16)
    5768:	10c0800c 	andi	r3,r2,512
    576c:	183fc11e 	bne	r3,zero,5674 <__smakebuf_r+0x40>
    5770:	00ffff04 	movi	r3,-4
    5774:	10c4703a 	and	r2,r2,r3
    5778:	10800094 	ori	r2,r2,2
    577c:	80c010c4 	addi	r3,r16,67
    5780:	8080030d 	sth	r2,12(r16)
    5784:	00800044 	movi	r2,1
    5788:	80c00015 	stw	r3,0(r16)
    578c:	80c00415 	stw	r3,16(r16)
    5790:	80800515 	stw	r2,20(r16)
    5794:	003fb706 	br	5674 <__smakebuf_r+0x40>
    5798:	05010004 	movi	r20,1024
    579c:	0025883a 	mov	r18,zero
    57a0:	003fd506 	br	56f8 <__smakebuf_r+0xc4>
    57a4:	8140038f 	ldh	r5,14(r16)
    57a8:	8809883a 	mov	r4,r17
    57ac:	00098bc0 	call	98bc <_isatty_r>
    57b0:	80c0030b 	ldhu	r3,12(r16)
    57b4:	103fde26 	beq	r2,zero,5730 <__smakebuf_r+0xfc>
    57b8:	18ffff0c 	andi	r3,r3,65532
    57bc:	18c00054 	ori	r3,r3,1
    57c0:	003fdb06 	br	5730 <__smakebuf_r+0xfc>
    57c4:	0027883a 	mov	r19,zero
    57c8:	05010004 	movi	r20,1024
    57cc:	04820004 	movi	r18,2048
    57d0:	003fc906 	br	56f8 <__smakebuf_r+0xc4>

000057d4 <__swhatbuf_r>:
    57d4:	deffea04 	addi	sp,sp,-88
    57d8:	dc001215 	stw	r16,72(sp)
    57dc:	2821883a 	mov	r16,r5
    57e0:	2940038f 	ldh	r5,14(r5)
    57e4:	dc801415 	stw	r18,80(sp)
    57e8:	dc401315 	stw	r17,76(sp)
    57ec:	dfc01515 	stw	ra,84(sp)
    57f0:	3023883a 	mov	r17,r6
    57f4:	3825883a 	mov	r18,r7
    57f8:	28001016 	blt	r5,zero,583c <__swhatbuf_r+0x68>
    57fc:	d80d883a 	mov	r6,sp
    5800:	000985c0 	call	985c <_fstat_r>
    5804:	10000d16 	blt	r2,zero,583c <__swhatbuf_r+0x68>
    5808:	d8c00117 	ldw	r3,4(sp)
    580c:	01010004 	movi	r4,1024
    5810:	00820004 	movi	r2,2048
    5814:	18fc000c 	andi	r3,r3,61440
    5818:	18c80020 	cmpeqi	r3,r3,8192
    581c:	90c00015 	stw	r3,0(r18)
    5820:	89000015 	stw	r4,0(r17)
    5824:	dfc01517 	ldw	ra,84(sp)
    5828:	dc801417 	ldw	r18,80(sp)
    582c:	dc401317 	ldw	r17,76(sp)
    5830:	dc001217 	ldw	r16,72(sp)
    5834:	dec01604 	addi	sp,sp,88
    5838:	f800283a 	ret
    583c:	8080030b 	ldhu	r2,12(r16)
    5840:	0007883a 	mov	r3,zero
    5844:	1080200c 	andi	r2,r2,128
    5848:	10000326 	beq	r2,zero,5858 <__swhatbuf_r+0x84>
    584c:	01001004 	movi	r4,64
    5850:	0005883a 	mov	r2,zero
    5854:	003ff106 	br	581c <__swhatbuf_r+0x48>
    5858:	01010004 	movi	r4,1024
    585c:	003fef06 	br	581c <__swhatbuf_r+0x48>

00005860 <_malloc_r>:
    5860:	defff604 	addi	sp,sp,-40
    5864:	dc400115 	stw	r17,4(sp)
    5868:	2c4002c4 	addi	r17,r5,11
    586c:	dc800215 	stw	r18,8(sp)
    5870:	dfc00915 	stw	ra,36(sp)
    5874:	df000815 	stw	fp,32(sp)
    5878:	ddc00715 	stw	r23,28(sp)
    587c:	dd800615 	stw	r22,24(sp)
    5880:	dd400515 	stw	r21,20(sp)
    5884:	dd000415 	stw	r20,16(sp)
    5888:	dcc00315 	stw	r19,12(sp)
    588c:	dc000015 	stw	r16,0(sp)
    5890:	888005e8 	cmpgeui	r2,r17,23
    5894:	2025883a 	mov	r18,r4
    5898:	1000261e 	bne	r2,zero,5934 <_malloc_r+0xd4>
    589c:	29400468 	cmpgeui	r5,r5,17
    58a0:	28008d1e 	bne	r5,zero,5ad8 <_malloc_r+0x278>
    58a4:	000e0740 	call	e074 <__malloc_lock>
    58a8:	04400404 	movi	r17,16
    58ac:	00800604 	movi	r2,24
    58b0:	01c00084 	movi	r7,2
    58b4:	04c00074 	movhi	r19,1
    58b8:	9cc40604 	addi	r19,r19,4120
    58bc:	9885883a 	add	r2,r19,r2
    58c0:	14000117 	ldw	r16,4(r2)
    58c4:	10fffe04 	addi	r3,r2,-8
    58c8:	80c0cb26 	beq	r16,r3,5bf8 <_malloc_r+0x398>
    58cc:	80800117 	ldw	r2,4(r16)
    58d0:	81000317 	ldw	r4,12(r16)
    58d4:	00ffff04 	movi	r3,-4
    58d8:	10c4703a 	and	r2,r2,r3
    58dc:	81400217 	ldw	r5,8(r16)
    58e0:	8085883a 	add	r2,r16,r2
    58e4:	10c00117 	ldw	r3,4(r2)
    58e8:	29000315 	stw	r4,12(r5)
    58ec:	21400215 	stw	r5,8(r4)
    58f0:	18c00054 	ori	r3,r3,1
    58f4:	10c00115 	stw	r3,4(r2)
    58f8:	9009883a 	mov	r4,r18
    58fc:	000e0980 	call	e098 <__malloc_unlock>
    5900:	80800204 	addi	r2,r16,8
    5904:	dfc00917 	ldw	ra,36(sp)
    5908:	df000817 	ldw	fp,32(sp)
    590c:	ddc00717 	ldw	r23,28(sp)
    5910:	dd800617 	ldw	r22,24(sp)
    5914:	dd400517 	ldw	r21,20(sp)
    5918:	dd000417 	ldw	r20,16(sp)
    591c:	dcc00317 	ldw	r19,12(sp)
    5920:	dc800217 	ldw	r18,8(sp)
    5924:	dc400117 	ldw	r17,4(sp)
    5928:	dc000017 	ldw	r16,0(sp)
    592c:	dec00a04 	addi	sp,sp,40
    5930:	f800283a 	ret
    5934:	00bffe04 	movi	r2,-8
    5938:	88a2703a 	and	r17,r17,r2
    593c:	88006616 	blt	r17,zero,5ad8 <_malloc_r+0x278>
    5940:	89406536 	bltu	r17,r5,5ad8 <_malloc_r+0x278>
    5944:	000e0740 	call	e074 <__malloc_lock>
    5948:	88807e28 	cmpgeui	r2,r17,504
    594c:	1000ef26 	beq	r2,zero,5d0c <_malloc_r+0x4ac>
    5950:	8804d27a 	srli	r2,r17,9
    5954:	10006426 	beq	r2,zero,5ae8 <_malloc_r+0x288>
    5958:	10c00168 	cmpgeui	r3,r2,5
    595c:	1800c31e 	bne	r3,zero,5c6c <_malloc_r+0x40c>
    5960:	8804d1ba 	srli	r2,r17,6
    5964:	11c00e44 	addi	r7,r2,57
    5968:	380890fa 	slli	r4,r7,3
    596c:	12000e04 	addi	r8,r2,56
    5970:	04c00074 	movhi	r19,1
    5974:	9cc40604 	addi	r19,r19,4120
    5978:	9909883a 	add	r4,r19,r4
    597c:	24000117 	ldw	r16,4(r4)
    5980:	213ffe04 	addi	r4,r4,-8
    5984:	24000b26 	beq	r4,r16,59b4 <_malloc_r+0x154>
    5988:	01bfff04 	movi	r6,-4
    598c:	00000306 	br	599c <_malloc_r+0x13c>
    5990:	1800970e 	bge	r3,zero,5bf0 <_malloc_r+0x390>
    5994:	84000317 	ldw	r16,12(r16)
    5998:	24000626 	beq	r4,r16,59b4 <_malloc_r+0x154>
    599c:	80800117 	ldw	r2,4(r16)
    59a0:	1184703a 	and	r2,r2,r6
    59a4:	1447c83a 	sub	r3,r2,r17
    59a8:	19400408 	cmpgei	r5,r3,16
    59ac:	283ff826 	beq	r5,zero,5990 <_malloc_r+0x130>
    59b0:	400f883a 	mov	r7,r8
    59b4:	9c000417 	ldw	r16,16(r19)
    59b8:	02400074 	movhi	r9,1
    59bc:	4a440804 	addi	r9,r9,4128
    59c0:	82407f26 	beq	r16,r9,5bc0 <_malloc_r+0x360>
    59c4:	80800117 	ldw	r2,4(r16)
    59c8:	00ffff04 	movi	r3,-4
    59cc:	10c4703a 	and	r2,r2,r3
    59d0:	1447c83a 	sub	r3,r2,r17
    59d4:	19000410 	cmplti	r4,r3,16
    59d8:	2000cf26 	beq	r4,zero,5d18 <_malloc_r+0x4b8>
    59dc:	9a400515 	stw	r9,20(r19)
    59e0:	9a400415 	stw	r9,16(r19)
    59e4:	1800c10e 	bge	r3,zero,5cec <_malloc_r+0x48c>
    59e8:	10c08028 	cmpgeui	r3,r2,512
    59ec:	99400117 	ldw	r5,4(r19)
    59f0:	1800851e 	bne	r3,zero,5c08 <_malloc_r+0x3a8>
    59f4:	1006d0fa 	srli	r3,r2,3
    59f8:	1008d17a 	srli	r4,r2,5
    59fc:	18800044 	addi	r2,r3,1
    5a00:	100490fa 	slli	r2,r2,3
    5a04:	00c00044 	movi	r3,1
    5a08:	1906983a 	sll	r3,r3,r4
    5a0c:	9885883a 	add	r2,r19,r2
    5a10:	11000017 	ldw	r4,0(r2)
    5a14:	28cab03a 	or	r5,r5,r3
    5a18:	10fffe04 	addi	r3,r2,-8
    5a1c:	80c00315 	stw	r3,12(r16)
    5a20:	81000215 	stw	r4,8(r16)
    5a24:	99400115 	stw	r5,4(r19)
    5a28:	14000015 	stw	r16,0(r2)
    5a2c:	24000315 	stw	r16,12(r4)
    5a30:	3805d0ba 	srai	r2,r7,2
    5a34:	01000044 	movi	r4,1
    5a38:	2088983a 	sll	r4,r4,r2
    5a3c:	29002e36 	bltu	r5,r4,5af8 <_malloc_r+0x298>
    5a40:	2144703a 	and	r2,r4,r5
    5a44:	10000a1e 	bne	r2,zero,5a70 <_malloc_r+0x210>
    5a48:	2109883a 	add	r4,r4,r4
    5a4c:	00bfff04 	movi	r2,-4
    5a50:	3884703a 	and	r2,r7,r2
    5a54:	2146703a 	and	r3,r4,r5
    5a58:	11c00104 	addi	r7,r2,4
    5a5c:	1800041e 	bne	r3,zero,5a70 <_malloc_r+0x210>
    5a60:	2109883a 	add	r4,r4,r4
    5a64:	2144703a 	and	r2,r4,r5
    5a68:	39c00104 	addi	r7,r7,4
    5a6c:	103ffc26 	beq	r2,zero,5a60 <_malloc_r+0x200>
    5a70:	02bfff04 	movi	r10,-4
    5a74:	381690fa 	slli	r11,r7,3
    5a78:	3819883a 	mov	r12,r7
    5a7c:	9ad7883a 	add	r11,r19,r11
    5a80:	5811883a 	mov	r8,r11
    5a84:	40800317 	ldw	r2,12(r8)
    5a88:	40808126 	beq	r8,r2,5c90 <_malloc_r+0x430>
    5a8c:	10c00117 	ldw	r3,4(r2)
    5a90:	1021883a 	mov	r16,r2
    5a94:	10800317 	ldw	r2,12(r2)
    5a98:	1a86703a 	and	r3,r3,r10
    5a9c:	1c4bc83a 	sub	r5,r3,r17
    5aa0:	29800410 	cmplti	r6,r5,16
    5aa4:	30007f26 	beq	r6,zero,5ca4 <_malloc_r+0x444>
    5aa8:	283ff716 	blt	r5,zero,5a88 <_malloc_r+0x228>
    5aac:	80c7883a 	add	r3,r16,r3
    5ab0:	19400117 	ldw	r5,4(r3)
    5ab4:	81800217 	ldw	r6,8(r16)
    5ab8:	9009883a 	mov	r4,r18
    5abc:	29400054 	ori	r5,r5,1
    5ac0:	19400115 	stw	r5,4(r3)
    5ac4:	30800315 	stw	r2,12(r6)
    5ac8:	11800215 	stw	r6,8(r2)
    5acc:	000e0980 	call	e098 <__malloc_unlock>
    5ad0:	80800204 	addi	r2,r16,8
    5ad4:	003f8b06 	br	5904 <_malloc_r+0xa4>
    5ad8:	00800304 	movi	r2,12
    5adc:	90800015 	stw	r2,0(r18)
    5ae0:	0005883a 	mov	r2,zero
    5ae4:	003f8706 	br	5904 <_malloc_r+0xa4>
    5ae8:	01008004 	movi	r4,512
    5aec:	01c01004 	movi	r7,64
    5af0:	02000fc4 	movi	r8,63
    5af4:	003f9e06 	br	5970 <_malloc_r+0x110>
    5af8:	9c000217 	ldw	r16,8(r19)
    5afc:	00bfff04 	movi	r2,-4
    5b00:	80c00117 	ldw	r3,4(r16)
    5b04:	18aa703a 	and	r21,r3,r2
    5b08:	ac400336 	bltu	r21,r17,5b18 <_malloc_r+0x2b8>
    5b0c:	ac47c83a 	sub	r3,r21,r17
    5b10:	18800408 	cmpgei	r2,r3,16
    5b14:	10002c1e 	bne	r2,zero,5bc8 <_malloc_r+0x368>
    5b18:	00800074 	movhi	r2,1
    5b1c:	1089e717 	ldw	r2,10140(r2)
    5b20:	00c00074 	movhi	r3,1
    5b24:	1d10eb17 	ldw	r20,17324(r3)
    5b28:	10bfffd8 	cmpnei	r2,r2,-1
    5b2c:	856f883a 	add	r23,r16,r21
    5b30:	8d29883a 	add	r20,r17,r20
    5b34:	1000e726 	beq	r2,zero,5ed4 <_malloc_r+0x674>
    5b38:	a50403c4 	addi	r20,r20,4111
    5b3c:	00bc0004 	movi	r2,-4096
    5b40:	a0a8703a 	and	r20,r20,r2
    5b44:	a00b883a 	mov	r5,r20
    5b48:	9009883a 	mov	r4,r18
    5b4c:	0007c500 	call	7c50 <_sbrk_r>
    5b50:	102d883a 	mov	r22,r2
    5b54:	10bfffd8 	cmpnei	r2,r2,-1
    5b58:	10008426 	beq	r2,zero,5d6c <_malloc_r+0x50c>
    5b5c:	b5c08236 	bltu	r22,r23,5d68 <_malloc_r+0x508>
    5b60:	00800074 	movhi	r2,1
    5b64:	1110f617 	ldw	r4,17368(r2)
    5b68:	a109883a 	add	r4,r20,r4
    5b6c:	1110f615 	stw	r4,17368(r2)
    5b70:	2007883a 	mov	r3,r4
    5b74:	bd80a51e 	bne	r23,r22,5e0c <_malloc_r+0x5ac>
    5b78:	b083ffcc 	andi	r2,r22,4095
    5b7c:	1000a31e 	bne	r2,zero,5e0c <_malloc_r+0x5ac>
    5b80:	9d800217 	ldw	r22,8(r19)
    5b84:	ad07883a 	add	r3,r21,r20
    5b88:	18c00054 	ori	r3,r3,1
    5b8c:	b0c00115 	stw	r3,4(r22)
    5b90:	00800074 	movhi	r2,1
    5b94:	1090ea17 	ldw	r2,17320(r2)
    5b98:	1100022e 	bgeu	r2,r4,5ba4 <_malloc_r+0x344>
    5b9c:	00800074 	movhi	r2,1
    5ba0:	1110ea15 	stw	r4,17320(r2)
    5ba4:	00800074 	movhi	r2,1
    5ba8:	1090e917 	ldw	r2,17316(r2)
    5bac:	1100022e 	bgeu	r2,r4,5bb8 <_malloc_r+0x358>
    5bb0:	00800074 	movhi	r2,1
    5bb4:	1110e915 	stw	r4,17316(r2)
    5bb8:	b021883a 	mov	r16,r22
    5bbc:	00006d06 	br	5d74 <_malloc_r+0x514>
    5bc0:	99400117 	ldw	r5,4(r19)
    5bc4:	003f9a06 	br	5a30 <_malloc_r+0x1d0>
    5bc8:	88800054 	ori	r2,r17,1
    5bcc:	80800115 	stw	r2,4(r16)
    5bd0:	8463883a 	add	r17,r16,r17
    5bd4:	9c400215 	stw	r17,8(r19)
    5bd8:	18c00054 	ori	r3,r3,1
    5bdc:	88c00115 	stw	r3,4(r17)
    5be0:	9009883a 	mov	r4,r18
    5be4:	000e0980 	call	e098 <__malloc_unlock>
    5be8:	80800204 	addi	r2,r16,8
    5bec:	003f4506 	br	5904 <_malloc_r+0xa4>
    5bf0:	81000317 	ldw	r4,12(r16)
    5bf4:	003f3906 	br	58dc <_malloc_r+0x7c>
    5bf8:	14000317 	ldw	r16,12(r2)
    5bfc:	143f331e 	bne	r2,r16,58cc <_malloc_r+0x6c>
    5c00:	39c00084 	addi	r7,r7,2
    5c04:	003f6b06 	br	59b4 <_malloc_r+0x154>
    5c08:	1006d27a 	srli	r3,r2,9
    5c0c:	19000168 	cmpgeui	r4,r3,5
    5c10:	20005026 	beq	r4,zero,5d54 <_malloc_r+0x4f4>
    5c14:	19000568 	cmpgeui	r4,r3,21
    5c18:	2000c01e 	bne	r4,zero,5f1c <_malloc_r+0x6bc>
    5c1c:	19801704 	addi	r6,r3,92
    5c20:	300c90fa 	slli	r6,r6,3
    5c24:	190016c4 	addi	r4,r3,91
    5c28:	998d883a 	add	r6,r19,r6
    5c2c:	30c00017 	ldw	r3,0(r6)
    5c30:	31bffe04 	addi	r6,r6,-8
    5c34:	30c0a926 	beq	r6,r3,5edc <_malloc_r+0x67c>
    5c38:	023fff04 	movi	r8,-4
    5c3c:	00000206 	br	5c48 <_malloc_r+0x3e8>
    5c40:	18c00217 	ldw	r3,8(r3)
    5c44:	30c00326 	beq	r6,r3,5c54 <_malloc_r+0x3f4>
    5c48:	19000117 	ldw	r4,4(r3)
    5c4c:	2208703a 	and	r4,r4,r8
    5c50:	113ffb36 	bltu	r2,r4,5c40 <_malloc_r+0x3e0>
    5c54:	19800317 	ldw	r6,12(r3)
    5c58:	81800315 	stw	r6,12(r16)
    5c5c:	80c00215 	stw	r3,8(r16)
    5c60:	34000215 	stw	r16,8(r6)
    5c64:	1c000315 	stw	r16,12(r3)
    5c68:	003f7106 	br	5a30 <_malloc_r+0x1d0>
    5c6c:	10c00568 	cmpgeui	r3,r2,21
    5c70:	18004926 	beq	r3,zero,5d98 <_malloc_r+0x538>
    5c74:	10c01568 	cmpgeui	r3,r2,85
    5c78:	1800af1e 	bne	r3,zero,5f38 <_malloc_r+0x6d8>
    5c7c:	8804d33a 	srli	r2,r17,12
    5c80:	11c01bc4 	addi	r7,r2,111
    5c84:	380890fa 	slli	r4,r7,3
    5c88:	12001b84 	addi	r8,r2,110
    5c8c:	003f3806 	br	5970 <_malloc_r+0x110>
    5c90:	63000044 	addi	r12,r12,1
    5c94:	608000cc 	andi	r2,r12,3
    5c98:	42000204 	addi	r8,r8,8
    5c9c:	103f791e 	bne	r2,zero,5a84 <_malloc_r+0x224>
    5ca0:	00004406 	br	5db4 <_malloc_r+0x554>
    5ca4:	81000217 	ldw	r4,8(r16)
    5ca8:	89800054 	ori	r6,r17,1
    5cac:	81800115 	stw	r6,4(r16)
    5cb0:	20800315 	stw	r2,12(r4)
    5cb4:	11000215 	stw	r4,8(r2)
    5cb8:	8463883a 	add	r17,r16,r17
    5cbc:	9c400515 	stw	r17,20(r19)
    5cc0:	9c400415 	stw	r17,16(r19)
    5cc4:	28800054 	ori	r2,r5,1
    5cc8:	88800115 	stw	r2,4(r17)
    5ccc:	8a400315 	stw	r9,12(r17)
    5cd0:	8a400215 	stw	r9,8(r17)
    5cd4:	80c7883a 	add	r3,r16,r3
    5cd8:	19400015 	stw	r5,0(r3)
    5cdc:	9009883a 	mov	r4,r18
    5ce0:	000e0980 	call	e098 <__malloc_unlock>
    5ce4:	80800204 	addi	r2,r16,8
    5ce8:	003f0606 	br	5904 <_malloc_r+0xa4>
    5cec:	8085883a 	add	r2,r16,r2
    5cf0:	10c00117 	ldw	r3,4(r2)
    5cf4:	9009883a 	mov	r4,r18
    5cf8:	18c00054 	ori	r3,r3,1
    5cfc:	10c00115 	stw	r3,4(r2)
    5d00:	000e0980 	call	e098 <__malloc_unlock>
    5d04:	80800204 	addi	r2,r16,8
    5d08:	003efe06 	br	5904 <_malloc_r+0xa4>
    5d0c:	880ed0fa 	srli	r7,r17,3
    5d10:	88800204 	addi	r2,r17,8
    5d14:	003ee706 	br	58b4 <_malloc_r+0x54>
    5d18:	89000054 	ori	r4,r17,1
    5d1c:	81000115 	stw	r4,4(r16)
    5d20:	8463883a 	add	r17,r16,r17
    5d24:	9c400515 	stw	r17,20(r19)
    5d28:	9c400415 	stw	r17,16(r19)
    5d2c:	19000054 	ori	r4,r3,1
    5d30:	89000115 	stw	r4,4(r17)
    5d34:	8085883a 	add	r2,r16,r2
    5d38:	8a400315 	stw	r9,12(r17)
    5d3c:	8a400215 	stw	r9,8(r17)
    5d40:	10c00015 	stw	r3,0(r2)
    5d44:	9009883a 	mov	r4,r18
    5d48:	000e0980 	call	e098 <__malloc_unlock>
    5d4c:	80800204 	addi	r2,r16,8
    5d50:	003eec06 	br	5904 <_malloc_r+0xa4>
    5d54:	1006d1ba 	srli	r3,r2,6
    5d58:	19800e44 	addi	r6,r3,57
    5d5c:	300c90fa 	slli	r6,r6,3
    5d60:	19000e04 	addi	r4,r3,56
    5d64:	003fb006 	br	5c28 <_malloc_r+0x3c8>
    5d68:	84c02426 	beq	r16,r19,5dfc <_malloc_r+0x59c>
    5d6c:	9c000217 	ldw	r16,8(r19)
    5d70:	80c00117 	ldw	r3,4(r16)
    5d74:	00bfff04 	movi	r2,-4
    5d78:	1884703a 	and	r2,r3,r2
    5d7c:	1447c83a 	sub	r3,r2,r17
    5d80:	14400236 	bltu	r2,r17,5d8c <_malloc_r+0x52c>
    5d84:	18800408 	cmpgei	r2,r3,16
    5d88:	103f8f1e 	bne	r2,zero,5bc8 <_malloc_r+0x368>
    5d8c:	9009883a 	mov	r4,r18
    5d90:	000e0980 	call	e098 <__malloc_unlock>
    5d94:	003f5206 	br	5ae0 <_malloc_r+0x280>
    5d98:	11c01704 	addi	r7,r2,92
    5d9c:	380890fa 	slli	r4,r7,3
    5da0:	120016c4 	addi	r8,r2,91
    5da4:	003ef206 	br	5970 <_malloc_r+0x110>
    5da8:	58800217 	ldw	r2,8(r11)
    5dac:	39ffffc4 	addi	r7,r7,-1
    5db0:	12c0961e 	bne	r2,r11,600c <_malloc_r+0x7ac>
    5db4:	388000cc 	andi	r2,r7,3
    5db8:	5afffe04 	addi	r11,r11,-8
    5dbc:	103ffa1e 	bne	r2,zero,5da8 <_malloc_r+0x548>
    5dc0:	98c00117 	ldw	r3,4(r19)
    5dc4:	0104303a 	nor	r2,zero,r4
    5dc8:	10c4703a 	and	r2,r2,r3
    5dcc:	98800115 	stw	r2,4(r19)
    5dd0:	2109883a 	add	r4,r4,r4
    5dd4:	113f4836 	bltu	r2,r4,5af8 <_malloc_r+0x298>
    5dd8:	203f4726 	beq	r4,zero,5af8 <_malloc_r+0x298>
    5ddc:	2086703a 	and	r3,r4,r2
    5de0:	1800041e 	bne	r3,zero,5df4 <_malloc_r+0x594>
    5de4:	2109883a 	add	r4,r4,r4
    5de8:	2086703a 	and	r3,r4,r2
    5dec:	63000104 	addi	r12,r12,4
    5df0:	183ffc26 	beq	r3,zero,5de4 <_malloc_r+0x584>
    5df4:	600f883a 	mov	r7,r12
    5df8:	003f1e06 	br	5a74 <_malloc_r+0x214>
    5dfc:	00800074 	movhi	r2,1
    5e00:	10d0f617 	ldw	r3,17368(r2)
    5e04:	a0c7883a 	add	r3,r20,r3
    5e08:	10d0f615 	stw	r3,17368(r2)
    5e0c:	00800074 	movhi	r2,1
    5e10:	1089e717 	ldw	r2,10140(r2)
    5e14:	10bfffd8 	cmpnei	r2,r2,-1
    5e18:	10004e26 	beq	r2,zero,5f54 <_malloc_r+0x6f4>
    5e1c:	b5c5c83a 	sub	r2,r22,r23
    5e20:	10c5883a 	add	r2,r2,r3
    5e24:	00c00074 	movhi	r3,1
    5e28:	1890f615 	stw	r2,17368(r3)
    5e2c:	b70001cc 	andi	fp,r22,7
    5e30:	e0003026 	beq	fp,zero,5ef4 <_malloc_r+0x694>
    5e34:	b72dc83a 	sub	r22,r22,fp
    5e38:	b5800204 	addi	r22,r22,8
    5e3c:	01040204 	movi	r4,4104
    5e40:	2709c83a 	sub	r4,r4,fp
    5e44:	b529883a 	add	r20,r22,r20
    5e48:	2509c83a 	sub	r4,r4,r20
    5e4c:	25c3ffcc 	andi	r23,r4,4095
    5e50:	b80b883a 	mov	r5,r23
    5e54:	9009883a 	mov	r4,r18
    5e58:	0007c500 	call	7c50 <_sbrk_r>
    5e5c:	10ffffe0 	cmpeqi	r3,r2,-1
    5e60:	1800501e 	bne	r3,zero,5fa4 <_malloc_r+0x744>
    5e64:	1585c83a 	sub	r2,r2,r22
    5e68:	15e9883a 	add	r20,r2,r23
    5e6c:	00800074 	movhi	r2,1
    5e70:	1090f617 	ldw	r2,17368(r2)
    5e74:	9d800215 	stw	r22,8(r19)
    5e78:	a0c00054 	ori	r3,r20,1
    5e7c:	b889883a 	add	r4,r23,r2
    5e80:	00800074 	movhi	r2,1
    5e84:	1110f615 	stw	r4,17368(r2)
    5e88:	b0c00115 	stw	r3,4(r22)
    5e8c:	84ff4026 	beq	r16,r19,5b90 <_malloc_r+0x330>
    5e90:	a8800428 	cmpgeui	r2,r21,16
    5e94:	10003226 	beq	r2,zero,5f60 <_malloc_r+0x700>
    5e98:	80800117 	ldw	r2,4(r16)
    5e9c:	017ffe04 	movi	r5,-8
    5ea0:	a8fffd04 	addi	r3,r21,-12
    5ea4:	1946703a 	and	r3,r3,r5
    5ea8:	1080004c 	andi	r2,r2,1
    5eac:	10c4b03a 	or	r2,r2,r3
    5eb0:	80800115 	stw	r2,4(r16)
    5eb4:	01400144 	movi	r5,5
    5eb8:	80c5883a 	add	r2,r16,r3
    5ebc:	11400115 	stw	r5,4(r2)
    5ec0:	11400215 	stw	r5,8(r2)
    5ec4:	18c00428 	cmpgeui	r3,r3,16
    5ec8:	18003b1e 	bne	r3,zero,5fb8 <_malloc_r+0x758>
    5ecc:	b0c00117 	ldw	r3,4(r22)
    5ed0:	003f2f06 	br	5b90 <_malloc_r+0x330>
    5ed4:	a5000404 	addi	r20,r20,16
    5ed8:	003f1a06 	br	5b44 <_malloc_r+0x2e4>
    5edc:	2009d0ba 	srai	r4,r4,2
    5ee0:	00800044 	movi	r2,1
    5ee4:	1104983a 	sll	r2,r2,r4
    5ee8:	288ab03a 	or	r5,r5,r2
    5eec:	99400115 	stw	r5,4(r19)
    5ef0:	003f5906 	br	5c58 <_malloc_r+0x3f8>
    5ef4:	b509883a 	add	r4,r22,r20
    5ef8:	0109c83a 	sub	r4,zero,r4
    5efc:	25c3ffcc 	andi	r23,r4,4095
    5f00:	b80b883a 	mov	r5,r23
    5f04:	9009883a 	mov	r4,r18
    5f08:	0007c500 	call	7c50 <_sbrk_r>
    5f0c:	10ffffe0 	cmpeqi	r3,r2,-1
    5f10:	183fd426 	beq	r3,zero,5e64 <_malloc_r+0x604>
    5f14:	002f883a 	mov	r23,zero
    5f18:	003fd406 	br	5e6c <_malloc_r+0x60c>
    5f1c:	19001568 	cmpgeui	r4,r3,85
    5f20:	2000121e 	bne	r4,zero,5f6c <_malloc_r+0x70c>
    5f24:	1006d33a 	srli	r3,r2,12
    5f28:	19801bc4 	addi	r6,r3,111
    5f2c:	300c90fa 	slli	r6,r6,3
    5f30:	19001b84 	addi	r4,r3,110
    5f34:	003f3c06 	br	5c28 <_malloc_r+0x3c8>
    5f38:	10c05568 	cmpgeui	r3,r2,341
    5f3c:	1800121e 	bne	r3,zero,5f88 <_malloc_r+0x728>
    5f40:	8804d3fa 	srli	r2,r17,15
    5f44:	11c01e04 	addi	r7,r2,120
    5f48:	380890fa 	slli	r4,r7,3
    5f4c:	12001dc4 	addi	r8,r2,119
    5f50:	003e8706 	br	5970 <_malloc_r+0x110>
    5f54:	00800074 	movhi	r2,1
    5f58:	1589e715 	stw	r22,10140(r2)
    5f5c:	003fb306 	br	5e2c <_malloc_r+0x5cc>
    5f60:	00800044 	movi	r2,1
    5f64:	b0800115 	stw	r2,4(r22)
    5f68:	003f8806 	br	5d8c <_malloc_r+0x52c>
    5f6c:	19005568 	cmpgeui	r4,r3,341
    5f70:	2000181e 	bne	r4,zero,5fd4 <_malloc_r+0x774>
    5f74:	1006d3fa 	srli	r3,r2,15
    5f78:	19801e04 	addi	r6,r3,120
    5f7c:	300c90fa 	slli	r6,r6,3
    5f80:	19001dc4 	addi	r4,r3,119
    5f84:	003f2806 	br	5c28 <_malloc_r+0x3c8>
    5f88:	10815568 	cmpgeui	r2,r2,1365
    5f8c:	1000181e 	bne	r2,zero,5ff0 <_malloc_r+0x790>
    5f90:	8804d4ba 	srli	r2,r17,18
    5f94:	11c01f44 	addi	r7,r2,125
    5f98:	380890fa 	slli	r4,r7,3
    5f9c:	12001f04 	addi	r8,r2,124
    5fa0:	003e7306 	br	5970 <_malloc_r+0x110>
    5fa4:	e73ffe04 	addi	fp,fp,-8
    5fa8:	a729883a 	add	r20,r20,fp
    5fac:	a5a9c83a 	sub	r20,r20,r22
    5fb0:	002f883a 	mov	r23,zero
    5fb4:	003fad06 	br	5e6c <_malloc_r+0x60c>
    5fb8:	9009883a 	mov	r4,r18
    5fbc:	81400204 	addi	r5,r16,8
    5fc0:	0004d240 	call	4d24 <_free_r>
    5fc4:	00800074 	movhi	r2,1
    5fc8:	9d800217 	ldw	r22,8(r19)
    5fcc:	1110f617 	ldw	r4,17368(r2)
    5fd0:	003fbe06 	br	5ecc <_malloc_r+0x66c>
    5fd4:	18c15568 	cmpgeui	r3,r3,1365
    5fd8:	1800091e 	bne	r3,zero,6000 <_malloc_r+0x7a0>
    5fdc:	1006d4ba 	srli	r3,r2,18
    5fe0:	19801f44 	addi	r6,r3,125
    5fe4:	300c90fa 	slli	r6,r6,3
    5fe8:	19001f04 	addi	r4,r3,124
    5fec:	003f0e06 	br	5c28 <_malloc_r+0x3c8>
    5ff0:	0100fe04 	movi	r4,1016
    5ff4:	01c01fc4 	movi	r7,127
    5ff8:	02001f84 	movi	r8,126
    5ffc:	003e5c06 	br	5970 <_malloc_r+0x110>
    6000:	0180fe04 	movi	r6,1016
    6004:	01001f84 	movi	r4,126
    6008:	003f0706 	br	5c28 <_malloc_r+0x3c8>
    600c:	98800117 	ldw	r2,4(r19)
    6010:	003f6f06 	br	5dd0 <_malloc_r+0x570>

00006014 <memchr>:
    6014:	defffc04 	addi	sp,sp,-16
    6018:	dc000015 	stw	r16,0(sp)
    601c:	2021883a 	mov	r16,r4
    6020:	dc800215 	stw	r18,8(sp)
    6024:	dfc00315 	stw	ra,12(sp)
    6028:	dc400115 	stw	r17,4(sp)
    602c:	808000cc 	andi	r2,r16,3
    6030:	2809883a 	mov	r4,r5
    6034:	2825883a 	mov	r18,r5
    6038:	10000e26 	beq	r2,zero,6074 <memchr+0x60>
    603c:	347fffc4 	addi	r17,r6,-1
    6040:	30001726 	beq	r6,zero,60a0 <memchr+0x8c>
    6044:	28c03fcc 	andi	r3,r5,255
    6048:	00000606 	br	6064 <memchr+0x50>
    604c:	84000044 	addi	r16,r16,1
    6050:	808000cc 	andi	r2,r16,3
    6054:	10000826 	beq	r2,zero,6078 <memchr+0x64>
    6058:	8c7fffc4 	addi	r17,r17,-1
    605c:	88bfffe0 	cmpeqi	r2,r17,-1
    6060:	10000f1e 	bne	r2,zero,60a0 <memchr+0x8c>
    6064:	80800003 	ldbu	r2,0(r16)
    6068:	10fff81e 	bne	r2,r3,604c <memchr+0x38>
    606c:	8005883a 	mov	r2,r16
    6070:	00000c06 	br	60a4 <memchr+0x90>
    6074:	3023883a 	mov	r17,r6
    6078:	88800130 	cmpltui	r2,r17,4
    607c:	10000f26 	beq	r2,zero,60bc <memchr+0xa8>
    6080:	88000726 	beq	r17,zero,60a0 <memchr+0x8c>
    6084:	8463883a 	add	r17,r16,r17
    6088:	8005883a 	mov	r2,r16
    608c:	90c03fcc 	andi	r3,r18,255
    6090:	11000003 	ldbu	r4,0(r2)
    6094:	20c00326 	beq	r4,r3,60a4 <memchr+0x90>
    6098:	10800044 	addi	r2,r2,1
    609c:	88bffc1e 	bne	r17,r2,6090 <memchr+0x7c>
    60a0:	0005883a 	mov	r2,zero
    60a4:	dfc00317 	ldw	ra,12(sp)
    60a8:	dc800217 	ldw	r18,8(sp)
    60ac:	dc400117 	ldw	r17,4(sp)
    60b0:	dc000017 	ldw	r16,0(sp)
    60b4:	dec00404 	addi	sp,sp,16
    60b8:	f800283a 	ret
    60bc:	01404074 	movhi	r5,257
    60c0:	29404044 	addi	r5,r5,257
    60c4:	21003fcc 	andi	r4,r4,255
    60c8:	000b0900 	call	b090 <__mulsi3>
    60cc:	01bfbff4 	movhi	r6,65279
    60d0:	01602074 	movhi	r5,32897
    60d4:	31bfbfc4 	addi	r6,r6,-257
    60d8:	29602004 	addi	r5,r5,-32640
    60dc:	00000406 	br	60f0 <memchr+0xdc>
    60e0:	8c7fff04 	addi	r17,r17,-4
    60e4:	88c00128 	cmpgeui	r3,r17,4
    60e8:	84000104 	addi	r16,r16,4
    60ec:	183fe426 	beq	r3,zero,6080 <memchr+0x6c>
    60f0:	80c00017 	ldw	r3,0(r16)
    60f4:	10c6f03a 	xor	r3,r2,r3
    60f8:	1989883a 	add	r4,r3,r6
    60fc:	00c6303a 	nor	r3,zero,r3
    6100:	20c6703a 	and	r3,r4,r3
    6104:	1946703a 	and	r3,r3,r5
    6108:	183ff526 	beq	r3,zero,60e0 <memchr+0xcc>
    610c:	003fdc06 	br	6080 <memchr+0x6c>

00006110 <memcpy>:
    6110:	30c00428 	cmpgeui	r3,r6,16
    6114:	2005883a 	mov	r2,r4
    6118:	18000b1e 	bne	r3,zero,6148 <memcpy+0x38>
    611c:	2007883a 	mov	r3,r4
    6120:	31ffffc4 	addi	r7,r6,-1
    6124:	30003426 	beq	r6,zero,61f8 <memcpy+0xe8>
    6128:	39c00044 	addi	r7,r7,1
    612c:	19cf883a 	add	r7,r3,r7
    6130:	29800003 	ldbu	r6,0(r5)
    6134:	18c00044 	addi	r3,r3,1
    6138:	29400044 	addi	r5,r5,1
    613c:	19bfffc5 	stb	r6,-1(r3)
    6140:	19fffb1e 	bne	r3,r7,6130 <memcpy+0x20>
    6144:	f800283a 	ret
    6148:	2146b03a 	or	r3,r4,r5
    614c:	18c000cc 	andi	r3,r3,3
    6150:	18002a1e 	bne	r3,zero,61fc <memcpy+0xec>
    6154:	333ffc04 	addi	r12,r6,-16
    6158:	6018d13a 	srli	r12,r12,4
    615c:	2811883a 	mov	r8,r5
    6160:	200f883a 	mov	r7,r4
    6164:	63000044 	addi	r12,r12,1
    6168:	6018913a 	slli	r12,r12,4
    616c:	2307883a 	add	r3,r4,r12
    6170:	42c00017 	ldw	r11,0(r8)
    6174:	42800117 	ldw	r10,4(r8)
    6178:	42400217 	ldw	r9,8(r8)
    617c:	41000317 	ldw	r4,12(r8)
    6180:	39c00404 	addi	r7,r7,16
    6184:	3afffc15 	stw	r11,-16(r7)
    6188:	3abffd15 	stw	r10,-12(r7)
    618c:	3a7ffe15 	stw	r9,-8(r7)
    6190:	393fff15 	stw	r4,-4(r7)
    6194:	42000404 	addi	r8,r8,16
    6198:	38fff51e 	bne	r7,r3,6170 <memcpy+0x60>
    619c:	3100030c 	andi	r4,r6,12
    61a0:	2b0b883a 	add	r5,r5,r12
    61a4:	324003cc 	andi	r9,r6,15
    61a8:	20001726 	beq	r4,zero,6208 <memcpy+0xf8>
    61ac:	2811883a 	mov	r8,r5
    61b0:	1809883a 	mov	r4,r3
    61b4:	1a57883a 	add	r11,r3,r9
    61b8:	42800017 	ldw	r10,0(r8)
    61bc:	21000104 	addi	r4,r4,4
    61c0:	590fc83a 	sub	r7,r11,r4
    61c4:	39c00128 	cmpgeui	r7,r7,4
    61c8:	22bfff15 	stw	r10,-4(r4)
    61cc:	42000104 	addi	r8,r8,4
    61d0:	383ff91e 	bne	r7,zero,61b8 <memcpy+0xa8>
    61d4:	493fff04 	addi	r4,r9,-4
    61d8:	2008d0ba 	srli	r4,r4,2
    61dc:	318000cc 	andi	r6,r6,3
    61e0:	31ffffc4 	addi	r7,r6,-1
    61e4:	21000044 	addi	r4,r4,1
    61e8:	200890ba 	slli	r4,r4,2
    61ec:	1907883a 	add	r3,r3,r4
    61f0:	290b883a 	add	r5,r5,r4
    61f4:	303fcc1e 	bne	r6,zero,6128 <memcpy+0x18>
    61f8:	f800283a 	ret
    61fc:	31ffffc4 	addi	r7,r6,-1
    6200:	2007883a 	mov	r3,r4
    6204:	003fc806 	br	6128 <memcpy+0x18>
    6208:	480d883a 	mov	r6,r9
    620c:	003fc406 	br	6120 <memcpy+0x10>

00006210 <memmove>:
    6210:	2005883a 	mov	r2,r4
    6214:	29000a2e 	bgeu	r5,r4,6240 <memmove+0x30>
    6218:	298f883a 	add	r7,r5,r6
    621c:	21c0082e 	bgeu	r4,r7,6240 <memmove+0x30>
    6220:	2187883a 	add	r3,r4,r6
    6224:	30001226 	beq	r6,zero,6270 <memmove+0x60>
    6228:	397fffc3 	ldbu	r5,-1(r7)
    622c:	18ffffc4 	addi	r3,r3,-1
    6230:	39ffffc4 	addi	r7,r7,-1
    6234:	19400005 	stb	r5,0(r3)
    6238:	10fffb1e 	bne	r2,r3,6228 <memmove+0x18>
    623c:	f800283a 	ret
    6240:	30c00428 	cmpgeui	r3,r6,16
    6244:	18000b1e 	bne	r3,zero,6274 <memmove+0x64>
    6248:	1007883a 	mov	r3,r2
    624c:	31ffffc4 	addi	r7,r6,-1
    6250:	30003626 	beq	r6,zero,632c <memmove+0x11c>
    6254:	39c00044 	addi	r7,r7,1
    6258:	19cf883a 	add	r7,r3,r7
    625c:	29800003 	ldbu	r6,0(r5)
    6260:	18c00044 	addi	r3,r3,1
    6264:	29400044 	addi	r5,r5,1
    6268:	19bfffc5 	stb	r6,-1(r3)
    626c:	19fffb1e 	bne	r3,r7,625c <memmove+0x4c>
    6270:	f800283a 	ret
    6274:	1146b03a 	or	r3,r2,r5
    6278:	18c000cc 	andi	r3,r3,3
    627c:	1800281e 	bne	r3,zero,6320 <memmove+0x110>
    6280:	313ffc04 	addi	r4,r6,-16
    6284:	2008d13a 	srli	r4,r4,4
    6288:	2811883a 	mov	r8,r5
    628c:	100f883a 	mov	r7,r2
    6290:	21000044 	addi	r4,r4,1
    6294:	2008913a 	slli	r4,r4,4
    6298:	1107883a 	add	r3,r2,r4
    629c:	42400017 	ldw	r9,0(r8)
    62a0:	42000404 	addi	r8,r8,16
    62a4:	39c00404 	addi	r7,r7,16
    62a8:	3a7ffc15 	stw	r9,-16(r7)
    62ac:	427ffd17 	ldw	r9,-12(r8)
    62b0:	3a7ffd15 	stw	r9,-12(r7)
    62b4:	427ffe17 	ldw	r9,-8(r8)
    62b8:	3a7ffe15 	stw	r9,-8(r7)
    62bc:	427fff17 	ldw	r9,-4(r8)
    62c0:	3a7fff15 	stw	r9,-4(r7)
    62c4:	38fff51e 	bne	r7,r3,629c <memmove+0x8c>
    62c8:	31c0030c 	andi	r7,r6,12
    62cc:	290b883a 	add	r5,r5,r4
    62d0:	324003cc 	andi	r9,r6,15
    62d4:	38001626 	beq	r7,zero,6330 <memmove+0x120>
    62d8:	2809883a 	mov	r4,r5
    62dc:	180f883a 	mov	r7,r3
    62e0:	1a57883a 	add	r11,r3,r9
    62e4:	22800017 	ldw	r10,0(r4)
    62e8:	39c00104 	addi	r7,r7,4
    62ec:	59d1c83a 	sub	r8,r11,r7
    62f0:	42000128 	cmpgeui	r8,r8,4
    62f4:	3abfff15 	stw	r10,-4(r7)
    62f8:	21000104 	addi	r4,r4,4
    62fc:	403ff91e 	bne	r8,zero,62e4 <memmove+0xd4>
    6300:	493fff04 	addi	r4,r9,-4
    6304:	2008d0ba 	srli	r4,r4,2
    6308:	318000cc 	andi	r6,r6,3
    630c:	21000044 	addi	r4,r4,1
    6310:	200890ba 	slli	r4,r4,2
    6314:	1907883a 	add	r3,r3,r4
    6318:	290b883a 	add	r5,r5,r4
    631c:	003fcb06 	br	624c <memmove+0x3c>
    6320:	31ffffc4 	addi	r7,r6,-1
    6324:	1007883a 	mov	r3,r2
    6328:	003fca06 	br	6254 <memmove+0x44>
    632c:	f800283a 	ret
    6330:	480d883a 	mov	r6,r9
    6334:	003fc506 	br	624c <memmove+0x3c>

00006338 <memset>:
    6338:	defffb04 	addi	sp,sp,-20
    633c:	dc800215 	stw	r18,8(sp)
    6340:	dc400115 	stw	r17,4(sp)
    6344:	dfc00415 	stw	ra,16(sp)
    6348:	dcc00315 	stw	r19,12(sp)
    634c:	dc000015 	stw	r16,0(sp)
    6350:	208000cc 	andi	r2,r4,3
    6354:	2023883a 	mov	r17,r4
    6358:	2825883a 	mov	r18,r5
    635c:	10004026 	beq	r2,zero,6460 <memset+0x128>
    6360:	34ffffc4 	addi	r19,r6,-1
    6364:	30003326 	beq	r6,zero,6434 <memset+0xfc>
    6368:	280f883a 	mov	r7,r5
    636c:	2021883a 	mov	r16,r4
    6370:	00000306 	br	6380 <memset+0x48>
    6374:	9cffffc4 	addi	r19,r19,-1
    6378:	99bfffe0 	cmpeqi	r6,r19,-1
    637c:	30002d1e 	bne	r6,zero,6434 <memset+0xfc>
    6380:	84000044 	addi	r16,r16,1
    6384:	818000cc 	andi	r6,r16,3
    6388:	81ffffc5 	stb	r7,-1(r16)
    638c:	303ff91e 	bne	r6,zero,6374 <memset+0x3c>
    6390:	98800128 	cmpgeui	r2,r19,4
    6394:	10002126 	beq	r2,zero,641c <memset+0xe4>
    6398:	01404074 	movhi	r5,257
    639c:	29404044 	addi	r5,r5,257
    63a0:	91003fcc 	andi	r4,r18,255
    63a4:	000b0900 	call	b090 <__mulsi3>
    63a8:	98c00430 	cmpltui	r3,r19,16
    63ac:	18002f1e 	bne	r3,zero,646c <memset+0x134>
    63b0:	99bffc04 	addi	r6,r19,-16
    63b4:	300cd13a 	srli	r6,r6,4
    63b8:	31800044 	addi	r6,r6,1
    63bc:	300c913a 	slli	r6,r6,4
    63c0:	818d883a 	add	r6,r16,r6
    63c4:	80800015 	stw	r2,0(r16)
    63c8:	80800115 	stw	r2,4(r16)
    63cc:	80800215 	stw	r2,8(r16)
    63d0:	80800315 	stw	r2,12(r16)
    63d4:	84000404 	addi	r16,r16,16
    63d8:	81bffa1e 	bne	r16,r6,63c4 <memset+0x8c>
    63dc:	9900030c 	andi	r4,r19,12
    63e0:	98c003cc 	andi	r3,r19,15
    63e4:	20001b26 	beq	r4,zero,6454 <memset+0x11c>
    63e8:	3009883a 	mov	r4,r6
    63ec:	30cb883a 	add	r5,r6,r3
    63f0:	21000104 	addi	r4,r4,4
    63f4:	290fc83a 	sub	r7,r5,r4
    63f8:	39c00128 	cmpgeui	r7,r7,4
    63fc:	20bfff15 	stw	r2,-4(r4)
    6400:	383ffb1e 	bne	r7,zero,63f0 <memset+0xb8>
    6404:	1c3fff04 	addi	r16,r3,-4
    6408:	8020d0ba 	srli	r16,r16,2
    640c:	1cc000cc 	andi	r19,r3,3
    6410:	84000044 	addi	r16,r16,1
    6414:	802090ba 	slli	r16,r16,2
    6418:	3421883a 	add	r16,r6,r16
    641c:	98000526 	beq	r19,zero,6434 <memset+0xfc>
    6420:	900b883a 	mov	r5,r18
    6424:	84c7883a 	add	r3,r16,r19
    6428:	84000044 	addi	r16,r16,1
    642c:	817fffc5 	stb	r5,-1(r16)
    6430:	1c3ffd1e 	bne	r3,r16,6428 <memset+0xf0>
    6434:	8805883a 	mov	r2,r17
    6438:	dfc00417 	ldw	ra,16(sp)
    643c:	dcc00317 	ldw	r19,12(sp)
    6440:	dc800217 	ldw	r18,8(sp)
    6444:	dc400117 	ldw	r17,4(sp)
    6448:	dc000017 	ldw	r16,0(sp)
    644c:	dec00504 	addi	sp,sp,20
    6450:	f800283a 	ret
    6454:	1827883a 	mov	r19,r3
    6458:	983ff11e 	bne	r19,zero,6420 <memset+0xe8>
    645c:	003ff506 	br	6434 <memset+0xfc>
    6460:	2021883a 	mov	r16,r4
    6464:	3027883a 	mov	r19,r6
    6468:	003fc906 	br	6390 <memset+0x58>
    646c:	800d883a 	mov	r6,r16
    6470:	9807883a 	mov	r3,r19
    6474:	003fdc06 	br	63e8 <memset+0xb0>

00006478 <_Balloc>:
    6478:	20801317 	ldw	r2,76(r4)
    647c:	defffc04 	addi	sp,sp,-16
    6480:	dc400115 	stw	r17,4(sp)
    6484:	dc000015 	stw	r16,0(sp)
    6488:	dfc00315 	stw	ra,12(sp)
    648c:	dc800215 	stw	r18,8(sp)
    6490:	2021883a 	mov	r16,r4
    6494:	2823883a 	mov	r17,r5
    6498:	10000e26 	beq	r2,zero,64d4 <_Balloc+0x5c>
    649c:	880690ba 	slli	r3,r17,2
    64a0:	10c7883a 	add	r3,r2,r3
    64a4:	18800017 	ldw	r2,0(r3)
    64a8:	10001126 	beq	r2,zero,64f0 <_Balloc+0x78>
    64ac:	11000017 	ldw	r4,0(r2)
    64b0:	19000015 	stw	r4,0(r3)
    64b4:	10000415 	stw	zero,16(r2)
    64b8:	10000315 	stw	zero,12(r2)
    64bc:	dfc00317 	ldw	ra,12(sp)
    64c0:	dc800217 	ldw	r18,8(sp)
    64c4:	dc400117 	ldw	r17,4(sp)
    64c8:	dc000017 	ldw	r16,0(sp)
    64cc:	dec00404 	addi	sp,sp,16
    64d0:	f800283a 	ret
    64d4:	01800844 	movi	r6,33
    64d8:	01400104 	movi	r5,4
    64dc:	00093880 	call	9388 <_calloc_r>
    64e0:	80801315 	stw	r2,76(r16)
    64e4:	103fed1e 	bne	r2,zero,649c <_Balloc+0x24>
    64e8:	0005883a 	mov	r2,zero
    64ec:	003ff306 	br	64bc <_Balloc+0x44>
    64f0:	04800044 	movi	r18,1
    64f4:	9464983a 	sll	r18,r18,r17
    64f8:	01400044 	movi	r5,1
    64fc:	8009883a 	mov	r4,r16
    6500:	91800144 	addi	r6,r18,5
    6504:	300c90ba 	slli	r6,r6,2
    6508:	00093880 	call	9388 <_calloc_r>
    650c:	103ff626 	beq	r2,zero,64e8 <_Balloc+0x70>
    6510:	14400115 	stw	r17,4(r2)
    6514:	14800215 	stw	r18,8(r2)
    6518:	003fe606 	br	64b4 <_Balloc+0x3c>

0000651c <_Bfree>:
    651c:	28000726 	beq	r5,zero,653c <_Bfree+0x20>
    6520:	28c00117 	ldw	r3,4(r5)
    6524:	20801317 	ldw	r2,76(r4)
    6528:	180690ba 	slli	r3,r3,2
    652c:	10c5883a 	add	r2,r2,r3
    6530:	10c00017 	ldw	r3,0(r2)
    6534:	28c00015 	stw	r3,0(r5)
    6538:	11400015 	stw	r5,0(r2)
    653c:	f800283a 	ret

00006540 <__multadd>:
    6540:	defff704 	addi	sp,sp,-36
    6544:	dcc00315 	stw	r19,12(sp)
    6548:	2cc00417 	ldw	r19,16(r5)
    654c:	ddc00715 	stw	r23,28(sp)
    6550:	dd800615 	stw	r22,24(sp)
    6554:	dd400515 	stw	r21,20(sp)
    6558:	dd000415 	stw	r20,16(sp)
    655c:	dc800215 	stw	r18,8(sp)
    6560:	dc400115 	stw	r17,4(sp)
    6564:	dfc00815 	stw	ra,32(sp)
    6568:	dc000015 	stw	r16,0(sp)
    656c:	2829883a 	mov	r20,r5
    6570:	202b883a 	mov	r21,r4
    6574:	3025883a 	mov	r18,r6
    6578:	3823883a 	mov	r17,r7
    657c:	2d800504 	addi	r22,r5,20
    6580:	002f883a 	mov	r23,zero
    6584:	b4000017 	ldw	r16,0(r22)
    6588:	900b883a 	mov	r5,r18
    658c:	b5800104 	addi	r22,r22,4
    6590:	813fffcc 	andi	r4,r16,65535
    6594:	000b0900 	call	b090 <__mulsi3>
    6598:	8008d43a 	srli	r4,r16,16
    659c:	900b883a 	mov	r5,r18
    65a0:	1461883a 	add	r16,r2,r17
    65a4:	000b0900 	call	b090 <__mulsi3>
    65a8:	8006d43a 	srli	r3,r16,16
    65ac:	843fffcc 	andi	r16,r16,65535
    65b0:	bdc00044 	addi	r23,r23,1
    65b4:	10c5883a 	add	r2,r2,r3
    65b8:	1006943a 	slli	r3,r2,16
    65bc:	1022d43a 	srli	r17,r2,16
    65c0:	1c05883a 	add	r2,r3,r16
    65c4:	b0bfff15 	stw	r2,-4(r22)
    65c8:	bcffee16 	blt	r23,r19,6584 <__multadd+0x44>
    65cc:	88000826 	beq	r17,zero,65f0 <__multadd+0xb0>
    65d0:	a0800217 	ldw	r2,8(r20)
    65d4:	9880120e 	bge	r19,r2,6620 <__multadd+0xe0>
    65d8:	98800144 	addi	r2,r19,5
    65dc:	100490ba 	slli	r2,r2,2
    65e0:	9cc00044 	addi	r19,r19,1
    65e4:	a085883a 	add	r2,r20,r2
    65e8:	14400015 	stw	r17,0(r2)
    65ec:	a4c00415 	stw	r19,16(r20)
    65f0:	a005883a 	mov	r2,r20
    65f4:	dfc00817 	ldw	ra,32(sp)
    65f8:	ddc00717 	ldw	r23,28(sp)
    65fc:	dd800617 	ldw	r22,24(sp)
    6600:	dd400517 	ldw	r21,20(sp)
    6604:	dd000417 	ldw	r20,16(sp)
    6608:	dcc00317 	ldw	r19,12(sp)
    660c:	dc800217 	ldw	r18,8(sp)
    6610:	dc400117 	ldw	r17,4(sp)
    6614:	dc000017 	ldw	r16,0(sp)
    6618:	dec00904 	addi	sp,sp,36
    661c:	f800283a 	ret
    6620:	a1400117 	ldw	r5,4(r20)
    6624:	a809883a 	mov	r4,r21
    6628:	29400044 	addi	r5,r5,1
    662c:	00064780 	call	6478 <_Balloc>
    6630:	1021883a 	mov	r16,r2
    6634:	10001026 	beq	r2,zero,6678 <__multadd+0x138>
    6638:	a1800417 	ldw	r6,16(r20)
    663c:	a1400304 	addi	r5,r20,12
    6640:	11000304 	addi	r4,r2,12
    6644:	31800084 	addi	r6,r6,2
    6648:	300c90ba 	slli	r6,r6,2
    664c:	00061100 	call	6110 <memcpy>
    6650:	a0000726 	beq	r20,zero,6670 <__multadd+0x130>
    6654:	a0c00117 	ldw	r3,4(r20)
    6658:	a8801317 	ldw	r2,76(r21)
    665c:	180690ba 	slli	r3,r3,2
    6660:	10c5883a 	add	r2,r2,r3
    6664:	10c00017 	ldw	r3,0(r2)
    6668:	a0c00015 	stw	r3,0(r20)
    666c:	15000015 	stw	r20,0(r2)
    6670:	8029883a 	mov	r20,r16
    6674:	003fd806 	br	65d8 <__multadd+0x98>
    6678:	01c00074 	movhi	r7,1
    667c:	01000074 	movhi	r4,1
    6680:	39c18504 	addi	r7,r7,1556
    6684:	000d883a 	mov	r6,zero
    6688:	01402d44 	movi	r5,181
    668c:	21019a04 	addi	r4,r4,1640
    6690:	00093100 	call	9310 <__assert_func>

00006694 <__s2b>:
    6694:	defff904 	addi	sp,sp,-28
    6698:	dc800215 	stw	r18,8(sp)
    669c:	dc000015 	stw	r16,0(sp)
    66a0:	2025883a 	mov	r18,r4
    66a4:	2821883a 	mov	r16,r5
    66a8:	39000204 	addi	r4,r7,8
    66ac:	01400244 	movi	r5,9
    66b0:	dcc00315 	stw	r19,12(sp)
    66b4:	dc400115 	stw	r17,4(sp)
    66b8:	dfc00615 	stw	ra,24(sp)
    66bc:	3823883a 	mov	r17,r7
    66c0:	dd400515 	stw	r21,20(sp)
    66c4:	dd000415 	stw	r20,16(sp)
    66c8:	3027883a 	mov	r19,r6
    66cc:	000aedc0 	call	aedc <__divsi3>
    66d0:	88c00290 	cmplti	r3,r17,10
    66d4:	1800341e 	bne	r3,zero,67a8 <__s2b+0x114>
    66d8:	00c00044 	movi	r3,1
    66dc:	000b883a 	mov	r5,zero
    66e0:	18c7883a 	add	r3,r3,r3
    66e4:	29400044 	addi	r5,r5,1
    66e8:	18bffd16 	blt	r3,r2,66e0 <__s2b+0x4c>
    66ec:	9009883a 	mov	r4,r18
    66f0:	00064780 	call	6478 <_Balloc>
    66f4:	100b883a 	mov	r5,r2
    66f8:	10002d26 	beq	r2,zero,67b0 <__s2b+0x11c>
    66fc:	d8800717 	ldw	r2,28(sp)
    6700:	28800515 	stw	r2,20(r5)
    6704:	00800044 	movi	r2,1
    6708:	28800415 	stw	r2,16(r5)
    670c:	98800290 	cmplti	r2,r19,10
    6710:	1000221e 	bne	r2,zero,679c <__s2b+0x108>
    6714:	85400244 	addi	r21,r16,9
    6718:	a829883a 	mov	r20,r21
    671c:	84e1883a 	add	r16,r16,r19
    6720:	a1c00007 	ldb	r7,0(r20)
    6724:	01800284 	movi	r6,10
    6728:	9009883a 	mov	r4,r18
    672c:	39fff404 	addi	r7,r7,-48
    6730:	00065400 	call	6540 <__multadd>
    6734:	a5000044 	addi	r20,r20,1
    6738:	100b883a 	mov	r5,r2
    673c:	a43ff81e 	bne	r20,r16,6720 <__s2b+0x8c>
    6740:	9c3ffe04 	addi	r16,r19,-8
    6744:	ac21883a 	add	r16,r21,r16
    6748:	9c400a0e 	bge	r19,r17,6774 <__s2b+0xe0>
    674c:	8ce3c83a 	sub	r17,r17,r19
    6750:	8463883a 	add	r17,r16,r17
    6754:	81c00007 	ldb	r7,0(r16)
    6758:	01800284 	movi	r6,10
    675c:	9009883a 	mov	r4,r18
    6760:	39fff404 	addi	r7,r7,-48
    6764:	00065400 	call	6540 <__multadd>
    6768:	84000044 	addi	r16,r16,1
    676c:	100b883a 	mov	r5,r2
    6770:	8c3ff81e 	bne	r17,r16,6754 <__s2b+0xc0>
    6774:	2805883a 	mov	r2,r5
    6778:	dfc00617 	ldw	ra,24(sp)
    677c:	dd400517 	ldw	r21,20(sp)
    6780:	dd000417 	ldw	r20,16(sp)
    6784:	dcc00317 	ldw	r19,12(sp)
    6788:	dc800217 	ldw	r18,8(sp)
    678c:	dc400117 	ldw	r17,4(sp)
    6790:	dc000017 	ldw	r16,0(sp)
    6794:	dec00704 	addi	sp,sp,28
    6798:	f800283a 	ret
    679c:	84000284 	addi	r16,r16,10
    67a0:	04c00244 	movi	r19,9
    67a4:	003fe806 	br	6748 <__s2b+0xb4>
    67a8:	000b883a 	mov	r5,zero
    67ac:	003fcf06 	br	66ec <__s2b+0x58>
    67b0:	01c00074 	movhi	r7,1
    67b4:	01000074 	movhi	r4,1
    67b8:	39c18504 	addi	r7,r7,1556
    67bc:	000d883a 	mov	r6,zero
    67c0:	01403384 	movi	r5,206
    67c4:	21019a04 	addi	r4,r4,1640
    67c8:	00093100 	call	9310 <__assert_func>

000067cc <__hi0bits>:
    67cc:	00bfffd4 	movui	r2,65535
    67d0:	11001536 	bltu	r2,r4,6828 <__hi0bits+0x5c>
    67d4:	2008943a 	slli	r4,r4,16
    67d8:	00800404 	movi	r2,16
    67dc:	00c04034 	movhi	r3,256
    67e0:	20c0022e 	bgeu	r4,r3,67ec <__hi0bits+0x20>
    67e4:	2008923a 	slli	r4,r4,8
    67e8:	10800204 	addi	r2,r2,8
    67ec:	00c40034 	movhi	r3,4096
    67f0:	20c0022e 	bgeu	r4,r3,67fc <__hi0bits+0x30>
    67f4:	2008913a 	slli	r4,r4,4
    67f8:	10800104 	addi	r2,r2,4
    67fc:	00d00034 	movhi	r3,16384
    6800:	20c00336 	bltu	r4,r3,6810 <__hi0bits+0x44>
    6804:	20000716 	blt	r4,zero,6824 <__hi0bits+0x58>
    6808:	10800044 	addi	r2,r2,1
    680c:	f800283a 	ret
    6810:	200890ba 	slli	r4,r4,2
    6814:	20000616 	blt	r4,zero,6830 <__hi0bits+0x64>
    6818:	2110002c 	andhi	r4,r4,16384
    681c:	2000061e 	bne	r4,zero,6838 <__hi0bits+0x6c>
    6820:	00800804 	movi	r2,32
    6824:	f800283a 	ret
    6828:	0005883a 	mov	r2,zero
    682c:	003feb06 	br	67dc <__hi0bits+0x10>
    6830:	10800084 	addi	r2,r2,2
    6834:	f800283a 	ret
    6838:	108000c4 	addi	r2,r2,3
    683c:	f800283a 	ret

00006840 <__lo0bits>:
    6840:	20c00017 	ldw	r3,0(r4)
    6844:	188001cc 	andi	r2,r3,7
    6848:	10000826 	beq	r2,zero,686c <__lo0bits+0x2c>
    684c:	1880004c 	andi	r2,r3,1
    6850:	10001f1e 	bne	r2,zero,68d0 <__lo0bits+0x90>
    6854:	1880008c 	andi	r2,r3,2
    6858:	10002126 	beq	r2,zero,68e0 <__lo0bits+0xa0>
    685c:	1806d07a 	srli	r3,r3,1
    6860:	00800044 	movi	r2,1
    6864:	20c00015 	stw	r3,0(r4)
    6868:	f800283a 	ret
    686c:	18bfffcc 	andi	r2,r3,65535
    6870:	10001426 	beq	r2,zero,68c4 <__lo0bits+0x84>
    6874:	0005883a 	mov	r2,zero
    6878:	19403fcc 	andi	r5,r3,255
    687c:	2800021e 	bne	r5,zero,6888 <__lo0bits+0x48>
    6880:	1806d23a 	srli	r3,r3,8
    6884:	10800204 	addi	r2,r2,8
    6888:	194003cc 	andi	r5,r3,15
    688c:	2800021e 	bne	r5,zero,6898 <__lo0bits+0x58>
    6890:	1806d13a 	srli	r3,r3,4
    6894:	10800104 	addi	r2,r2,4
    6898:	194000cc 	andi	r5,r3,3
    689c:	2800021e 	bne	r5,zero,68a8 <__lo0bits+0x68>
    68a0:	1806d0ba 	srli	r3,r3,2
    68a4:	10800084 	addi	r2,r2,2
    68a8:	1940004c 	andi	r5,r3,1
    68ac:	2800031e 	bne	r5,zero,68bc <__lo0bits+0x7c>
    68b0:	1806d07a 	srli	r3,r3,1
    68b4:	10800044 	addi	r2,r2,1
    68b8:	18000726 	beq	r3,zero,68d8 <__lo0bits+0x98>
    68bc:	20c00015 	stw	r3,0(r4)
    68c0:	f800283a 	ret
    68c4:	1806d43a 	srli	r3,r3,16
    68c8:	00800404 	movi	r2,16
    68cc:	003fea06 	br	6878 <__lo0bits+0x38>
    68d0:	0005883a 	mov	r2,zero
    68d4:	f800283a 	ret
    68d8:	00800804 	movi	r2,32
    68dc:	f800283a 	ret
    68e0:	1806d0ba 	srli	r3,r3,2
    68e4:	00800084 	movi	r2,2
    68e8:	20c00015 	stw	r3,0(r4)
    68ec:	f800283a 	ret

000068f0 <__i2b>:
    68f0:	20c01317 	ldw	r3,76(r4)
    68f4:	defffd04 	addi	sp,sp,-12
    68f8:	dc400115 	stw	r17,4(sp)
    68fc:	dc000015 	stw	r16,0(sp)
    6900:	dfc00215 	stw	ra,8(sp)
    6904:	2021883a 	mov	r16,r4
    6908:	2823883a 	mov	r17,r5
    690c:	18000d26 	beq	r3,zero,6944 <__i2b+0x54>
    6910:	18800117 	ldw	r2,4(r3)
    6914:	10001826 	beq	r2,zero,6978 <__i2b+0x88>
    6918:	11000017 	ldw	r4,0(r2)
    691c:	19000115 	stw	r4,4(r3)
    6920:	00c00044 	movi	r3,1
    6924:	10000315 	stw	zero,12(r2)
    6928:	14400515 	stw	r17,20(r2)
    692c:	10c00415 	stw	r3,16(r2)
    6930:	dfc00217 	ldw	ra,8(sp)
    6934:	dc400117 	ldw	r17,4(sp)
    6938:	dc000017 	ldw	r16,0(sp)
    693c:	dec00304 	addi	sp,sp,12
    6940:	f800283a 	ret
    6944:	01800844 	movi	r6,33
    6948:	01400104 	movi	r5,4
    694c:	00093880 	call	9388 <_calloc_r>
    6950:	80801315 	stw	r2,76(r16)
    6954:	1007883a 	mov	r3,r2
    6958:	103fed1e 	bne	r2,zero,6910 <__i2b+0x20>
    695c:	01c00074 	movhi	r7,1
    6960:	01000074 	movhi	r4,1
    6964:	39c18504 	addi	r7,r7,1556
    6968:	000d883a 	mov	r6,zero
    696c:	01405004 	movi	r5,320
    6970:	21019a04 	addi	r4,r4,1640
    6974:	00093100 	call	9310 <__assert_func>
    6978:	01800704 	movi	r6,28
    697c:	01400044 	movi	r5,1
    6980:	8009883a 	mov	r4,r16
    6984:	00093880 	call	9388 <_calloc_r>
    6988:	103ff426 	beq	r2,zero,695c <__i2b+0x6c>
    698c:	00c00044 	movi	r3,1
    6990:	10c00115 	stw	r3,4(r2)
    6994:	00c00084 	movi	r3,2
    6998:	10c00215 	stw	r3,8(r2)
    699c:	003fe006 	br	6920 <__i2b+0x30>

000069a0 <__multiply>:
    69a0:	defff004 	addi	sp,sp,-64
    69a4:	dd800c15 	stw	r22,48(sp)
    69a8:	dc400715 	stw	r17,28(sp)
    69ac:	2d800417 	ldw	r22,16(r5)
    69b0:	34400417 	ldw	r17,16(r6)
    69b4:	dc800815 	stw	r18,32(sp)
    69b8:	dc000615 	stw	r16,24(sp)
    69bc:	dfc00f15 	stw	ra,60(sp)
    69c0:	df000e15 	stw	fp,56(sp)
    69c4:	ddc00d15 	stw	r23,52(sp)
    69c8:	dd400b15 	stw	r21,44(sp)
    69cc:	dd000a15 	stw	r20,40(sp)
    69d0:	dcc00915 	stw	r19,36(sp)
    69d4:	2825883a 	mov	r18,r5
    69d8:	3021883a 	mov	r16,r6
    69dc:	b4400516 	blt	r22,r17,69f4 <__multiply+0x54>
    69e0:	8807883a 	mov	r3,r17
    69e4:	2821883a 	mov	r16,r5
    69e8:	b023883a 	mov	r17,r22
    69ec:	3025883a 	mov	r18,r6
    69f0:	182d883a 	mov	r22,r3
    69f4:	80800217 	ldw	r2,8(r16)
    69f8:	8d87883a 	add	r3,r17,r22
    69fc:	d8c00015 	stw	r3,0(sp)
    6a00:	81400117 	ldw	r5,4(r16)
    6a04:	10c0010e 	bge	r2,r3,6a0c <__multiply+0x6c>
    6a08:	29400044 	addi	r5,r5,1
    6a0c:	00064780 	call	6478 <_Balloc>
    6a10:	d8800515 	stw	r2,20(sp)
    6a14:	10008c26 	beq	r2,zero,6c48 <__multiply+0x2a8>
    6a18:	d8800017 	ldw	r2,0(sp)
    6a1c:	102690ba 	slli	r19,r2,2
    6a20:	d8800517 	ldw	r2,20(sp)
    6a24:	15000504 	addi	r20,r2,20
    6a28:	a4c5883a 	add	r2,r20,r19
    6a2c:	d8800115 	stw	r2,4(sp)
    6a30:	a0800a2e 	bgeu	r20,r2,6a5c <__multiply+0xbc>
    6a34:	d8800117 	ldw	r2,4(sp)
    6a38:	d8c00517 	ldw	r3,20(sp)
    6a3c:	000b883a 	mov	r5,zero
    6a40:	a009883a 	mov	r4,r20
    6a44:	10cdc83a 	sub	r6,r2,r3
    6a48:	31bffac4 	addi	r6,r6,-21
    6a4c:	300cd0ba 	srli	r6,r6,2
    6a50:	31800044 	addi	r6,r6,1
    6a54:	300c90ba 	slli	r6,r6,2
    6a58:	00063380 	call	6338 <memset>
    6a5c:	b02c90ba 	slli	r22,r22,2
    6a60:	882290ba 	slli	r17,r17,2
    6a64:	94800504 	addi	r18,r18,20
    6a68:	80800504 	addi	r2,r16,20
    6a6c:	9587883a 	add	r3,r18,r22
    6a70:	d8800315 	stw	r2,12(sp)
    6a74:	d8c00215 	stw	r3,8(sp)
    6a78:	1463883a 	add	r17,r2,r17
    6a7c:	90c0542e 	bgeu	r18,r3,6bd0 <__multiply+0x230>
    6a80:	80800544 	addi	r2,r16,21
    6a84:	88806d36 	bltu	r17,r2,6c3c <__multiply+0x29c>
    6a88:	8c05c83a 	sub	r2,r17,r16
    6a8c:	10bffac4 	addi	r2,r2,-21
    6a90:	1004d0ba 	srli	r2,r2,2
    6a94:	10800044 	addi	r2,r2,1
    6a98:	100490ba 	slli	r2,r2,2
    6a9c:	d8800415 	stw	r2,16(sp)
    6aa0:	00000606 	br	6abc <__multiply+0x11c>
    6aa4:	1038d43a 	srli	fp,r2,16
    6aa8:	e000271e 	bne	fp,zero,6b48 <__multiply+0x1a8>
    6aac:	d8800217 	ldw	r2,8(sp)
    6ab0:	94800104 	addi	r18,r18,4
    6ab4:	a5000104 	addi	r20,r20,4
    6ab8:	9080452e 	bgeu	r18,r2,6bd0 <__multiply+0x230>
    6abc:	90800017 	ldw	r2,0(r18)
    6ac0:	173fffcc 	andi	fp,r2,65535
    6ac4:	e03ff726 	beq	fp,zero,6aa4 <__multiply+0x104>
    6ac8:	dd400317 	ldw	r21,12(sp)
    6acc:	a02d883a 	mov	r22,r20
    6ad0:	0027883a 	mov	r19,zero
    6ad4:	adc00017 	ldw	r23,0(r21)
    6ad8:	b4000017 	ldw	r16,0(r22)
    6adc:	e00b883a 	mov	r5,fp
    6ae0:	b93fffcc 	andi	r4,r23,65535
    6ae4:	000b0900 	call	b090 <__mulsi3>
    6ae8:	b808d43a 	srli	r4,r23,16
    6aec:	817fffcc 	andi	r5,r16,65535
    6af0:	1145883a 	add	r2,r2,r5
    6af4:	e00b883a 	mov	r5,fp
    6af8:	14e7883a 	add	r19,r2,r19
    6afc:	8020d43a 	srli	r16,r16,16
    6b00:	000b0900 	call	b090 <__mulsi3>
    6b04:	9808d43a 	srli	r4,r19,16
    6b08:	1405883a 	add	r2,r2,r16
    6b0c:	98ffffcc 	andi	r3,r19,65535
    6b10:	1105883a 	add	r2,r2,r4
    6b14:	1008943a 	slli	r4,r2,16
    6b18:	b5800104 	addi	r22,r22,4
    6b1c:	ad400104 	addi	r21,r21,4
    6b20:	20c6b03a 	or	r3,r4,r3
    6b24:	b0ffff15 	stw	r3,-4(r22)
    6b28:	1026d43a 	srli	r19,r2,16
    6b2c:	ac7fe936 	bltu	r21,r17,6ad4 <__multiply+0x134>
    6b30:	d8800417 	ldw	r2,16(sp)
    6b34:	a085883a 	add	r2,r20,r2
    6b38:	14c00015 	stw	r19,0(r2)
    6b3c:	90800017 	ldw	r2,0(r18)
    6b40:	1038d43a 	srli	fp,r2,16
    6b44:	e03fd926 	beq	fp,zero,6aac <__multiply+0x10c>
    6b48:	a5c00017 	ldw	r23,0(r20)
    6b4c:	dcc00317 	ldw	r19,12(sp)
    6b50:	a02b883a 	mov	r21,r20
    6b54:	b821883a 	mov	r16,r23
    6b58:	002d883a 	mov	r22,zero
    6b5c:	9900000b 	ldhu	r4,0(r19)
    6b60:	8020d43a 	srli	r16,r16,16
    6b64:	e00b883a 	mov	r5,fp
    6b68:	000b0900 	call	b090 <__mulsi3>
    6b6c:	158d883a 	add	r6,r2,r22
    6b70:	342d883a 	add	r22,r6,r16
    6b74:	b004943a 	slli	r2,r22,16
    6b78:	b8ffffcc 	andi	r3,r23,65535
    6b7c:	9cc00104 	addi	r19,r19,4
    6b80:	10c4b03a 	or	r2,r2,r3
    6b84:	a8800015 	stw	r2,0(r21)
    6b88:	993fff8b 	ldhu	r4,-2(r19)
    6b8c:	e00b883a 	mov	r5,fp
    6b90:	ac000117 	ldw	r16,4(r21)
    6b94:	000b0900 	call	b090 <__mulsi3>
    6b98:	b00cd43a 	srli	r6,r22,16
    6b9c:	80ffffcc 	andi	r3,r16,65535
    6ba0:	10c7883a 	add	r3,r2,r3
    6ba4:	19af883a 	add	r23,r3,r6
    6ba8:	ad400104 	addi	r21,r21,4
    6bac:	b82cd43a 	srli	r22,r23,16
    6bb0:	9c7fea36 	bltu	r19,r17,6b5c <__multiply+0x1bc>
    6bb4:	d8800417 	ldw	r2,16(sp)
    6bb8:	94800104 	addi	r18,r18,4
    6bbc:	a085883a 	add	r2,r20,r2
    6bc0:	15c00015 	stw	r23,0(r2)
    6bc4:	d8800217 	ldw	r2,8(sp)
    6bc8:	a5000104 	addi	r20,r20,4
    6bcc:	90bfbb36 	bltu	r18,r2,6abc <__multiply+0x11c>
    6bd0:	d8800017 	ldw	r2,0(sp)
    6bd4:	00800516 	blt	zero,r2,6bec <__multiply+0x24c>
    6bd8:	00000906 	br	6c00 <__multiply+0x260>
    6bdc:	d8800017 	ldw	r2,0(sp)
    6be0:	10bfffc4 	addi	r2,r2,-1
    6be4:	d8800015 	stw	r2,0(sp)
    6be8:	10000526 	beq	r2,zero,6c00 <__multiply+0x260>
    6bec:	d8c00117 	ldw	r3,4(sp)
    6bf0:	18bfff17 	ldw	r2,-4(r3)
    6bf4:	18ffff04 	addi	r3,r3,-4
    6bf8:	d8c00115 	stw	r3,4(sp)
    6bfc:	103ff726 	beq	r2,zero,6bdc <__multiply+0x23c>
    6c00:	d8800517 	ldw	r2,20(sp)
    6c04:	d8c00017 	ldw	r3,0(sp)
    6c08:	10c00415 	stw	r3,16(r2)
    6c0c:	dfc00f17 	ldw	ra,60(sp)
    6c10:	df000e17 	ldw	fp,56(sp)
    6c14:	ddc00d17 	ldw	r23,52(sp)
    6c18:	dd800c17 	ldw	r22,48(sp)
    6c1c:	dd400b17 	ldw	r21,44(sp)
    6c20:	dd000a17 	ldw	r20,40(sp)
    6c24:	dcc00917 	ldw	r19,36(sp)
    6c28:	dc800817 	ldw	r18,32(sp)
    6c2c:	dc400717 	ldw	r17,28(sp)
    6c30:	dc000617 	ldw	r16,24(sp)
    6c34:	dec01004 	addi	sp,sp,64
    6c38:	f800283a 	ret
    6c3c:	00800104 	movi	r2,4
    6c40:	d8800415 	stw	r2,16(sp)
    6c44:	003f9d06 	br	6abc <__multiply+0x11c>
    6c48:	01c00074 	movhi	r7,1
    6c4c:	01000074 	movhi	r4,1
    6c50:	39c18504 	addi	r7,r7,1556
    6c54:	000d883a 	mov	r6,zero
    6c58:	01405744 	movi	r5,349
    6c5c:	21019a04 	addi	r4,r4,1640
    6c60:	00093100 	call	9310 <__assert_func>

00006c64 <__pow5mult>:
    6c64:	defffb04 	addi	sp,sp,-20
    6c68:	dcc00315 	stw	r19,12(sp)
    6c6c:	dc000015 	stw	r16,0(sp)
    6c70:	dfc00415 	stw	ra,16(sp)
    6c74:	dc800215 	stw	r18,8(sp)
    6c78:	dc400115 	stw	r17,4(sp)
    6c7c:	308000cc 	andi	r2,r6,3
    6c80:	3021883a 	mov	r16,r6
    6c84:	2027883a 	mov	r19,r4
    6c88:	10002b1e 	bne	r2,zero,6d38 <__pow5mult+0xd4>
    6c8c:	2825883a 	mov	r18,r5
    6c90:	8021d0ba 	srai	r16,r16,2
    6c94:	80001926 	beq	r16,zero,6cfc <__pow5mult+0x98>
    6c98:	9c401217 	ldw	r17,72(r19)
    6c9c:	8800061e 	bne	r17,zero,6cb8 <__pow5mult+0x54>
    6ca0:	00002d06 	br	6d58 <__pow5mult+0xf4>
    6ca4:	8021d07a 	srai	r16,r16,1
    6ca8:	80001426 	beq	r16,zero,6cfc <__pow5mult+0x98>
    6cac:	88800017 	ldw	r2,0(r17)
    6cb0:	10001a26 	beq	r2,zero,6d1c <__pow5mult+0xb8>
    6cb4:	1023883a 	mov	r17,r2
    6cb8:	8080004c 	andi	r2,r16,1
    6cbc:	103ff926 	beq	r2,zero,6ca4 <__pow5mult+0x40>
    6cc0:	880d883a 	mov	r6,r17
    6cc4:	900b883a 	mov	r5,r18
    6cc8:	9809883a 	mov	r4,r19
    6ccc:	00069a00 	call	69a0 <__multiply>
    6cd0:	90000726 	beq	r18,zero,6cf0 <__pow5mult+0x8c>
    6cd4:	91000117 	ldw	r4,4(r18)
    6cd8:	98c01317 	ldw	r3,76(r19)
    6cdc:	200890ba 	slli	r4,r4,2
    6ce0:	1907883a 	add	r3,r3,r4
    6ce4:	19000017 	ldw	r4,0(r3)
    6ce8:	91000015 	stw	r4,0(r18)
    6cec:	1c800015 	stw	r18,0(r3)
    6cf0:	8021d07a 	srai	r16,r16,1
    6cf4:	1025883a 	mov	r18,r2
    6cf8:	803fec1e 	bne	r16,zero,6cac <__pow5mult+0x48>
    6cfc:	9005883a 	mov	r2,r18
    6d00:	dfc00417 	ldw	ra,16(sp)
    6d04:	dcc00317 	ldw	r19,12(sp)
    6d08:	dc800217 	ldw	r18,8(sp)
    6d0c:	dc400117 	ldw	r17,4(sp)
    6d10:	dc000017 	ldw	r16,0(sp)
    6d14:	dec00504 	addi	sp,sp,20
    6d18:	f800283a 	ret
    6d1c:	880d883a 	mov	r6,r17
    6d20:	880b883a 	mov	r5,r17
    6d24:	9809883a 	mov	r4,r19
    6d28:	00069a00 	call	69a0 <__multiply>
    6d2c:	88800015 	stw	r2,0(r17)
    6d30:	10000015 	stw	zero,0(r2)
    6d34:	003fdf06 	br	6cb4 <__pow5mult+0x50>
    6d38:	100490ba 	slli	r2,r2,2
    6d3c:	00c00074 	movhi	r3,1
    6d40:	000f883a 	mov	r7,zero
    6d44:	10c7883a 	add	r3,r2,r3
    6d48:	1981a917 	ldw	r6,1700(r3)
    6d4c:	00065400 	call	6540 <__multadd>
    6d50:	1025883a 	mov	r18,r2
    6d54:	003fce06 	br	6c90 <__pow5mult+0x2c>
    6d58:	01400044 	movi	r5,1
    6d5c:	9809883a 	mov	r4,r19
    6d60:	00064780 	call	6478 <_Balloc>
    6d64:	1023883a 	mov	r17,r2
    6d68:	10000726 	beq	r2,zero,6d88 <__pow5mult+0x124>
    6d6c:	00809c44 	movi	r2,625
    6d70:	88800515 	stw	r2,20(r17)
    6d74:	00800044 	movi	r2,1
    6d78:	88800415 	stw	r2,16(r17)
    6d7c:	9c401215 	stw	r17,72(r19)
    6d80:	88000015 	stw	zero,0(r17)
    6d84:	003fcc06 	br	6cb8 <__pow5mult+0x54>
    6d88:	01c00074 	movhi	r7,1
    6d8c:	01000074 	movhi	r4,1
    6d90:	39c18504 	addi	r7,r7,1556
    6d94:	000d883a 	mov	r6,zero
    6d98:	01405004 	movi	r5,320
    6d9c:	21019a04 	addi	r4,r4,1640
    6da0:	00093100 	call	9310 <__assert_func>

00006da4 <__lshift>:
    6da4:	defff804 	addi	sp,sp,-32
    6da8:	dd800615 	stw	r22,24(sp)
    6dac:	dc400115 	stw	r17,4(sp)
    6db0:	302dd17a 	srai	r22,r6,5
    6db4:	2c400417 	ldw	r17,16(r5)
    6db8:	28800217 	ldw	r2,8(r5)
    6dbc:	dd000415 	stw	r20,16(sp)
    6dc0:	b463883a 	add	r17,r22,r17
    6dc4:	dcc00315 	stw	r19,12(sp)
    6dc8:	dc800215 	stw	r18,8(sp)
    6dcc:	dc000015 	stw	r16,0(sp)
    6dd0:	dfc00715 	stw	ra,28(sp)
    6dd4:	dd400515 	stw	r21,20(sp)
    6dd8:	8d000044 	addi	r20,r17,1
    6ddc:	2827883a 	mov	r19,r5
    6de0:	3025883a 	mov	r18,r6
    6de4:	29400117 	ldw	r5,4(r5)
    6de8:	2021883a 	mov	r16,r4
    6dec:	1500030e 	bge	r2,r20,6dfc <__lshift+0x58>
    6df0:	1085883a 	add	r2,r2,r2
    6df4:	29400044 	addi	r5,r5,1
    6df8:	153ffd16 	blt	r2,r20,6df0 <__lshift+0x4c>
    6dfc:	8009883a 	mov	r4,r16
    6e00:	00064780 	call	6478 <_Balloc>
    6e04:	102b883a 	mov	r21,r2
    6e08:	10004126 	beq	r2,zero,6f10 <__lshift+0x16c>
    6e0c:	11000504 	addi	r4,r2,20
    6e10:	0580050e 	bge	zero,r22,6e28 <__lshift+0x84>
    6e14:	b02c90ba 	slli	r22,r22,2
    6e18:	000b883a 	mov	r5,zero
    6e1c:	b00d883a 	mov	r6,r22
    6e20:	00063380 	call	6338 <memset>
    6e24:	1589883a 	add	r4,r2,r22
    6e28:	9a400417 	ldw	r9,16(r19)
    6e2c:	98c00504 	addi	r3,r19,20
    6e30:	948007cc 	andi	r18,r18,31
    6e34:	481290ba 	slli	r9,r9,2
    6e38:	1a53883a 	add	r9,r3,r9
    6e3c:	90002c26 	beq	r18,zero,6ef0 <__lshift+0x14c>
    6e40:	01400804 	movi	r5,32
    6e44:	2c8bc83a 	sub	r5,r5,r18
    6e48:	2005883a 	mov	r2,r4
    6e4c:	0011883a 	mov	r8,zero
    6e50:	19c00017 	ldw	r7,0(r3)
    6e54:	10800104 	addi	r2,r2,4
    6e58:	18c00104 	addi	r3,r3,4
    6e5c:	3c8e983a 	sll	r7,r7,r18
    6e60:	3a0eb03a 	or	r7,r7,r8
    6e64:	11ffff15 	stw	r7,-4(r2)
    6e68:	1a3fff17 	ldw	r8,-4(r3)
    6e6c:	4150d83a 	srl	r8,r8,r5
    6e70:	1a7ff736 	bltu	r3,r9,6e50 <__lshift+0xac>
    6e74:	98800544 	addi	r2,r19,21
    6e78:	48802336 	bltu	r9,r2,6f08 <__lshift+0x164>
    6e7c:	4cc7c83a 	sub	r3,r9,r19
    6e80:	18fffac4 	addi	r3,r3,-21
    6e84:	1806d0ba 	srli	r3,r3,2
    6e88:	18c00044 	addi	r3,r3,1
    6e8c:	180690ba 	slli	r3,r3,2
    6e90:	20c9883a 	add	r4,r4,r3
    6e94:	22000015 	stw	r8,0(r4)
    6e98:	4000011e 	bne	r8,zero,6ea0 <__lshift+0xfc>
    6e9c:	8829883a 	mov	r20,r17
    6ea0:	ad000415 	stw	r20,16(r21)
    6ea4:	98000726 	beq	r19,zero,6ec4 <__lshift+0x120>
    6ea8:	98c00117 	ldw	r3,4(r19)
    6eac:	80801317 	ldw	r2,76(r16)
    6eb0:	180690ba 	slli	r3,r3,2
    6eb4:	10c5883a 	add	r2,r2,r3
    6eb8:	10c00017 	ldw	r3,0(r2)
    6ebc:	98c00015 	stw	r3,0(r19)
    6ec0:	14c00015 	stw	r19,0(r2)
    6ec4:	a805883a 	mov	r2,r21
    6ec8:	dfc00717 	ldw	ra,28(sp)
    6ecc:	dd800617 	ldw	r22,24(sp)
    6ed0:	dd400517 	ldw	r21,20(sp)
    6ed4:	dd000417 	ldw	r20,16(sp)
    6ed8:	dcc00317 	ldw	r19,12(sp)
    6edc:	dc800217 	ldw	r18,8(sp)
    6ee0:	dc400117 	ldw	r17,4(sp)
    6ee4:	dc000017 	ldw	r16,0(sp)
    6ee8:	dec00804 	addi	sp,sp,32
    6eec:	f800283a 	ret
    6ef0:	18800017 	ldw	r2,0(r3)
    6ef4:	18c00104 	addi	r3,r3,4
    6ef8:	21000104 	addi	r4,r4,4
    6efc:	20bfff15 	stw	r2,-4(r4)
    6f00:	1a7ffb36 	bltu	r3,r9,6ef0 <__lshift+0x14c>
    6f04:	003fe506 	br	6e9c <__lshift+0xf8>
    6f08:	00c00104 	movi	r3,4
    6f0c:	003fe006 	br	6e90 <__lshift+0xec>
    6f10:	01c00074 	movhi	r7,1
    6f14:	01000074 	movhi	r4,1
    6f18:	39c18504 	addi	r7,r7,1556
    6f1c:	000d883a 	mov	r6,zero
    6f20:	01407644 	movi	r5,473
    6f24:	21019a04 	addi	r4,r4,1640
    6f28:	00093100 	call	9310 <__assert_func>

00006f2c <__mcmp>:
    6f2c:	21800417 	ldw	r6,16(r4)
    6f30:	28c00417 	ldw	r3,16(r5)
    6f34:	30c5c83a 	sub	r2,r6,r3
    6f38:	30c0101e 	bne	r6,r3,6f7c <__mcmp+0x50>
    6f3c:	180690ba 	slli	r3,r3,2
    6f40:	21000504 	addi	r4,r4,20
    6f44:	29400504 	addi	r5,r5,20
    6f48:	20cd883a 	add	r6,r4,r3
    6f4c:	28c7883a 	add	r3,r5,r3
    6f50:	00000106 	br	6f58 <__mcmp+0x2c>
    6f54:	21800a2e 	bgeu	r4,r6,6f80 <__mcmp+0x54>
    6f58:	31ffff17 	ldw	r7,-4(r6)
    6f5c:	197fff17 	ldw	r5,-4(r3)
    6f60:	31bfff04 	addi	r6,r6,-4
    6f64:	18ffff04 	addi	r3,r3,-4
    6f68:	397ffa26 	beq	r7,r5,6f54 <__mcmp+0x28>
    6f6c:	3940022e 	bgeu	r7,r5,6f78 <__mcmp+0x4c>
    6f70:	00bfffc4 	movi	r2,-1
    6f74:	f800283a 	ret
    6f78:	00800044 	movi	r2,1
    6f7c:	f800283a 	ret
    6f80:	f800283a 	ret

00006f84 <__mdiff>:
    6f84:	28c00417 	ldw	r3,16(r5)
    6f88:	30800417 	ldw	r2,16(r6)
    6f8c:	defffc04 	addi	sp,sp,-16
    6f90:	dc800215 	stw	r18,8(sp)
    6f94:	dc400115 	stw	r17,4(sp)
    6f98:	dc000015 	stw	r16,0(sp)
    6f9c:	dfc00315 	stw	ra,12(sp)
    6fa0:	2823883a 	mov	r17,r5
    6fa4:	3021883a 	mov	r16,r6
    6fa8:	18a5c83a 	sub	r18,r3,r2
    6fac:	1880121e 	bne	r3,r2,6ff8 <__mdiff+0x74>
    6fb0:	100c90ba 	slli	r6,r2,2
    6fb4:	29400504 	addi	r5,r5,20
    6fb8:	80c00504 	addi	r3,r16,20
    6fbc:	2985883a 	add	r2,r5,r6
    6fc0:	1987883a 	add	r3,r3,r6
    6fc4:	00000106 	br	6fcc <__mdiff+0x48>
    6fc8:	28805f2e 	bgeu	r5,r2,7148 <__mdiff+0x1c4>
    6fcc:	11ffff17 	ldw	r7,-4(r2)
    6fd0:	19bfff17 	ldw	r6,-4(r3)
    6fd4:	10bfff04 	addi	r2,r2,-4
    6fd8:	18ffff04 	addi	r3,r3,-4
    6fdc:	39bffa26 	beq	r7,r6,6fc8 <__mdiff+0x44>
    6fe0:	3980072e 	bgeu	r7,r6,7000 <__mdiff+0x7c>
    6fe4:	8805883a 	mov	r2,r17
    6fe8:	04800044 	movi	r18,1
    6fec:	8023883a 	mov	r17,r16
    6ff0:	1021883a 	mov	r16,r2
    6ff4:	00000206 	br	7000 <__mdiff+0x7c>
    6ff8:	903ffa16 	blt	r18,zero,6fe4 <__mdiff+0x60>
    6ffc:	0025883a 	mov	r18,zero
    7000:	89400117 	ldw	r5,4(r17)
    7004:	00064780 	call	6478 <_Balloc>
    7008:	10006326 	beq	r2,zero,7198 <__mdiff+0x214>
    700c:	8a400417 	ldw	r9,16(r17)
    7010:	83800417 	ldw	r14,16(r16)
    7014:	89400504 	addi	r5,r17,20
    7018:	481490ba 	slli	r10,r9,2
    701c:	701c90ba 	slli	r14,r14,2
    7020:	81800504 	addi	r6,r16,20
    7024:	13400504 	addi	r13,r2,20
    7028:	14800315 	stw	r18,12(r2)
    702c:	2a95883a 	add	r10,r5,r10
    7030:	339d883a 	add	r14,r6,r14
    7034:	6819883a 	mov	r12,r13
    7038:	2817883a 	mov	r11,r5
    703c:	000f883a 	mov	r7,zero
    7040:	59000017 	ldw	r4,0(r11)
    7044:	32000017 	ldw	r8,0(r6)
    7048:	63000104 	addi	r12,r12,4
    704c:	20ffffcc 	andi	r3,r4,65535
    7050:	43ffffcc 	andi	r15,r8,65535
    7054:	1bc7c83a 	sub	r3,r3,r15
    7058:	4010d43a 	srli	r8,r8,16
    705c:	19c7883a 	add	r3,r3,r7
    7060:	2008d43a 	srli	r4,r4,16
    7064:	180fd43a 	srai	r7,r3,16
    7068:	18ffffcc 	andi	r3,r3,65535
    706c:	2209c83a 	sub	r4,r4,r8
    7070:	21c9883a 	add	r4,r4,r7
    7074:	2010943a 	slli	r8,r4,16
    7078:	31800104 	addi	r6,r6,4
    707c:	200fd43a 	srai	r7,r4,16
    7080:	1a06b03a 	or	r3,r3,r8
    7084:	60ffff15 	stw	r3,-4(r12)
    7088:	5ac00104 	addi	r11,r11,4
    708c:	33bfec36 	bltu	r6,r14,7040 <__mdiff+0xbc>
    7090:	7409c83a 	sub	r4,r14,r16
    7094:	213ffac4 	addi	r4,r4,-21
    7098:	84000544 	addi	r16,r16,21
    709c:	200cd0ba 	srli	r6,r4,2
    70a0:	74002736 	bltu	r14,r16,7140 <__mdiff+0x1bc>
    70a4:	31000044 	addi	r4,r6,1
    70a8:	200890ba 	slli	r4,r4,2
    70ac:	290b883a 	add	r5,r5,r4
    70b0:	6911883a 	add	r8,r13,r4
    70b4:	2a802b2e 	bgeu	r5,r10,7164 <__mdiff+0x1e0>
    70b8:	4017883a 	mov	r11,r8
    70bc:	280d883a 	mov	r6,r5
    70c0:	30c00017 	ldw	r3,0(r6)
    70c4:	5ac00104 	addi	r11,r11,4
    70c8:	31800104 	addi	r6,r6,4
    70cc:	193fffcc 	andi	r4,r3,65535
    70d0:	21c9883a 	add	r4,r4,r7
    70d4:	1818d43a 	srli	r12,r3,16
    70d8:	2009d43a 	srai	r4,r4,16
    70dc:	19c7883a 	add	r3,r3,r7
    70e0:	18ffffcc 	andi	r3,r3,65535
    70e4:	2309883a 	add	r4,r4,r12
    70e8:	2018943a 	slli	r12,r4,16
    70ec:	200fd43a 	srai	r7,r4,16
    70f0:	1b06b03a 	or	r3,r3,r12
    70f4:	58ffff15 	stw	r3,-4(r11)
    70f8:	32bff136 	bltu	r6,r10,70c0 <__mdiff+0x13c>
    70fc:	513fffc4 	addi	r4,r10,-1
    7100:	2149c83a 	sub	r4,r4,r5
    7104:	2008d0ba 	srli	r4,r4,2
    7108:	200890ba 	slli	r4,r4,2
    710c:	4109883a 	add	r4,r8,r4
    7110:	1800041e 	bne	r3,zero,7124 <__mdiff+0x1a0>
    7114:	20ffff17 	ldw	r3,-4(r4)
    7118:	4a7fffc4 	addi	r9,r9,-1
    711c:	213fff04 	addi	r4,r4,-4
    7120:	183ffc26 	beq	r3,zero,7114 <__mdiff+0x190>
    7124:	12400415 	stw	r9,16(r2)
    7128:	dfc00317 	ldw	ra,12(sp)
    712c:	dc800217 	ldw	r18,8(sp)
    7130:	dc400117 	ldw	r17,4(sp)
    7134:	dc000017 	ldw	r16,0(sp)
    7138:	dec00404 	addi	sp,sp,16
    713c:	f800283a 	ret
    7140:	01000104 	movi	r4,4
    7144:	003fd906 	br	70ac <__mdiff+0x128>
    7148:	000b883a 	mov	r5,zero
    714c:	00064780 	call	6478 <_Balloc>
    7150:	10000a26 	beq	r2,zero,717c <__mdiff+0x1f8>
    7154:	00c00044 	movi	r3,1
    7158:	10c00415 	stw	r3,16(r2)
    715c:	10000515 	stw	zero,20(r2)
    7160:	003ff106 	br	7128 <__mdiff+0x1a4>
    7164:	74000336 	bltu	r14,r16,7174 <__mdiff+0x1f0>
    7168:	300890ba 	slli	r4,r6,2
    716c:	6909883a 	add	r4,r13,r4
    7170:	003fe706 	br	7110 <__mdiff+0x18c>
    7174:	0009883a 	mov	r4,zero
    7178:	003ffc06 	br	716c <__mdiff+0x1e8>
    717c:	01c00074 	movhi	r7,1
    7180:	01000074 	movhi	r4,1
    7184:	39c18504 	addi	r7,r7,1556
    7188:	000d883a 	mov	r6,zero
    718c:	01408c84 	movi	r5,562
    7190:	21019a04 	addi	r4,r4,1640
    7194:	00093100 	call	9310 <__assert_func>
    7198:	01c00074 	movhi	r7,1
    719c:	01000074 	movhi	r4,1
    71a0:	39c18504 	addi	r7,r7,1556
    71a4:	000d883a 	mov	r6,zero
    71a8:	01409004 	movi	r5,576
    71ac:	21019a04 	addi	r4,r4,1640
    71b0:	00093100 	call	9310 <__assert_func>

000071b4 <__ulp>:
    71b4:	28dffc2c 	andhi	r3,r5,32752
    71b8:	00bf3034 	movhi	r2,64704
    71bc:	1887883a 	add	r3,r3,r2
    71c0:	00c0020e 	bge	zero,r3,71cc <__ulp+0x18>
    71c4:	0005883a 	mov	r2,zero
    71c8:	f800283a 	ret
    71cc:	00c7c83a 	sub	r3,zero,r3
    71d0:	1807d53a 	srai	r3,r3,20
    71d4:	18800508 	cmpgei	r2,r3,20
    71d8:	1000041e 	bne	r2,zero,71ec <__ulp+0x38>
    71dc:	00800234 	movhi	r2,8
    71e0:	10c7d83a 	sra	r3,r2,r3
    71e4:	0005883a 	mov	r2,zero
    71e8:	f800283a 	ret
    71ec:	18fffb04 	addi	r3,r3,-20
    71f0:	188007c8 	cmpgei	r2,r3,31
    71f4:	10000326 	beq	r2,zero,7204 <__ulp+0x50>
    71f8:	00800044 	movi	r2,1
    71fc:	0007883a 	mov	r3,zero
    7200:	f800283a 	ret
    7204:	00a00034 	movhi	r2,32768
    7208:	10c4d83a 	srl	r2,r2,r3
    720c:	0007883a 	mov	r3,zero
    7210:	f800283a 	ret

00007214 <__b2d>:
    7214:	defffa04 	addi	sp,sp,-24
    7218:	dc400115 	stw	r17,4(sp)
    721c:	24400417 	ldw	r17,16(r4)
    7220:	dc000015 	stw	r16,0(sp)
    7224:	24000504 	addi	r16,r4,20
    7228:	882290ba 	slli	r17,r17,2
    722c:	dc800215 	stw	r18,8(sp)
    7230:	dd000415 	stw	r20,16(sp)
    7234:	8463883a 	add	r17,r16,r17
    7238:	8cbfff17 	ldw	r18,-4(r17)
    723c:	dcc00315 	stw	r19,12(sp)
    7240:	dfc00515 	stw	ra,20(sp)
    7244:	9009883a 	mov	r4,r18
    7248:	2827883a 	mov	r19,r5
    724c:	00067cc0 	call	67cc <__hi0bits>
    7250:	00c00804 	movi	r3,32
    7254:	1889c83a 	sub	r4,r3,r2
    7258:	99000015 	stw	r4,0(r19)
    725c:	110002c8 	cmpgei	r4,r2,11
    7260:	8d3fff04 	addi	r20,r17,-4
    7264:	20001b26 	beq	r4,zero,72d4 <__b2d+0xc0>
    7268:	117ffd44 	addi	r5,r2,-11
    726c:	85000e2e 	bgeu	r16,r20,72a8 <__b2d+0x94>
    7270:	88bffe17 	ldw	r2,-8(r17)
    7274:	28000e26 	beq	r5,zero,72b0 <__b2d+0x9c>
    7278:	1949c83a 	sub	r4,r3,r5
    727c:	1106d83a 	srl	r3,r2,r4
    7280:	9164983a 	sll	r18,r18,r5
    7284:	89bffe04 	addi	r6,r17,-8
    7288:	1144983a 	sll	r2,r2,r5
    728c:	90c6b03a 	or	r3,r18,r3
    7290:	18cffc34 	orhi	r3,r3,16368
    7294:	8180072e 	bgeu	r16,r6,72b4 <__b2d+0xa0>
    7298:	897ffd17 	ldw	r5,-12(r17)
    729c:	2908d83a 	srl	r4,r5,r4
    72a0:	1104b03a 	or	r2,r2,r4
    72a4:	00000306 	br	72b4 <__b2d+0xa0>
    72a8:	108002d8 	cmpnei	r2,r2,11
    72ac:	1000161e 	bne	r2,zero,7308 <__b2d+0xf4>
    72b0:	90cffc34 	orhi	r3,r18,16368
    72b4:	dfc00517 	ldw	ra,20(sp)
    72b8:	dd000417 	ldw	r20,16(sp)
    72bc:	dcc00317 	ldw	r19,12(sp)
    72c0:	dc800217 	ldw	r18,8(sp)
    72c4:	dc400117 	ldw	r17,4(sp)
    72c8:	dc000017 	ldw	r16,0(sp)
    72cc:	dec00604 	addi	sp,sp,24
    72d0:	f800283a 	ret
    72d4:	014002c4 	movi	r5,11
    72d8:	288bc83a 	sub	r5,r5,r2
    72dc:	9146d83a 	srl	r3,r18,r5
    72e0:	18cffc34 	orhi	r3,r3,16368
    72e4:	85000536 	bltu	r16,r20,72fc <__b2d+0xe8>
    72e8:	0009883a 	mov	r4,zero
    72ec:	10800544 	addi	r2,r2,21
    72f0:	90a4983a 	sll	r18,r18,r2
    72f4:	9104b03a 	or	r2,r18,r4
    72f8:	003fee06 	br	72b4 <__b2d+0xa0>
    72fc:	893ffe17 	ldw	r4,-8(r17)
    7300:	2148d83a 	srl	r4,r4,r5
    7304:	003ff906 	br	72ec <__b2d+0xd8>
    7308:	9164983a 	sll	r18,r18,r5
    730c:	0005883a 	mov	r2,zero
    7310:	003fe706 	br	72b0 <__b2d+0x9c>

00007314 <__d2b>:
    7314:	defff804 	addi	sp,sp,-32
    7318:	dd000615 	stw	r20,24(sp)
    731c:	2829883a 	mov	r20,r5
    7320:	01400044 	movi	r5,1
    7324:	dcc00515 	stw	r19,20(sp)
    7328:	dc000215 	stw	r16,8(sp)
    732c:	dfc00715 	stw	ra,28(sp)
    7330:	dc800415 	stw	r18,16(sp)
    7334:	dc400315 	stw	r17,12(sp)
    7338:	3021883a 	mov	r16,r6
    733c:	3827883a 	mov	r19,r7
    7340:	00064780 	call	6478 <_Balloc>
    7344:	10004226 	beq	r2,zero,7450 <__d2b+0x13c>
    7348:	8024d53a 	srli	r18,r16,20
    734c:	1023883a 	mov	r17,r2
    7350:	00800434 	movhi	r2,16
    7354:	10bfffc4 	addi	r2,r2,-1
    7358:	9481ffcc 	andi	r18,r18,2047
    735c:	80a0703a 	and	r16,r16,r2
    7360:	90000126 	beq	r18,zero,7368 <__d2b+0x54>
    7364:	84000434 	orhi	r16,r16,16
    7368:	dc000115 	stw	r16,4(sp)
    736c:	a0001b26 	beq	r20,zero,73dc <__d2b+0xc8>
    7370:	d809883a 	mov	r4,sp
    7374:	dd000015 	stw	r20,0(sp)
    7378:	00068400 	call	6840 <__lo0bits>
    737c:	d8c00117 	ldw	r3,4(sp)
    7380:	10003026 	beq	r2,zero,7444 <__d2b+0x130>
    7384:	01000804 	movi	r4,32
    7388:	2089c83a 	sub	r4,r4,r2
    738c:	1908983a 	sll	r4,r3,r4
    7390:	d9400017 	ldw	r5,0(sp)
    7394:	1886d83a 	srl	r3,r3,r2
    7398:	2148b03a 	or	r4,r4,r5
    739c:	89000515 	stw	r4,20(r17)
    73a0:	d8c00115 	stw	r3,4(sp)
    73a4:	88c00615 	stw	r3,24(r17)
    73a8:	18002426 	beq	r3,zero,743c <__d2b+0x128>
    73ac:	04000084 	movi	r16,2
    73b0:	8c000415 	stw	r16,16(r17)
    73b4:	9000111e 	bne	r18,zero,73fc <__d2b+0xe8>
    73b8:	800690ba 	slli	r3,r16,2
    73bc:	10bef384 	addi	r2,r2,-1074
    73c0:	98800015 	stw	r2,0(r19)
    73c4:	88c5883a 	add	r2,r17,r3
    73c8:	11000417 	ldw	r4,16(r2)
    73cc:	8020917a 	slli	r16,r16,5
    73d0:	00067cc0 	call	67cc <__hi0bits>
    73d4:	8085c83a 	sub	r2,r16,r2
    73d8:	00000d06 	br	7410 <__d2b+0xfc>
    73dc:	d9000104 	addi	r4,sp,4
    73e0:	00068400 	call	6840 <__lo0bits>
    73e4:	d8c00117 	ldw	r3,4(sp)
    73e8:	10800804 	addi	r2,r2,32
    73ec:	04000044 	movi	r16,1
    73f0:	88c00515 	stw	r3,20(r17)
    73f4:	8c000415 	stw	r16,16(r17)
    73f8:	903fef26 	beq	r18,zero,73b8 <__d2b+0xa4>
    73fc:	94bef344 	addi	r18,r18,-1075
    7400:	90a5883a 	add	r18,r18,r2
    7404:	04000d44 	movi	r16,53
    7408:	9c800015 	stw	r18,0(r19)
    740c:	8085c83a 	sub	r2,r16,r2
    7410:	d8c00817 	ldw	r3,32(sp)
    7414:	18800015 	stw	r2,0(r3)
    7418:	8805883a 	mov	r2,r17
    741c:	dfc00717 	ldw	ra,28(sp)
    7420:	dd000617 	ldw	r20,24(sp)
    7424:	dcc00517 	ldw	r19,20(sp)
    7428:	dc800417 	ldw	r18,16(sp)
    742c:	dc400317 	ldw	r17,12(sp)
    7430:	dc000217 	ldw	r16,8(sp)
    7434:	dec00804 	addi	sp,sp,32
    7438:	f800283a 	ret
    743c:	04000044 	movi	r16,1
    7440:	003fec06 	br	73f4 <__d2b+0xe0>
    7444:	d9000017 	ldw	r4,0(sp)
    7448:	89000515 	stw	r4,20(r17)
    744c:	003fd506 	br	73a4 <__d2b+0x90>
    7450:	01c00074 	movhi	r7,1
    7454:	01000074 	movhi	r4,1
    7458:	39c18504 	addi	r7,r7,1556
    745c:	000d883a 	mov	r6,zero
    7460:	0140c284 	movi	r5,778
    7464:	21019a04 	addi	r4,r4,1640
    7468:	00093100 	call	9310 <__assert_func>

0000746c <__ratio>:
    746c:	defff904 	addi	sp,sp,-28
    7470:	dc400315 	stw	r17,12(sp)
    7474:	2823883a 	mov	r17,r5
    7478:	d80b883a 	mov	r5,sp
    747c:	dfc00615 	stw	ra,24(sp)
    7480:	dcc00515 	stw	r19,20(sp)
    7484:	dc800415 	stw	r18,16(sp)
    7488:	2027883a 	mov	r19,r4
    748c:	dc000215 	stw	r16,8(sp)
    7490:	00072140 	call	7214 <__b2d>
    7494:	d9400104 	addi	r5,sp,4
    7498:	8809883a 	mov	r4,r17
    749c:	1025883a 	mov	r18,r2
    74a0:	1821883a 	mov	r16,r3
    74a4:	00072140 	call	7214 <__b2d>
    74a8:	89000417 	ldw	r4,16(r17)
    74ac:	9a000417 	ldw	r8,16(r19)
    74b0:	d9400117 	ldw	r5,4(sp)
    74b4:	100d883a 	mov	r6,r2
    74b8:	4111c83a 	sub	r8,r8,r4
    74bc:	d9000017 	ldw	r4,0(sp)
    74c0:	4010917a 	slli	r8,r8,5
    74c4:	180f883a 	mov	r7,r3
    74c8:	2149c83a 	sub	r4,r4,r5
    74cc:	4111883a 	add	r8,r8,r4
    74d0:	02000c0e 	bge	zero,r8,7504 <__ratio+0x98>
    74d4:	4010953a 	slli	r8,r8,20
    74d8:	4421883a 	add	r16,r8,r16
    74dc:	9009883a 	mov	r4,r18
    74e0:	800b883a 	mov	r5,r16
    74e4:	000b9bc0 	call	b9bc <__divdf3>
    74e8:	dfc00617 	ldw	ra,24(sp)
    74ec:	dcc00517 	ldw	r19,20(sp)
    74f0:	dc800417 	ldw	r18,16(sp)
    74f4:	dc400317 	ldw	r17,12(sp)
    74f8:	dc000217 	ldw	r16,8(sp)
    74fc:	dec00704 	addi	sp,sp,28
    7500:	f800283a 	ret
    7504:	4010953a 	slli	r8,r8,20
    7508:	1a0fc83a 	sub	r7,r3,r8
    750c:	003ff306 	br	74dc <__ratio+0x70>

00007510 <_mprec_log10>:
    7510:	defffe04 	addi	sp,sp,-8
    7514:	dc000015 	stw	r16,0(sp)
    7518:	dfc00115 	stw	ra,4(sp)
    751c:	20800608 	cmpgei	r2,r4,24
    7520:	2021883a 	mov	r16,r4
    7524:	10000f26 	beq	r2,zero,7564 <_mprec_log10+0x54>
    7528:	0009883a 	mov	r4,zero
    752c:	014ffc34 	movhi	r5,16368
    7530:	000d883a 	mov	r6,zero
    7534:	01d00934 	movhi	r7,16420
    7538:	000c5300 	call	c530 <__muldf3>
    753c:	843fffc4 	addi	r16,r16,-1
    7540:	1009883a 	mov	r4,r2
    7544:	180b883a 	mov	r5,r3
    7548:	803ff91e 	bne	r16,zero,7530 <_mprec_log10+0x20>
    754c:	2005883a 	mov	r2,r4
    7550:	2807883a 	mov	r3,r5
    7554:	dfc00117 	ldw	ra,4(sp)
    7558:	dc000017 	ldw	r16,0(sp)
    755c:	dec00204 	addi	sp,sp,8
    7560:	f800283a 	ret
    7564:	202090fa 	slli	r16,r4,3
    7568:	00800074 	movhi	r2,1
    756c:	1081c104 	addi	r2,r2,1796
    7570:	1405883a 	add	r2,r2,r16
    7574:	11000017 	ldw	r4,0(r2)
    7578:	11400117 	ldw	r5,4(r2)
    757c:	003ff306 	br	754c <_mprec_log10+0x3c>

00007580 <__copybits>:
    7580:	297fffc4 	addi	r5,r5,-1
    7584:	280fd17a 	srai	r7,r5,5
    7588:	31400417 	ldw	r5,16(r6)
    758c:	30800504 	addi	r2,r6,20
    7590:	39c00044 	addi	r7,r7,1
    7594:	280a90ba 	slli	r5,r5,2
    7598:	380e90ba 	slli	r7,r7,2
    759c:	114b883a 	add	r5,r2,r5
    75a0:	21cf883a 	add	r7,r4,r7
    75a4:	11400c2e 	bgeu	r2,r5,75d8 <__copybits+0x58>
    75a8:	2007883a 	mov	r3,r4
    75ac:	12000017 	ldw	r8,0(r2)
    75b0:	10800104 	addi	r2,r2,4
    75b4:	18c00104 	addi	r3,r3,4
    75b8:	1a3fff15 	stw	r8,-4(r3)
    75bc:	117ffb36 	bltu	r2,r5,75ac <__copybits+0x2c>
    75c0:	2985c83a 	sub	r2,r5,r6
    75c4:	10bffac4 	addi	r2,r2,-21
    75c8:	1004d0ba 	srli	r2,r2,2
    75cc:	10800044 	addi	r2,r2,1
    75d0:	100490ba 	slli	r2,r2,2
    75d4:	2089883a 	add	r4,r4,r2
    75d8:	21c0072e 	bgeu	r4,r7,75f8 <__copybits+0x78>
    75dc:	39bfffc4 	addi	r6,r7,-1
    75e0:	310dc83a 	sub	r6,r6,r4
    75e4:	300cd0ba 	srli	r6,r6,2
    75e8:	000b883a 	mov	r5,zero
    75ec:	31800044 	addi	r6,r6,1
    75f0:	300c90ba 	slli	r6,r6,2
    75f4:	00063381 	jmpi	6338 <memset>
    75f8:	f800283a 	ret

000075fc <__any_on>:
    75fc:	20c00417 	ldw	r3,16(r4)
    7600:	280dd17a 	srai	r6,r5,5
    7604:	21000504 	addi	r4,r4,20
    7608:	1980080e 	bge	r3,r6,762c <__any_on+0x30>
    760c:	180690ba 	slli	r3,r3,2
    7610:	20c5883a 	add	r2,r4,r3
    7614:	20800f2e 	bgeu	r4,r2,7654 <__any_on+0x58>
    7618:	10ffff17 	ldw	r3,-4(r2)
    761c:	10bfff04 	addi	r2,r2,-4
    7620:	183ffc26 	beq	r3,zero,7614 <__any_on+0x18>
    7624:	00800044 	movi	r2,1
    7628:	f800283a 	ret
    762c:	300490ba 	slli	r2,r6,2
    7630:	2085883a 	add	r2,r4,r2
    7634:	30fff70e 	bge	r6,r3,7614 <__any_on+0x18>
    7638:	294007cc 	andi	r5,r5,31
    763c:	283ff526 	beq	r5,zero,7614 <__any_on+0x18>
    7640:	11800017 	ldw	r6,0(r2)
    7644:	3146d83a 	srl	r3,r6,r5
    7648:	1946983a 	sll	r3,r3,r5
    764c:	30fff51e 	bne	r6,r3,7624 <__any_on+0x28>
    7650:	003ff006 	br	7614 <__any_on+0x18>
    7654:	0005883a 	mov	r2,zero
    7658:	f800283a 	ret

0000765c <_realloc_r>:
    765c:	defff504 	addi	sp,sp,-44
    7660:	dd000515 	stw	r20,20(sp)
    7664:	dfc00a15 	stw	ra,40(sp)
    7668:	df000915 	stw	fp,36(sp)
    766c:	ddc00815 	stw	r23,32(sp)
    7670:	dd800715 	stw	r22,28(sp)
    7674:	dd400615 	stw	r21,24(sp)
    7678:	dcc00415 	stw	r19,16(sp)
    767c:	dc800315 	stw	r18,12(sp)
    7680:	dc400215 	stw	r17,8(sp)
    7684:	dc000115 	stw	r16,4(sp)
    7688:	3029883a 	mov	r20,r6
    768c:	28008a26 	beq	r5,zero,78b8 <_realloc_r+0x25c>
    7690:	2821883a 	mov	r16,r5
    7694:	202b883a 	mov	r21,r4
    7698:	000e0740 	call	e074 <__malloc_lock>
    769c:	84ffff17 	ldw	r19,-4(r16)
    76a0:	a44002c4 	addi	r17,r20,11
    76a4:	04bfff04 	movi	r18,-4
    76a8:	888005f0 	cmpltui	r2,r17,23
    76ac:	85bffe04 	addi	r22,r16,-8
    76b0:	9ca4703a 	and	r18,r19,r18
    76b4:	10005a1e 	bne	r2,zero,7820 <_realloc_r+0x1c4>
    76b8:	00bffe04 	movi	r2,-8
    76bc:	88a2703a 	and	r17,r17,r2
    76c0:	88005916 	blt	r17,zero,7828 <_realloc_r+0x1cc>
    76c4:	8d005836 	bltu	r17,r20,7828 <_realloc_r+0x1cc>
    76c8:	94403b0e 	bge	r18,r17,77b8 <_realloc_r+0x15c>
    76cc:	05c00074 	movhi	r23,1
    76d0:	bdc40604 	addi	r23,r23,4120
    76d4:	b9400217 	ldw	r5,8(r23)
    76d8:	b489883a 	add	r4,r22,r18
    76dc:	20800117 	ldw	r2,4(r4)
    76e0:	29008e26 	beq	r5,r4,791c <_realloc_r+0x2c0>
    76e4:	00ffff84 	movi	r3,-2
    76e8:	10c6703a 	and	r3,r2,r3
    76ec:	20c7883a 	add	r3,r4,r3
    76f0:	18c00117 	ldw	r3,4(r3)
    76f4:	18c0004c 	andi	r3,r3,1
    76f8:	18004f1e 	bne	r3,zero,7838 <_realloc_r+0x1dc>
    76fc:	00ffff04 	movi	r3,-4
    7700:	10c4703a 	and	r2,r2,r3
    7704:	9087883a 	add	r3,r18,r2
    7708:	1c40c30e 	bge	r3,r17,7a18 <_realloc_r+0x3bc>
    770c:	9cc0004c 	andi	r19,r19,1
    7710:	98004b1e 	bne	r19,zero,7840 <_realloc_r+0x1e4>
    7714:	873ffe17 	ldw	fp,-8(r16)
    7718:	00ffff04 	movi	r3,-4
    771c:	b739c83a 	sub	fp,r22,fp
    7720:	e4c00117 	ldw	r19,4(fp)
    7724:	98c6703a 	and	r3,r19,r3
    7728:	20000426 	beq	r4,zero,773c <_realloc_r+0xe0>
    772c:	90cf883a 	add	r7,r18,r3
    7730:	388f883a 	add	r7,r7,r2
    7734:	2900c226 	beq	r5,r4,7a40 <_realloc_r+0x3e4>
    7738:	3c409e0e 	bge	r7,r17,79b4 <_realloc_r+0x358>
    773c:	e0004026 	beq	fp,zero,7840 <_realloc_r+0x1e4>
    7740:	90ef883a 	add	r23,r18,r3
    7744:	bc403e16 	blt	r23,r17,7840 <_realloc_r+0x1e4>
    7748:	e0800317 	ldw	r2,12(fp)
    774c:	e0c00217 	ldw	r3,8(fp)
    7750:	91bfff04 	addi	r6,r18,-4
    7754:	31400968 	cmpgeui	r5,r6,37
    7758:	18800315 	stw	r2,12(r3)
    775c:	10c00215 	stw	r3,8(r2)
    7760:	e1000204 	addi	r4,fp,8
    7764:	2800e71e 	bne	r5,zero,7b04 <_realloc_r+0x4a8>
    7768:	30800530 	cmpltui	r2,r6,20
    776c:	1000e31e 	bne	r2,zero,7afc <_realloc_r+0x4a0>
    7770:	80c00017 	ldw	r3,0(r16)
    7774:	30800728 	cmpgeui	r2,r6,28
    7778:	e0c00215 	stw	r3,8(fp)
    777c:	80c00117 	ldw	r3,4(r16)
    7780:	e0c00315 	stw	r3,12(fp)
    7784:	1000fa1e 	bne	r2,zero,7b70 <_realloc_r+0x514>
    7788:	84000204 	addi	r16,r16,8
    778c:	e0800404 	addi	r2,fp,16
    7790:	80c00017 	ldw	r3,0(r16)
    7794:	b825883a 	mov	r18,r23
    7798:	10c00015 	stw	r3,0(r2)
    779c:	80c00117 	ldw	r3,4(r16)
    77a0:	e02d883a 	mov	r22,fp
    77a4:	10c00115 	stw	r3,4(r2)
    77a8:	80c00217 	ldw	r3,8(r16)
    77ac:	2021883a 	mov	r16,r4
    77b0:	10c00215 	stw	r3,8(r2)
    77b4:	e4c00117 	ldw	r19,4(fp)
    77b8:	9447c83a 	sub	r3,r18,r17
    77bc:	19000430 	cmpltui	r4,r3,16
    77c0:	9cc0004c 	andi	r19,r19,1
    77c4:	b485883a 	add	r2,r22,r18
    77c8:	20004826 	beq	r4,zero,78ec <_realloc_r+0x290>
    77cc:	94e6b03a 	or	r19,r18,r19
    77d0:	b4c00115 	stw	r19,4(r22)
    77d4:	10c00117 	ldw	r3,4(r2)
    77d8:	18c00054 	ori	r3,r3,1
    77dc:	10c00115 	stw	r3,4(r2)
    77e0:	a809883a 	mov	r4,r21
    77e4:	000e0980 	call	e098 <__malloc_unlock>
    77e8:	8029883a 	mov	r20,r16
    77ec:	a005883a 	mov	r2,r20
    77f0:	dfc00a17 	ldw	ra,40(sp)
    77f4:	df000917 	ldw	fp,36(sp)
    77f8:	ddc00817 	ldw	r23,32(sp)
    77fc:	dd800717 	ldw	r22,28(sp)
    7800:	dd400617 	ldw	r21,24(sp)
    7804:	dd000517 	ldw	r20,20(sp)
    7808:	dcc00417 	ldw	r19,16(sp)
    780c:	dc800317 	ldw	r18,12(sp)
    7810:	dc400217 	ldw	r17,8(sp)
    7814:	dc000117 	ldw	r16,4(sp)
    7818:	dec00b04 	addi	sp,sp,44
    781c:	f800283a 	ret
    7820:	04400404 	movi	r17,16
    7824:	8d3fa82e 	bgeu	r17,r20,76c8 <_realloc_r+0x6c>
    7828:	00800304 	movi	r2,12
    782c:	a8800015 	stw	r2,0(r21)
    7830:	0029883a 	mov	r20,zero
    7834:	003fed06 	br	77ec <_realloc_r+0x190>
    7838:	9cc0004c 	andi	r19,r19,1
    783c:	98004e26 	beq	r19,zero,7978 <_realloc_r+0x31c>
    7840:	a00b883a 	mov	r5,r20
    7844:	a809883a 	mov	r4,r21
    7848:	00058600 	call	5860 <_malloc_r>
    784c:	1029883a 	mov	r20,r2
    7850:	1000bd26 	beq	r2,zero,7b48 <_realloc_r+0x4ec>
    7854:	84ffff17 	ldw	r19,-4(r16)
    7858:	10fffe04 	addi	r3,r2,-8
    785c:	00bfff84 	movi	r2,-2
    7860:	9884703a 	and	r2,r19,r2
    7864:	b085883a 	add	r2,r22,r2
    7868:	10c03e26 	beq	r2,r3,7964 <_realloc_r+0x308>
    786c:	91bfff04 	addi	r6,r18,-4
    7870:	30800968 	cmpgeui	r2,r6,37
    7874:	10006e1e 	bne	r2,zero,7a30 <_realloc_r+0x3d4>
    7878:	30800530 	cmpltui	r2,r6,20
    787c:	10004426 	beq	r2,zero,7990 <_realloc_r+0x334>
    7880:	a005883a 	mov	r2,r20
    7884:	8007883a 	mov	r3,r16
    7888:	19000017 	ldw	r4,0(r3)
    788c:	11000015 	stw	r4,0(r2)
    7890:	19000117 	ldw	r4,4(r3)
    7894:	11000115 	stw	r4,4(r2)
    7898:	18c00217 	ldw	r3,8(r3)
    789c:	10c00215 	stw	r3,8(r2)
    78a0:	a809883a 	mov	r4,r21
    78a4:	800b883a 	mov	r5,r16
    78a8:	0004d240 	call	4d24 <_free_r>
    78ac:	a809883a 	mov	r4,r21
    78b0:	000e0980 	call	e098 <__malloc_unlock>
    78b4:	003fcd06 	br	77ec <_realloc_r+0x190>
    78b8:	300b883a 	mov	r5,r6
    78bc:	dfc00a17 	ldw	ra,40(sp)
    78c0:	df000917 	ldw	fp,36(sp)
    78c4:	ddc00817 	ldw	r23,32(sp)
    78c8:	dd800717 	ldw	r22,28(sp)
    78cc:	dd400617 	ldw	r21,24(sp)
    78d0:	dd000517 	ldw	r20,20(sp)
    78d4:	dcc00417 	ldw	r19,16(sp)
    78d8:	dc800317 	ldw	r18,12(sp)
    78dc:	dc400217 	ldw	r17,8(sp)
    78e0:	dc000117 	ldw	r16,4(sp)
    78e4:	dec00b04 	addi	sp,sp,44
    78e8:	00058601 	jmpi	5860 <_malloc_r>
    78ec:	8ce6b03a 	or	r19,r17,r19
    78f0:	b4c00115 	stw	r19,4(r22)
    78f4:	b44b883a 	add	r5,r22,r17
    78f8:	18c00054 	ori	r3,r3,1
    78fc:	28c00115 	stw	r3,4(r5)
    7900:	10c00117 	ldw	r3,4(r2)
    7904:	29400204 	addi	r5,r5,8
    7908:	a809883a 	mov	r4,r21
    790c:	18c00054 	ori	r3,r3,1
    7910:	10c00115 	stw	r3,4(r2)
    7914:	0004d240 	call	4d24 <_free_r>
    7918:	003fb106 	br	77e0 <_realloc_r+0x184>
    791c:	00ffff04 	movi	r3,-4
    7920:	10c4703a 	and	r2,r2,r3
    7924:	1487883a 	add	r3,r2,r18
    7928:	89800404 	addi	r6,r17,16
    792c:	19bf7716 	blt	r3,r6,770c <_realloc_r+0xb0>
    7930:	b46d883a 	add	r22,r22,r17
    7934:	1c45c83a 	sub	r2,r3,r17
    7938:	bd800215 	stw	r22,8(r23)
    793c:	10800054 	ori	r2,r2,1
    7940:	b0800115 	stw	r2,4(r22)
    7944:	80bfff17 	ldw	r2,-4(r16)
    7948:	a809883a 	mov	r4,r21
    794c:	8029883a 	mov	r20,r16
    7950:	1080004c 	andi	r2,r2,1
    7954:	1444b03a 	or	r2,r2,r17
    7958:	80bfff15 	stw	r2,-4(r16)
    795c:	000e0980 	call	e098 <__malloc_unlock>
    7960:	003fa206 	br	77ec <_realloc_r+0x190>
    7964:	a0bfff17 	ldw	r2,-4(r20)
    7968:	00ffff04 	movi	r3,-4
    796c:	10c4703a 	and	r2,r2,r3
    7970:	90a5883a 	add	r18,r18,r2
    7974:	003f9006 	br	77b8 <_realloc_r+0x15c>
    7978:	873ffe17 	ldw	fp,-8(r16)
    797c:	00bfff04 	movi	r2,-4
    7980:	b739c83a 	sub	fp,r22,fp
    7984:	e0c00117 	ldw	r3,4(fp)
    7988:	1886703a 	and	r3,r3,r2
    798c:	003f6b06 	br	773c <_realloc_r+0xe0>
    7990:	80c00017 	ldw	r3,0(r16)
    7994:	30800728 	cmpgeui	r2,r6,28
    7998:	a0c00015 	stw	r3,0(r20)
    799c:	80c00117 	ldw	r3,4(r16)
    79a0:	a0c00115 	stw	r3,4(r20)
    79a4:	10004c1e 	bne	r2,zero,7ad8 <_realloc_r+0x47c>
    79a8:	80c00204 	addi	r3,r16,8
    79ac:	a0800204 	addi	r2,r20,8
    79b0:	003fb506 	br	7888 <_realloc_r+0x22c>
    79b4:	20800317 	ldw	r2,12(r4)
    79b8:	20c00217 	ldw	r3,8(r4)
    79bc:	91bfff04 	addi	r6,r18,-4
    79c0:	31400968 	cmpgeui	r5,r6,37
    79c4:	18800315 	stw	r2,12(r3)
    79c8:	10c00215 	stw	r3,8(r2)
    79cc:	e0c00217 	ldw	r3,8(fp)
    79d0:	e0800317 	ldw	r2,12(fp)
    79d4:	e1000204 	addi	r4,fp,8
    79d8:	18800315 	stw	r2,12(r3)
    79dc:	10c00215 	stw	r3,8(r2)
    79e0:	2800511e 	bne	r5,zero,7b28 <_realloc_r+0x4cc>
    79e4:	30800530 	cmpltui	r2,r6,20
    79e8:	10004d1e 	bne	r2,zero,7b20 <_realloc_r+0x4c4>
    79ec:	80c00017 	ldw	r3,0(r16)
    79f0:	30800728 	cmpgeui	r2,r6,28
    79f4:	e0c00215 	stw	r3,8(fp)
    79f8:	80c00117 	ldw	r3,4(r16)
    79fc:	e0c00315 	stw	r3,12(fp)
    7a00:	1000641e 	bne	r2,zero,7b94 <_realloc_r+0x538>
    7a04:	84000204 	addi	r16,r16,8
    7a08:	e0800404 	addi	r2,fp,16
    7a0c:	80c00017 	ldw	r3,0(r16)
    7a10:	3825883a 	mov	r18,r7
    7a14:	003f6006 	br	7798 <_realloc_r+0x13c>
    7a18:	20800317 	ldw	r2,12(r4)
    7a1c:	21000217 	ldw	r4,8(r4)
    7a20:	1825883a 	mov	r18,r3
    7a24:	20800315 	stw	r2,12(r4)
    7a28:	11000215 	stw	r4,8(r2)
    7a2c:	003f6206 	br	77b8 <_realloc_r+0x15c>
    7a30:	800b883a 	mov	r5,r16
    7a34:	a009883a 	mov	r4,r20
    7a38:	00062100 	call	6210 <memmove>
    7a3c:	003f9806 	br	78a0 <_realloc_r+0x244>
    7a40:	88800404 	addi	r2,r17,16
    7a44:	38bf3d16 	blt	r7,r2,773c <_realloc_r+0xe0>
    7a48:	e0800317 	ldw	r2,12(fp)
    7a4c:	e0c00217 	ldw	r3,8(fp)
    7a50:	91bfff04 	addi	r6,r18,-4
    7a54:	31000968 	cmpgeui	r4,r6,37
    7a58:	18800315 	stw	r2,12(r3)
    7a5c:	10c00215 	stw	r3,8(r2)
    7a60:	e5000204 	addi	r20,fp,8
    7a64:	2000561e 	bne	r4,zero,7bc0 <_realloc_r+0x564>
    7a68:	30800530 	cmpltui	r2,r6,20
    7a6c:	1000521e 	bne	r2,zero,7bb8 <_realloc_r+0x55c>
    7a70:	80c00017 	ldw	r3,0(r16)
    7a74:	30800728 	cmpgeui	r2,r6,28
    7a78:	e0c00215 	stw	r3,8(fp)
    7a7c:	80c00117 	ldw	r3,4(r16)
    7a80:	e0c00315 	stw	r3,12(fp)
    7a84:	1000541e 	bne	r2,zero,7bd8 <_realloc_r+0x57c>
    7a88:	84000204 	addi	r16,r16,8
    7a8c:	e0800404 	addi	r2,fp,16
    7a90:	80c00017 	ldw	r3,0(r16)
    7a94:	10c00015 	stw	r3,0(r2)
    7a98:	80c00117 	ldw	r3,4(r16)
    7a9c:	10c00115 	stw	r3,4(r2)
    7aa0:	80c00217 	ldw	r3,8(r16)
    7aa4:	10c00215 	stw	r3,8(r2)
    7aa8:	e447883a 	add	r3,fp,r17
    7aac:	3c45c83a 	sub	r2,r7,r17
    7ab0:	b8c00215 	stw	r3,8(r23)
    7ab4:	10800054 	ori	r2,r2,1
    7ab8:	18800115 	stw	r2,4(r3)
    7abc:	e0800117 	ldw	r2,4(fp)
    7ac0:	a809883a 	mov	r4,r21
    7ac4:	1080004c 	andi	r2,r2,1
    7ac8:	1444b03a 	or	r2,r2,r17
    7acc:	e0800115 	stw	r2,4(fp)
    7ad0:	000e0980 	call	e098 <__malloc_unlock>
    7ad4:	003f4506 	br	77ec <_realloc_r+0x190>
    7ad8:	80800217 	ldw	r2,8(r16)
    7adc:	31800920 	cmpeqi	r6,r6,36
    7ae0:	a0800215 	stw	r2,8(r20)
    7ae4:	80800317 	ldw	r2,12(r16)
    7ae8:	a0800315 	stw	r2,12(r20)
    7aec:	3000191e 	bne	r6,zero,7b54 <_realloc_r+0x4f8>
    7af0:	80c00404 	addi	r3,r16,16
    7af4:	a0800404 	addi	r2,r20,16
    7af8:	003f6306 	br	7888 <_realloc_r+0x22c>
    7afc:	2005883a 	mov	r2,r4
    7b00:	003f2306 	br	7790 <_realloc_r+0x134>
    7b04:	800b883a 	mov	r5,r16
    7b08:	00062100 	call	6210 <memmove>
    7b0c:	1021883a 	mov	r16,r2
    7b10:	e4c00117 	ldw	r19,4(fp)
    7b14:	b825883a 	mov	r18,r23
    7b18:	e02d883a 	mov	r22,fp
    7b1c:	003f2606 	br	77b8 <_realloc_r+0x15c>
    7b20:	2005883a 	mov	r2,r4
    7b24:	003fb906 	br	7a0c <_realloc_r+0x3b0>
    7b28:	800b883a 	mov	r5,r16
    7b2c:	d9c00015 	stw	r7,0(sp)
    7b30:	00062100 	call	6210 <memmove>
    7b34:	d9c00017 	ldw	r7,0(sp)
    7b38:	1021883a 	mov	r16,r2
    7b3c:	e02d883a 	mov	r22,fp
    7b40:	3825883a 	mov	r18,r7
    7b44:	003f1c06 	br	77b8 <_realloc_r+0x15c>
    7b48:	a809883a 	mov	r4,r21
    7b4c:	000e0980 	call	e098 <__malloc_unlock>
    7b50:	003f3706 	br	7830 <_realloc_r+0x1d4>
    7b54:	81000417 	ldw	r4,16(r16)
    7b58:	80c00604 	addi	r3,r16,24
    7b5c:	a0800604 	addi	r2,r20,24
    7b60:	a1000415 	stw	r4,16(r20)
    7b64:	81000517 	ldw	r4,20(r16)
    7b68:	a1000515 	stw	r4,20(r20)
    7b6c:	003f4606 	br	7888 <_realloc_r+0x22c>
    7b70:	80800217 	ldw	r2,8(r16)
    7b74:	31800920 	cmpeqi	r6,r6,36
    7b78:	e0800415 	stw	r2,16(fp)
    7b7c:	80800317 	ldw	r2,12(r16)
    7b80:	e0800515 	stw	r2,20(fp)
    7b84:	30001d1e 	bne	r6,zero,7bfc <_realloc_r+0x5a0>
    7b88:	84000404 	addi	r16,r16,16
    7b8c:	e0800604 	addi	r2,fp,24
    7b90:	003eff06 	br	7790 <_realloc_r+0x134>
    7b94:	80800217 	ldw	r2,8(r16)
    7b98:	31800920 	cmpeqi	r6,r6,36
    7b9c:	e0800415 	stw	r2,16(fp)
    7ba0:	80800317 	ldw	r2,12(r16)
    7ba4:	e0800515 	stw	r2,20(fp)
    7ba8:	30001b1e 	bne	r6,zero,7c18 <_realloc_r+0x5bc>
    7bac:	84000404 	addi	r16,r16,16
    7bb0:	e0800604 	addi	r2,fp,24
    7bb4:	003f9506 	br	7a0c <_realloc_r+0x3b0>
    7bb8:	a005883a 	mov	r2,r20
    7bbc:	003fb406 	br	7a90 <_realloc_r+0x434>
    7bc0:	800b883a 	mov	r5,r16
    7bc4:	a009883a 	mov	r4,r20
    7bc8:	d9c00015 	stw	r7,0(sp)
    7bcc:	00062100 	call	6210 <memmove>
    7bd0:	d9c00017 	ldw	r7,0(sp)
    7bd4:	003fb406 	br	7aa8 <_realloc_r+0x44c>
    7bd8:	80800217 	ldw	r2,8(r16)
    7bdc:	31800920 	cmpeqi	r6,r6,36
    7be0:	e0800415 	stw	r2,16(fp)
    7be4:	80800317 	ldw	r2,12(r16)
    7be8:	e0800515 	stw	r2,20(fp)
    7bec:	3000111e 	bne	r6,zero,7c34 <_realloc_r+0x5d8>
    7bf0:	84000404 	addi	r16,r16,16
    7bf4:	e0800604 	addi	r2,fp,24
    7bf8:	003fa506 	br	7a90 <_realloc_r+0x434>
    7bfc:	80c00417 	ldw	r3,16(r16)
    7c00:	84000604 	addi	r16,r16,24
    7c04:	e0800804 	addi	r2,fp,32
    7c08:	e0c00615 	stw	r3,24(fp)
    7c0c:	80ffff17 	ldw	r3,-4(r16)
    7c10:	e0c00715 	stw	r3,28(fp)
    7c14:	003ede06 	br	7790 <_realloc_r+0x134>
    7c18:	80c00417 	ldw	r3,16(r16)
    7c1c:	84000604 	addi	r16,r16,24
    7c20:	e0800804 	addi	r2,fp,32
    7c24:	e0c00615 	stw	r3,24(fp)
    7c28:	80ffff17 	ldw	r3,-4(r16)
    7c2c:	e0c00715 	stw	r3,28(fp)
    7c30:	003f7606 	br	7a0c <_realloc_r+0x3b0>
    7c34:	80c00417 	ldw	r3,16(r16)
    7c38:	84000604 	addi	r16,r16,24
    7c3c:	e0800804 	addi	r2,fp,32
    7c40:	e0c00615 	stw	r3,24(fp)
    7c44:	80ffff17 	ldw	r3,-4(r16)
    7c48:	e0c00715 	stw	r3,28(fp)
    7c4c:	003f9006 	br	7a90 <_realloc_r+0x434>

00007c50 <_sbrk_r>:
    7c50:	defffe04 	addi	sp,sp,-8
    7c54:	dc000015 	stw	r16,0(sp)
    7c58:	00800074 	movhi	r2,1
    7c5c:	2021883a 	mov	r16,r4
    7c60:	2809883a 	mov	r4,r5
    7c64:	dfc00115 	stw	ra,4(sp)
    7c68:	1010ec15 	stw	zero,17328(r2)
    7c6c:	000e2700 	call	e270 <sbrk>
    7c70:	10ffffd8 	cmpnei	r3,r2,-1
    7c74:	18000426 	beq	r3,zero,7c88 <_sbrk_r+0x38>
    7c78:	dfc00117 	ldw	ra,4(sp)
    7c7c:	dc000017 	ldw	r16,0(sp)
    7c80:	dec00204 	addi	sp,sp,8
    7c84:	f800283a 	ret
    7c88:	00c00074 	movhi	r3,1
    7c8c:	18d0ec17 	ldw	r3,17328(r3)
    7c90:	183ff926 	beq	r3,zero,7c78 <_sbrk_r+0x28>
    7c94:	80c00015 	stw	r3,0(r16)
    7c98:	dfc00117 	ldw	ra,4(sp)
    7c9c:	dc000017 	ldw	r16,0(sp)
    7ca0:	dec00204 	addi	sp,sp,8
    7ca4:	f800283a 	ret

00007ca8 <__sread>:
    7ca8:	defffe04 	addi	sp,sp,-8
    7cac:	dc000015 	stw	r16,0(sp)
    7cb0:	2821883a 	mov	r16,r5
    7cb4:	2940038f 	ldh	r5,14(r5)
    7cb8:	dfc00115 	stw	ra,4(sp)
    7cbc:	0009abc0 	call	9abc <_read_r>
    7cc0:	10000716 	blt	r2,zero,7ce0 <__sread+0x38>
    7cc4:	80c01417 	ldw	r3,80(r16)
    7cc8:	1887883a 	add	r3,r3,r2
    7ccc:	80c01415 	stw	r3,80(r16)
    7cd0:	dfc00117 	ldw	ra,4(sp)
    7cd4:	dc000017 	ldw	r16,0(sp)
    7cd8:	dec00204 	addi	sp,sp,8
    7cdc:	f800283a 	ret
    7ce0:	80c0030b 	ldhu	r3,12(r16)
    7ce4:	18fbffcc 	andi	r3,r3,61439
    7ce8:	80c0030d 	sth	r3,12(r16)
    7cec:	dfc00117 	ldw	ra,4(sp)
    7cf0:	dc000017 	ldw	r16,0(sp)
    7cf4:	dec00204 	addi	sp,sp,8
    7cf8:	f800283a 	ret

00007cfc <__seofread>:
    7cfc:	0005883a 	mov	r2,zero
    7d00:	f800283a 	ret

00007d04 <__swrite>:
    7d04:	2880030b 	ldhu	r2,12(r5)
    7d08:	defffb04 	addi	sp,sp,-20
    7d0c:	dcc00315 	stw	r19,12(sp)
    7d10:	dc800215 	stw	r18,8(sp)
    7d14:	dc400115 	stw	r17,4(sp)
    7d18:	dc000015 	stw	r16,0(sp)
    7d1c:	dfc00415 	stw	ra,16(sp)
    7d20:	10c0400c 	andi	r3,r2,256
    7d24:	2821883a 	mov	r16,r5
    7d28:	2023883a 	mov	r17,r4
    7d2c:	3025883a 	mov	r18,r6
    7d30:	3827883a 	mov	r19,r7
    7d34:	18000d1e 	bne	r3,zero,7d6c <__swrite+0x68>
    7d38:	8140038f 	ldh	r5,14(r16)
    7d3c:	10bbffcc 	andi	r2,r2,61439
    7d40:	980f883a 	mov	r7,r19
    7d44:	900d883a 	mov	r6,r18
    7d48:	8809883a 	mov	r4,r17
    7d4c:	8080030d 	sth	r2,12(r16)
    7d50:	dfc00417 	ldw	ra,16(sp)
    7d54:	dcc00317 	ldw	r19,12(sp)
    7d58:	dc800217 	ldw	r18,8(sp)
    7d5c:	dc400117 	ldw	r17,4(sp)
    7d60:	dc000017 	ldw	r16,0(sp)
    7d64:	dec00504 	addi	sp,sp,20
    7d68:	00092541 	jmpi	9254 <_write_r>
    7d6c:	2940038f 	ldh	r5,14(r5)
    7d70:	01c00084 	movi	r7,2
    7d74:	000d883a 	mov	r6,zero
    7d78:	0009a080 	call	9a08 <_lseek_r>
    7d7c:	8080030b 	ldhu	r2,12(r16)
    7d80:	003fed06 	br	7d38 <__swrite+0x34>

00007d84 <__sseek>:
    7d84:	defffe04 	addi	sp,sp,-8
    7d88:	dc000015 	stw	r16,0(sp)
    7d8c:	2821883a 	mov	r16,r5
    7d90:	2940038f 	ldh	r5,14(r5)
    7d94:	dfc00115 	stw	ra,4(sp)
    7d98:	0009a080 	call	9a08 <_lseek_r>
    7d9c:	10ffffd8 	cmpnei	r3,r2,-1
    7da0:	18000826 	beq	r3,zero,7dc4 <__sseek+0x40>
    7da4:	80c0030b 	ldhu	r3,12(r16)
    7da8:	80801415 	stw	r2,80(r16)
    7dac:	18c40014 	ori	r3,r3,4096
    7db0:	80c0030d 	sth	r3,12(r16)
    7db4:	dfc00117 	ldw	ra,4(sp)
    7db8:	dc000017 	ldw	r16,0(sp)
    7dbc:	dec00204 	addi	sp,sp,8
    7dc0:	f800283a 	ret
    7dc4:	80c0030b 	ldhu	r3,12(r16)
    7dc8:	18fbffcc 	andi	r3,r3,61439
    7dcc:	80c0030d 	sth	r3,12(r16)
    7dd0:	dfc00117 	ldw	ra,4(sp)
    7dd4:	dc000017 	ldw	r16,0(sp)
    7dd8:	dec00204 	addi	sp,sp,8
    7ddc:	f800283a 	ret

00007de0 <__sclose>:
    7de0:	2940038f 	ldh	r5,14(r5)
    7de4:	00092b81 	jmpi	92b8 <_close_r>

00007de8 <__sprint_r.part.0>:
    7de8:	28801917 	ldw	r2,100(r5)
    7dec:	defff604 	addi	sp,sp,-40
    7df0:	dcc00315 	stw	r19,12(sp)
    7df4:	dfc00915 	stw	ra,36(sp)
    7df8:	df000815 	stw	fp,32(sp)
    7dfc:	ddc00715 	stw	r23,28(sp)
    7e00:	dd800615 	stw	r22,24(sp)
    7e04:	dd400515 	stw	r21,20(sp)
    7e08:	dd000415 	stw	r20,16(sp)
    7e0c:	dc800215 	stw	r18,8(sp)
    7e10:	dc400115 	stw	r17,4(sp)
    7e14:	dc000015 	stw	r16,0(sp)
    7e18:	1088000c 	andi	r2,r2,8192
    7e1c:	3027883a 	mov	r19,r6
    7e20:	10002c26 	beq	r2,zero,7ed4 <__sprint_r.part.0+0xec>
    7e24:	30800217 	ldw	r2,8(r6)
    7e28:	35000017 	ldw	r20,0(r6)
    7e2c:	2821883a 	mov	r16,r5
    7e30:	2023883a 	mov	r17,r4
    7e34:	05bfff04 	movi	r22,-4
    7e38:	10002426 	beq	r2,zero,7ecc <__sprint_r.part.0+0xe4>
    7e3c:	a5400117 	ldw	r21,4(r20)
    7e40:	a5c00017 	ldw	r23,0(r20)
    7e44:	a824d0ba 	srli	r18,r21,2
    7e48:	90001b26 	beq	r18,zero,7eb8 <__sprint_r.part.0+0xd0>
    7e4c:	0039883a 	mov	fp,zero
    7e50:	00000206 	br	7e5c <__sprint_r.part.0+0x74>
    7e54:	bdc00104 	addi	r23,r23,4
    7e58:	97001626 	beq	r18,fp,7eb4 <__sprint_r.part.0+0xcc>
    7e5c:	b9400017 	ldw	r5,0(r23)
    7e60:	800d883a 	mov	r6,r16
    7e64:	8809883a 	mov	r4,r17
    7e68:	00097c00 	call	97c0 <_fputwc_r>
    7e6c:	10bfffe0 	cmpeqi	r2,r2,-1
    7e70:	e7000044 	addi	fp,fp,1
    7e74:	103ff726 	beq	r2,zero,7e54 <__sprint_r.part.0+0x6c>
    7e78:	00bfffc4 	movi	r2,-1
    7e7c:	98000215 	stw	zero,8(r19)
    7e80:	98000115 	stw	zero,4(r19)
    7e84:	dfc00917 	ldw	ra,36(sp)
    7e88:	df000817 	ldw	fp,32(sp)
    7e8c:	ddc00717 	ldw	r23,28(sp)
    7e90:	dd800617 	ldw	r22,24(sp)
    7e94:	dd400517 	ldw	r21,20(sp)
    7e98:	dd000417 	ldw	r20,16(sp)
    7e9c:	dcc00317 	ldw	r19,12(sp)
    7ea0:	dc800217 	ldw	r18,8(sp)
    7ea4:	dc400117 	ldw	r17,4(sp)
    7ea8:	dc000017 	ldw	r16,0(sp)
    7eac:	dec00a04 	addi	sp,sp,40
    7eb0:	f800283a 	ret
    7eb4:	98800217 	ldw	r2,8(r19)
    7eb8:	adaa703a 	and	r21,r21,r22
    7ebc:	1545c83a 	sub	r2,r2,r21
    7ec0:	98800215 	stw	r2,8(r19)
    7ec4:	a5000204 	addi	r20,r20,8
    7ec8:	103fdc1e 	bne	r2,zero,7e3c <__sprint_r.part.0+0x54>
    7ecc:	0005883a 	mov	r2,zero
    7ed0:	003fea06 	br	7e7c <__sprint_r.part.0+0x94>
    7ed4:	000502c0 	call	502c <__sfvwrite_r>
    7ed8:	003fe806 	br	7e7c <__sprint_r.part.0+0x94>

00007edc <__sprint_r>:
    7edc:	30c00217 	ldw	r3,8(r6)
    7ee0:	18000126 	beq	r3,zero,7ee8 <__sprint_r+0xc>
    7ee4:	0007de81 	jmpi	7de8 <__sprint_r.part.0>
    7ee8:	30000115 	stw	zero,4(r6)
    7eec:	0005883a 	mov	r2,zero
    7ef0:	f800283a 	ret

00007ef4 <___vfiprintf_internal_r>:
    7ef4:	deffcf04 	addi	sp,sp,-196
    7ef8:	dd002b15 	stw	r20,172(sp)
    7efc:	dc802915 	stw	r18,164(sp)
    7f00:	dfc03015 	stw	ra,192(sp)
    7f04:	df002f15 	stw	fp,188(sp)
    7f08:	ddc02e15 	stw	r23,184(sp)
    7f0c:	dd802d15 	stw	r22,180(sp)
    7f10:	dd402c15 	stw	r21,176(sp)
    7f14:	dcc02a15 	stw	r19,168(sp)
    7f18:	dc402815 	stw	r17,160(sp)
    7f1c:	dc002715 	stw	r16,156(sp)
    7f20:	d9000015 	stw	r4,0(sp)
    7f24:	d9c00315 	stw	r7,12(sp)
    7f28:	2825883a 	mov	r18,r5
    7f2c:	3029883a 	mov	r20,r6
    7f30:	20000226 	beq	r4,zero,7f3c <___vfiprintf_internal_r+0x48>
    7f34:	20800e17 	ldw	r2,56(r4)
    7f38:	1001b726 	beq	r2,zero,8618 <___vfiprintf_internal_r+0x724>
    7f3c:	9080030b 	ldhu	r2,12(r18)
    7f40:	10c8000c 	andi	r3,r2,8192
    7f44:	1800071e 	bne	r3,zero,7f64 <___vfiprintf_internal_r+0x70>
    7f48:	90c01917 	ldw	r3,100(r18)
    7f4c:	11080014 	ori	r4,r2,8192
    7f50:	00b7ffc4 	movi	r2,-8193
    7f54:	1886703a 	and	r3,r3,r2
    7f58:	9100030d 	sth	r4,12(r18)
    7f5c:	2005883a 	mov	r2,r4
    7f60:	90c01915 	stw	r3,100(r18)
    7f64:	10c0020c 	andi	r3,r2,8
    7f68:	1800ff26 	beq	r3,zero,8368 <___vfiprintf_internal_r+0x474>
    7f6c:	90c00417 	ldw	r3,16(r18)
    7f70:	1800fd26 	beq	r3,zero,8368 <___vfiprintf_internal_r+0x474>
    7f74:	1080068c 	andi	r2,r2,26
    7f78:	10800298 	cmpnei	r2,r2,10
    7f7c:	10010226 	beq	r2,zero,8388 <___vfiprintf_internal_r+0x494>
    7f80:	dcc01704 	addi	r19,sp,92
    7f84:	05c00074 	movhi	r23,1
    7f88:	dcc00a15 	stw	r19,40(sp)
    7f8c:	d8000c15 	stw	zero,48(sp)
    7f90:	d8000b15 	stw	zero,44(sp)
    7f94:	9811883a 	mov	r8,r19
    7f98:	d8000515 	stw	zero,20(sp)
    7f9c:	d8000115 	stw	zero,4(sp)
    7fa0:	bdc1f304 	addi	r23,r23,1996
    7fa4:	a0800007 	ldb	r2,0(r20)
    7fa8:	1000dd26 	beq	r2,zero,8320 <___vfiprintf_internal_r+0x42c>
    7fac:	a021883a 	mov	r16,r20
    7fb0:	00000306 	br	7fc0 <___vfiprintf_internal_r+0xcc>
    7fb4:	80800047 	ldb	r2,1(r16)
    7fb8:	84000044 	addi	r16,r16,1
    7fbc:	10011a26 	beq	r2,zero,8428 <___vfiprintf_internal_r+0x534>
    7fc0:	10800958 	cmpnei	r2,r2,37
    7fc4:	103ffb1e 	bne	r2,zero,7fb4 <___vfiprintf_internal_r+0xc0>
    7fc8:	8523c83a 	sub	r17,r16,r20
    7fcc:	8501181e 	bne	r16,r20,8430 <___vfiprintf_internal_r+0x53c>
    7fd0:	80800003 	ldbu	r2,0(r16)
    7fd4:	10803fcc 	andi	r2,r2,255
    7fd8:	1080201c 	xori	r2,r2,128
    7fdc:	10bfe004 	addi	r2,r2,-128
    7fe0:	1000cf26 	beq	r2,zero,8320 <___vfiprintf_internal_r+0x42c>
    7fe4:	80800047 	ldb	r2,1(r16)
    7fe8:	85000044 	addi	r20,r16,1
    7fec:	d8000945 	stb	zero,37(sp)
    7ff0:	027fffc4 	movi	r9,-1
    7ff4:	0023883a 	mov	r17,zero
    7ff8:	0021883a 	mov	r16,zero
    7ffc:	a5000044 	addi	r20,r20,1
    8000:	10fff804 	addi	r3,r2,-32
    8004:	19001668 	cmpgeui	r4,r3,89
    8008:	20006c1e 	bne	r4,zero,81bc <___vfiprintf_internal_r+0x2c8>
    800c:	180690ba 	slli	r3,r3,2
    8010:	01000074 	movhi	r4,1
    8014:	1909883a 	add	r4,r3,r4
    8018:	20e00817 	ldw	r3,-32736(r4)
    801c:	1800683a 	jmp	r3
    8020:	000086c4 	movi	zero,539
    8024:	000081bc 	xorhi	zero,zero,518
    8028:	000081bc 	xorhi	zero,zero,518
    802c:	000086b8 	rdprs	zero,zero,538
    8030:	000081bc 	xorhi	zero,zero,518
    8034:	000081bc 	xorhi	zero,zero,518
    8038:	000081bc 	xorhi	zero,zero,518
    803c:	000081bc 	xorhi	zero,zero,518
    8040:	000081bc 	xorhi	zero,zero,518
    8044:	000081bc 	xorhi	zero,zero,518
    8048:	0000862c 	andhi	zero,zero,536
    804c:	000086a8 	cmpgeui	zero,zero,538
    8050:	000081bc 	xorhi	zero,zero,518
    8054:	00008644 	movi	zero,537
    8058:	00008650 	cmplti	zero,zero,537
    805c:	000081bc 	xorhi	zero,zero,518
    8060:	0000869c 	xori	zero,zero,538
    8064:	00008184 	movi	zero,518
    8068:	00008184 	movi	zero,518
    806c:	00008184 	movi	zero,518
    8070:	00008184 	movi	zero,518
    8074:	00008184 	movi	zero,518
    8078:	00008184 	movi	zero,518
    807c:	00008184 	movi	zero,518
    8080:	00008184 	movi	zero,518
    8084:	00008184 	movi	zero,518
    8088:	000081bc 	xorhi	zero,zero,518
    808c:	000081bc 	xorhi	zero,zero,518
    8090:	000081bc 	xorhi	zero,zero,518
    8094:	000081bc 	xorhi	zero,zero,518
    8098:	000081bc 	xorhi	zero,zero,518
    809c:	000081bc 	xorhi	zero,zero,518
    80a0:	000081bc 	xorhi	zero,zero,518
    80a4:	000081bc 	xorhi	zero,zero,518
    80a8:	000081bc 	xorhi	zero,zero,518
    80ac:	000081bc 	xorhi	zero,zero,518
    80b0:	000083d0 	cmplti	zero,zero,527
    80b4:	000081bc 	xorhi	zero,zero,518
    80b8:	000081bc 	xorhi	zero,zero,518
    80bc:	000081bc 	xorhi	zero,zero,518
    80c0:	000081bc 	xorhi	zero,zero,518
    80c4:	000081bc 	xorhi	zero,zero,518
    80c8:	000081bc 	xorhi	zero,zero,518
    80cc:	000081bc 	xorhi	zero,zero,518
    80d0:	000081bc 	xorhi	zero,zero,518
    80d4:	000081bc 	xorhi	zero,zero,518
    80d8:	000081bc 	xorhi	zero,zero,518
    80dc:	000087e0 	cmpeqi	zero,zero,543
    80e0:	000081bc 	xorhi	zero,zero,518
    80e4:	000081bc 	xorhi	zero,zero,518
    80e8:	000081bc 	xorhi	zero,zero,518
    80ec:	000081bc 	xorhi	zero,zero,518
    80f0:	000081bc 	xorhi	zero,zero,518
    80f4:	0000877c 	xorhi	zero,zero,541
    80f8:	000081bc 	xorhi	zero,zero,518
    80fc:	000081bc 	xorhi	zero,zero,518
    8100:	00008f54 	movui	zero,573
    8104:	000081bc 	xorhi	zero,zero,518
    8108:	000081bc 	xorhi	zero,zero,518
    810c:	000081bc 	xorhi	zero,zero,518
    8110:	000081bc 	xorhi	zero,zero,518
    8114:	000081bc 	xorhi	zero,zero,518
    8118:	000081bc 	xorhi	zero,zero,518
    811c:	000081bc 	xorhi	zero,zero,518
    8120:	000081bc 	xorhi	zero,zero,518
    8124:	000081bc 	xorhi	zero,zero,518
    8128:	000081bc 	xorhi	zero,zero,518
    812c:	00008754 	movui	zero,541
    8130:	000083d4 	movui	zero,527
    8134:	000081bc 	xorhi	zero,zero,518
    8138:	000081bc 	xorhi	zero,zero,518
    813c:	000081bc 	xorhi	zero,zero,518
    8140:	00008748 	cmpgei	zero,zero,541
    8144:	000083d4 	movui	zero,527
    8148:	000081bc 	xorhi	zero,zero,518
    814c:	000081bc 	xorhi	zero,zero,518
    8150:	00008734 	movhi	zero,540
    8154:	000081bc 	xorhi	zero,zero,518
    8158:	00008704 	movi	zero,540
    815c:	00008fb0 	cmpltui	zero,zero,574
    8160:	000088f4 	movhi	zero,547
    8164:	000088e8 	cmpgeui	zero,zero,547
    8168:	000081bc 	xorhi	zero,zero,518
    816c:	00008890 	cmplti	zero,zero,546
    8170:	000081bc 	xorhi	zero,zero,518
    8174:	00008f4c 	andi	zero,zero,573
    8178:	000081bc 	xorhi	zero,zero,518
    817c:	000081bc 	xorhi	zero,zero,518
    8180:	00008fdc 	xori	zero,zero,575
    8184:	0023883a 	mov	r17,zero
    8188:	113ff404 	addi	r4,r2,-48
    818c:	880690ba 	slli	r3,r17,2
    8190:	a0800007 	ldb	r2,0(r20)
    8194:	a5000044 	addi	r20,r20,1
    8198:	1c47883a 	add	r3,r3,r17
    819c:	18c7883a 	add	r3,r3,r3
    81a0:	20e3883a 	add	r17,r4,r3
    81a4:	113ff404 	addi	r4,r2,-48
    81a8:	20c002b0 	cmpltui	r3,r4,10
    81ac:	183ff71e 	bne	r3,zero,818c <___vfiprintf_internal_r+0x298>
    81b0:	10fff804 	addi	r3,r2,-32
    81b4:	19001668 	cmpgeui	r4,r3,89
    81b8:	203f9426 	beq	r4,zero,800c <___vfiprintf_internal_r+0x118>
    81bc:	10005826 	beq	r2,zero,8320 <___vfiprintf_internal_r+0x42c>
    81c0:	d8800d05 	stb	r2,52(sp)
    81c4:	d8000945 	stb	zero,37(sp)
    81c8:	05800044 	movi	r22,1
    81cc:	05400044 	movi	r21,1
    81d0:	df000d04 	addi	fp,sp,52
    81d4:	0013883a 	mov	r9,zero
    81d8:	8340008c 	andi	r13,r16,2
    81dc:	68000126 	beq	r13,zero,81e4 <___vfiprintf_internal_r+0x2f0>
    81e0:	b5800084 	addi	r22,r22,2
    81e4:	d9000b17 	ldw	r4,44(sp)
    81e8:	8300210c 	andi	r12,r16,132
    81ec:	d8800c17 	ldw	r2,48(sp)
    81f0:	21800044 	addi	r6,r4,1
    81f4:	300b883a 	mov	r5,r6
    81f8:	6000021e 	bne	r12,zero,8204 <___vfiprintf_internal_r+0x310>
    81fc:	8d87c83a 	sub	r3,r17,r22
    8200:	00c29116 	blt	zero,r3,8c48 <___vfiprintf_internal_r+0xd54>
    8204:	d8c00947 	ldb	r3,37(sp)
    8208:	18000c26 	beq	r3,zero,823c <___vfiprintf_internal_r+0x348>
    820c:	d8c00944 	addi	r3,sp,37
    8210:	10800044 	addi	r2,r2,1
    8214:	40c00015 	stw	r3,0(r8)
    8218:	00c00044 	movi	r3,1
    821c:	40c00115 	stw	r3,4(r8)
    8220:	d8800c15 	stw	r2,48(sp)
    8224:	d9400b15 	stw	r5,44(sp)
    8228:	28c00208 	cmpgei	r3,r5,8
    822c:	18026a1e 	bne	r3,zero,8bd8 <___vfiprintf_internal_r+0xce4>
    8230:	2809883a 	mov	r4,r5
    8234:	42000204 	addi	r8,r8,8
    8238:	29400044 	addi	r5,r5,1
    823c:	68001726 	beq	r13,zero,829c <___vfiprintf_internal_r+0x3a8>
    8240:	d8c00984 	addi	r3,sp,38
    8244:	10800084 	addi	r2,r2,2
    8248:	40c00015 	stw	r3,0(r8)
    824c:	00c00084 	movi	r3,2
    8250:	40c00115 	stw	r3,4(r8)
    8254:	d8800c15 	stw	r2,48(sp)
    8258:	d9400b15 	stw	r5,44(sp)
    825c:	28c00208 	cmpgei	r3,r5,8
    8260:	18027526 	beq	r3,zero,8c38 <___vfiprintf_internal_r+0xd44>
    8264:	1002f826 	beq	r2,zero,8e48 <___vfiprintf_internal_r+0xf54>
    8268:	d9000017 	ldw	r4,0(sp)
    826c:	d9800a04 	addi	r6,sp,40
    8270:	900b883a 	mov	r5,r18
    8274:	da400415 	stw	r9,16(sp)
    8278:	db000215 	stw	r12,8(sp)
    827c:	0007de80 	call	7de8 <__sprint_r.part.0>
    8280:	1000291e 	bne	r2,zero,8328 <___vfiprintf_internal_r+0x434>
    8284:	d9000b17 	ldw	r4,44(sp)
    8288:	d8800c17 	ldw	r2,48(sp)
    828c:	da400417 	ldw	r9,16(sp)
    8290:	db000217 	ldw	r12,8(sp)
    8294:	9811883a 	mov	r8,r19
    8298:	21400044 	addi	r5,r4,1
    829c:	63002018 	cmpnei	r12,r12,128
    82a0:	6001d126 	beq	r12,zero,89e8 <___vfiprintf_internal_r+0xaf4>
    82a4:	4d53c83a 	sub	r9,r9,r21
    82a8:	02420f16 	blt	zero,r9,8ae8 <___vfiprintf_internal_r+0xbf4>
    82ac:	a885883a 	add	r2,r21,r2
    82b0:	d9400b15 	stw	r5,44(sp)
    82b4:	47000015 	stw	fp,0(r8)
    82b8:	45400115 	stw	r21,4(r8)
    82bc:	d8800c15 	stw	r2,48(sp)
    82c0:	29400208 	cmpgei	r5,r5,8
    82c4:	2801c226 	beq	r5,zero,89d0 <___vfiprintf_internal_r+0xadc>
    82c8:	10007126 	beq	r2,zero,8490 <___vfiprintf_internal_r+0x59c>
    82cc:	d9000017 	ldw	r4,0(sp)
    82d0:	d9800a04 	addi	r6,sp,40
    82d4:	900b883a 	mov	r5,r18
    82d8:	0007de80 	call	7de8 <__sprint_r.part.0>
    82dc:	1000121e 	bne	r2,zero,8328 <___vfiprintf_internal_r+0x434>
    82e0:	d8800c17 	ldw	r2,48(sp)
    82e4:	9811883a 	mov	r8,r19
    82e8:	8400010c 	andi	r16,r16,4
    82ec:	80000226 	beq	r16,zero,82f8 <___vfiprintf_internal_r+0x404>
    82f0:	8da1c83a 	sub	r16,r17,r22
    82f4:	04006c16 	blt	zero,r16,84a8 <___vfiprintf_internal_r+0x5b4>
    82f8:	8d80010e 	bge	r17,r22,8300 <___vfiprintf_internal_r+0x40c>
    82fc:	b023883a 	mov	r17,r22
    8300:	d8c00117 	ldw	r3,4(sp)
    8304:	1c47883a 	add	r3,r3,r17
    8308:	d8c00115 	stw	r3,4(sp)
    830c:	1002281e 	bne	r2,zero,8bb0 <___vfiprintf_internal_r+0xcbc>
    8310:	a0800007 	ldb	r2,0(r20)
    8314:	d8000b15 	stw	zero,44(sp)
    8318:	9811883a 	mov	r8,r19
    831c:	103f231e 	bne	r2,zero,7fac <___vfiprintf_internal_r+0xb8>
    8320:	d8800c17 	ldw	r2,48(sp)
    8324:	1003651e 	bne	r2,zero,90bc <___vfiprintf_internal_r+0x11c8>
    8328:	9080030b 	ldhu	r2,12(r18)
    832c:	1080100c 	andi	r2,r2,64
    8330:	1003761e 	bne	r2,zero,910c <___vfiprintf_internal_r+0x1218>
    8334:	d8800117 	ldw	r2,4(sp)
    8338:	dfc03017 	ldw	ra,192(sp)
    833c:	df002f17 	ldw	fp,188(sp)
    8340:	ddc02e17 	ldw	r23,184(sp)
    8344:	dd802d17 	ldw	r22,180(sp)
    8348:	dd402c17 	ldw	r21,176(sp)
    834c:	dd002b17 	ldw	r20,172(sp)
    8350:	dcc02a17 	ldw	r19,168(sp)
    8354:	dc802917 	ldw	r18,164(sp)
    8358:	dc402817 	ldw	r17,160(sp)
    835c:	dc002717 	ldw	r16,156(sp)
    8360:	dec03104 	addi	sp,sp,196
    8364:	f800283a 	ret
    8368:	d9000017 	ldw	r4,0(sp)
    836c:	900b883a 	mov	r5,r18
    8370:	0002a3c0 	call	2a3c <__swsetup_r>
    8374:	1003651e 	bne	r2,zero,910c <___vfiprintf_internal_r+0x1218>
    8378:	9080030b 	ldhu	r2,12(r18)
    837c:	1080068c 	andi	r2,r2,26
    8380:	10800298 	cmpnei	r2,r2,10
    8384:	103efe1e 	bne	r2,zero,7f80 <___vfiprintf_internal_r+0x8c>
    8388:	9080038f 	ldh	r2,14(r18)
    838c:	103efc16 	blt	r2,zero,7f80 <___vfiprintf_internal_r+0x8c>
    8390:	d9c00317 	ldw	r7,12(sp)
    8394:	d9000017 	ldw	r4,0(sp)
    8398:	a00d883a 	mov	r6,r20
    839c:	900b883a 	mov	r5,r18
    83a0:	dfc03017 	ldw	ra,192(sp)
    83a4:	df002f17 	ldw	fp,188(sp)
    83a8:	ddc02e17 	ldw	r23,184(sp)
    83ac:	dd802d17 	ldw	r22,180(sp)
    83b0:	dd402c17 	ldw	r21,176(sp)
    83b4:	dd002b17 	ldw	r20,172(sp)
    83b8:	dcc02a17 	ldw	r19,168(sp)
    83bc:	dc802917 	ldw	r18,164(sp)
    83c0:	dc402817 	ldw	r17,160(sp)
    83c4:	dc002717 	ldw	r16,156(sp)
    83c8:	dec03104 	addi	sp,sp,196
    83cc:	00091901 	jmpi	9190 <__sbprintf>
    83d0:	84000414 	ori	r16,r16,16
    83d4:	8080080c 	andi	r2,r16,32
    83d8:	10006626 	beq	r2,zero,8574 <___vfiprintf_internal_r+0x680>
    83dc:	d8c00317 	ldw	r3,12(sp)
    83e0:	18800117 	ldw	r2,4(r3)
    83e4:	1d800017 	ldw	r22,0(r3)
    83e8:	18c00204 	addi	r3,r3,8
    83ec:	d8c00315 	stw	r3,12(sp)
    83f0:	102b883a 	mov	r21,r2
    83f4:	10006d16 	blt	r2,zero,85ac <___vfiprintf_internal_r+0x6b8>
    83f8:	48bfffd8 	cmpnei	r2,r9,-1
    83fc:	db000943 	ldbu	r12,37(sp)
    8400:	10007526 	beq	r2,zero,85d8 <___vfiprintf_internal_r+0x6e4>
    8404:	00ffdfc4 	movi	r3,-129
    8408:	b544b03a 	or	r2,r22,r21
    840c:	80e0703a 	and	r16,r16,r3
    8410:	1000711e 	bne	r2,zero,85d8 <___vfiprintf_internal_r+0x6e4>
    8414:	4803401e 	bne	r9,zero,9118 <___vfiprintf_internal_r+0x1224>
    8418:	002d883a 	mov	r22,zero
    841c:	002b883a 	mov	r21,zero
    8420:	9839883a 	mov	fp,r19
    8424:	00007606 	br	8600 <___vfiprintf_internal_r+0x70c>
    8428:	8523c83a 	sub	r17,r16,r20
    842c:	853fbc26 	beq	r16,r20,8320 <___vfiprintf_internal_r+0x42c>
    8430:	d8c00c17 	ldw	r3,48(sp)
    8434:	d8800b17 	ldw	r2,44(sp)
    8438:	45000015 	stw	r20,0(r8)
    843c:	88c7883a 	add	r3,r17,r3
    8440:	10800044 	addi	r2,r2,1
    8444:	d8800b15 	stw	r2,44(sp)
    8448:	44400115 	stw	r17,4(r8)
    844c:	d8c00c15 	stw	r3,48(sp)
    8450:	10800208 	cmpgei	r2,r2,8
    8454:	1000061e 	bne	r2,zero,8470 <___vfiprintf_internal_r+0x57c>
    8458:	42000204 	addi	r8,r8,8
    845c:	d8c00117 	ldw	r3,4(sp)
    8460:	80800003 	ldbu	r2,0(r16)
    8464:	1c47883a 	add	r3,r3,r17
    8468:	d8c00115 	stw	r3,4(sp)
    846c:	003ed906 	br	7fd4 <___vfiprintf_internal_r+0xe0>
    8470:	18025426 	beq	r3,zero,8dc4 <___vfiprintf_internal_r+0xed0>
    8474:	d9000017 	ldw	r4,0(sp)
    8478:	d9800a04 	addi	r6,sp,40
    847c:	900b883a 	mov	r5,r18
    8480:	0007de80 	call	7de8 <__sprint_r.part.0>
    8484:	103fa81e 	bne	r2,zero,8328 <___vfiprintf_internal_r+0x434>
    8488:	9811883a 	mov	r8,r19
    848c:	003ff306 	br	845c <___vfiprintf_internal_r+0x568>
    8490:	d8000b15 	stw	zero,44(sp)
    8494:	8400010c 	andi	r16,r16,4
    8498:	80022626 	beq	r16,zero,8d34 <___vfiprintf_internal_r+0xe40>
    849c:	8da1c83a 	sub	r16,r17,r22
    84a0:	0402240e 	bge	zero,r16,8d34 <___vfiprintf_internal_r+0xe40>
    84a4:	9811883a 	mov	r8,r19
    84a8:	80c00450 	cmplti	r3,r16,17
    84ac:	d9000b17 	ldw	r4,44(sp)
    84b0:	01c00074 	movhi	r7,1
    84b4:	18030d1e 	bne	r3,zero,90ec <___vfiprintf_internal_r+0x11f8>
    84b8:	39c1f704 	addi	r7,r7,2012
    84bc:	05400404 	movi	r21,16
    84c0:	00000606 	br	84dc <___vfiprintf_internal_r+0x5e8>
    84c4:	21400084 	addi	r5,r4,2
    84c8:	42000204 	addi	r8,r8,8
    84cc:	1809883a 	mov	r4,r3
    84d0:	843ffc04 	addi	r16,r16,-16
    84d4:	80c00448 	cmpgei	r3,r16,17
    84d8:	18001726 	beq	r3,zero,8538 <___vfiprintf_internal_r+0x644>
    84dc:	20c00044 	addi	r3,r4,1
    84e0:	10800404 	addi	r2,r2,16
    84e4:	41c00015 	stw	r7,0(r8)
    84e8:	45400115 	stw	r21,4(r8)
    84ec:	d8800c15 	stw	r2,48(sp)
    84f0:	d8c00b15 	stw	r3,44(sp)
    84f4:	19400208 	cmpgei	r5,r3,8
    84f8:	283ff226 	beq	r5,zero,84c4 <___vfiprintf_internal_r+0x5d0>
    84fc:	d9000017 	ldw	r4,0(sp)
    8500:	d9800a04 	addi	r6,sp,40
    8504:	900b883a 	mov	r5,r18
    8508:	10013326 	beq	r2,zero,89d8 <___vfiprintf_internal_r+0xae4>
    850c:	d9c00215 	stw	r7,8(sp)
    8510:	0007de80 	call	7de8 <__sprint_r.part.0>
    8514:	103f841e 	bne	r2,zero,8328 <___vfiprintf_internal_r+0x434>
    8518:	d9000b17 	ldw	r4,44(sp)
    851c:	843ffc04 	addi	r16,r16,-16
    8520:	80c00448 	cmpgei	r3,r16,17
    8524:	d8800c17 	ldw	r2,48(sp)
    8528:	d9c00217 	ldw	r7,8(sp)
    852c:	9811883a 	mov	r8,r19
    8530:	21400044 	addi	r5,r4,1
    8534:	183fe91e 	bne	r3,zero,84dc <___vfiprintf_internal_r+0x5e8>
    8538:	1405883a 	add	r2,r2,r16
    853c:	d9400b15 	stw	r5,44(sp)
    8540:	41c00015 	stw	r7,0(r8)
    8544:	44000115 	stw	r16,4(r8)
    8548:	d8800c15 	stw	r2,48(sp)
    854c:	29400210 	cmplti	r5,r5,8
    8550:	283f691e 	bne	r5,zero,82f8 <___vfiprintf_internal_r+0x404>
    8554:	1001f726 	beq	r2,zero,8d34 <___vfiprintf_internal_r+0xe40>
    8558:	d9000017 	ldw	r4,0(sp)
    855c:	d9800a04 	addi	r6,sp,40
    8560:	900b883a 	mov	r5,r18
    8564:	0007de80 	call	7de8 <__sprint_r.part.0>
    8568:	103f6f1e 	bne	r2,zero,8328 <___vfiprintf_internal_r+0x434>
    856c:	d8800c17 	ldw	r2,48(sp)
    8570:	003f6106 	br	82f8 <___vfiprintf_internal_r+0x404>
    8574:	d8c00317 	ldw	r3,12(sp)
    8578:	8080040c 	andi	r2,r16,16
    857c:	1d800017 	ldw	r22,0(r3)
    8580:	18c00104 	addi	r3,r3,4
    8584:	d8c00315 	stw	r3,12(sp)
    8588:	1000251e 	bne	r2,zero,8620 <___vfiprintf_internal_r+0x72c>
    858c:	8080100c 	andi	r2,r16,64
    8590:	10002326 	beq	r2,zero,8620 <___vfiprintf_internal_r+0x72c>
    8594:	b5bfffcc 	andi	r22,r22,65535
    8598:	b5a0001c 	xori	r22,r22,32768
    859c:	b5a00004 	addi	r22,r22,-32768
    85a0:	b02bd7fa 	srai	r21,r22,31
    85a4:	a805883a 	mov	r2,r21
    85a8:	103f930e 	bge	r2,zero,83f8 <___vfiprintf_internal_r+0x504>
    85ac:	00800b44 	movi	r2,45
    85b0:	b006c03a 	cmpne	r3,r22,zero
    85b4:	056bc83a 	sub	r21,zero,r21
    85b8:	d8800945 	stb	r2,37(sp)
    85bc:	48bfffd8 	cmpnei	r2,r9,-1
    85c0:	a8ebc83a 	sub	r21,r21,r3
    85c4:	05adc83a 	sub	r22,zero,r22
    85c8:	10000226 	beq	r2,zero,85d4 <___vfiprintf_internal_r+0x6e0>
    85cc:	00bfdfc4 	movi	r2,-129
    85d0:	80a0703a 	and	r16,r16,r2
    85d4:	03000b44 	movi	r12,45
    85d8:	a800d61e 	bne	r21,zero,8934 <___vfiprintf_internal_r+0xa40>
    85dc:	b08002a8 	cmpgeui	r2,r22,10
    85e0:	1000d41e 	bne	r2,zero,8934 <___vfiprintf_internal_r+0xa40>
    85e4:	b5800c04 	addi	r22,r22,48
    85e8:	dd8016c5 	stb	r22,91(sp)
    85ec:	482d883a 	mov	r22,r9
    85f0:	02400116 	blt	zero,r9,85f8 <___vfiprintf_internal_r+0x704>
    85f4:	05800044 	movi	r22,1
    85f8:	05400044 	movi	r21,1
    85fc:	df0016c4 	addi	fp,sp,91
    8600:	63003fcc 	andi	r12,r12,255
    8604:	6300201c 	xori	r12,r12,128
    8608:	633fe004 	addi	r12,r12,-128
    860c:	603ef226 	beq	r12,zero,81d8 <___vfiprintf_internal_r+0x2e4>
    8610:	b5800044 	addi	r22,r22,1
    8614:	003ef006 	br	81d8 <___vfiprintf_internal_r+0x2e4>
    8618:	0004bb80 	call	4bb8 <__sinit>
    861c:	003e4706 	br	7f3c <___vfiprintf_internal_r+0x48>
    8620:	b02bd7fa 	srai	r21,r22,31
    8624:	a805883a 	mov	r2,r21
    8628:	003f7206 	br	83f4 <___vfiprintf_internal_r+0x500>
    862c:	d8800317 	ldw	r2,12(sp)
    8630:	14400017 	ldw	r17,0(r2)
    8634:	17000104 	addi	fp,r2,4
    8638:	8802220e 	bge	r17,zero,8ec4 <___vfiprintf_internal_r+0xfd0>
    863c:	0463c83a 	sub	r17,zero,r17
    8640:	df000315 	stw	fp,12(sp)
    8644:	a0800007 	ldb	r2,0(r20)
    8648:	84000114 	ori	r16,r16,4
    864c:	003e6b06 	br	7ffc <___vfiprintf_internal_r+0x108>
    8650:	a0800007 	ldb	r2,0(r20)
    8654:	a0c00044 	addi	r3,r20,1
    8658:	11000aa0 	cmpeqi	r4,r2,42
    865c:	2002b31e 	bne	r4,zero,912c <___vfiprintf_internal_r+0x1238>
    8660:	113ff404 	addi	r4,r2,-48
    8664:	214002b0 	cmpltui	r5,r4,10
    8668:	1829883a 	mov	r20,r3
    866c:	0013883a 	mov	r9,zero
    8670:	283e6326 	beq	r5,zero,8000 <___vfiprintf_internal_r+0x10c>
    8674:	480690ba 	slli	r3,r9,2
    8678:	a0800007 	ldb	r2,0(r20)
    867c:	a5000044 	addi	r20,r20,1
    8680:	1a47883a 	add	r3,r3,r9
    8684:	18c7883a 	add	r3,r3,r3
    8688:	1913883a 	add	r9,r3,r4
    868c:	113ff404 	addi	r4,r2,-48
    8690:	20c002b0 	cmpltui	r3,r4,10
    8694:	183ff71e 	bne	r3,zero,8674 <___vfiprintf_internal_r+0x780>
    8698:	003e5906 	br	8000 <___vfiprintf_internal_r+0x10c>
    869c:	a0800007 	ldb	r2,0(r20)
    86a0:	84002014 	ori	r16,r16,128
    86a4:	003e5506 	br	7ffc <___vfiprintf_internal_r+0x108>
    86a8:	00c00ac4 	movi	r3,43
    86ac:	a0800007 	ldb	r2,0(r20)
    86b0:	d8c00945 	stb	r3,37(sp)
    86b4:	003e5106 	br	7ffc <___vfiprintf_internal_r+0x108>
    86b8:	a0800007 	ldb	r2,0(r20)
    86bc:	84000054 	ori	r16,r16,1
    86c0:	003e4e06 	br	7ffc <___vfiprintf_internal_r+0x108>
    86c4:	d8c00947 	ldb	r3,37(sp)
    86c8:	a0800003 	ldbu	r2,0(r20)
    86cc:	1800091e 	bne	r3,zero,86f4 <___vfiprintf_internal_r+0x800>
    86d0:	10803fcc 	andi	r2,r2,255
    86d4:	00c00804 	movi	r3,32
    86d8:	1080201c 	xori	r2,r2,128
    86dc:	d8c00945 	stb	r3,37(sp)
    86e0:	10bfe004 	addi	r2,r2,-128
    86e4:	003e4506 	br	7ffc <___vfiprintf_internal_r+0x108>
    86e8:	a0800043 	ldbu	r2,1(r20)
    86ec:	84000814 	ori	r16,r16,32
    86f0:	a5000044 	addi	r20,r20,1
    86f4:	10803fcc 	andi	r2,r2,255
    86f8:	1080201c 	xori	r2,r2,128
    86fc:	10bfe004 	addi	r2,r2,-128
    8700:	003e3e06 	br	7ffc <___vfiprintf_internal_r+0x108>
    8704:	8080080c 	andi	r2,r16,32
    8708:	1001f826 	beq	r2,zero,8eec <___vfiprintf_internal_r+0xff8>
    870c:	d9000117 	ldw	r4,4(sp)
    8710:	d8800317 	ldw	r2,12(sp)
    8714:	2007d7fa 	srai	r3,r4,31
    8718:	10800017 	ldw	r2,0(r2)
    871c:	11000015 	stw	r4,0(r2)
    8720:	10c00115 	stw	r3,4(r2)
    8724:	d8800317 	ldw	r2,12(sp)
    8728:	10800104 	addi	r2,r2,4
    872c:	d8800315 	stw	r2,12(sp)
    8730:	003e1c06 	br	7fa4 <___vfiprintf_internal_r+0xb0>
    8734:	a0800007 	ldb	r2,0(r20)
    8738:	10c01b18 	cmpnei	r3,r2,108
    873c:	183fea26 	beq	r3,zero,86e8 <___vfiprintf_internal_r+0x7f4>
    8740:	84000414 	ori	r16,r16,16
    8744:	003e2d06 	br	7ffc <___vfiprintf_internal_r+0x108>
    8748:	a0800007 	ldb	r2,0(r20)
    874c:	84001014 	ori	r16,r16,64
    8750:	003e2a06 	br	7ffc <___vfiprintf_internal_r+0x108>
    8754:	d8c00317 	ldw	r3,12(sp)
    8758:	d8000945 	stb	zero,37(sp)
    875c:	05800044 	movi	r22,1
    8760:	18800017 	ldw	r2,0(r3)
    8764:	18c00104 	addi	r3,r3,4
    8768:	d8c00315 	stw	r3,12(sp)
    876c:	d8800d05 	stb	r2,52(sp)
    8770:	05400044 	movi	r21,1
    8774:	df000d04 	addi	fp,sp,52
    8778:	003e9606 	br	81d4 <___vfiprintf_internal_r+0x2e0>
    877c:	80800414 	ori	r2,r16,16
    8780:	10c0080c 	andi	r3,r2,32
    8784:	18019126 	beq	r3,zero,8dcc <___vfiprintf_internal_r+0xed8>
    8788:	d8c00317 	ldw	r3,12(sp)
    878c:	d8000945 	stb	zero,37(sp)
    8790:	1d800017 	ldw	r22,0(r3)
    8794:	1d400117 	ldw	r21,4(r3)
    8798:	18c00204 	addi	r3,r3,8
    879c:	d8c00315 	stw	r3,12(sp)
    87a0:	48ffffd8 	cmpnei	r3,r9,-1
    87a4:	18019626 	beq	r3,zero,8e00 <___vfiprintf_internal_r+0xf0c>
    87a8:	00c00044 	movi	r3,1
    87ac:	043fdfc4 	movi	r16,-129
    87b0:	b548b03a 	or	r4,r22,r21
    87b4:	1420703a 	and	r16,r2,r16
    87b8:	2000191e 	bne	r4,zero,8820 <___vfiprintf_internal_r+0x92c>
    87bc:	4802221e 	bne	r9,zero,9048 <___vfiprintf_internal_r+0x1154>
    87c0:	1801bc1e 	bne	r3,zero,8eb4 <___vfiprintf_internal_r+0xfc0>
    87c4:	1540004c 	andi	r21,r2,1
    87c8:	a801c126 	beq	r21,zero,8ed0 <___vfiprintf_internal_r+0xfdc>
    87cc:	00800c04 	movi	r2,48
    87d0:	d88016c5 	stb	r2,91(sp)
    87d4:	a82d883a 	mov	r22,r21
    87d8:	df0016c4 	addi	fp,sp,91
    87dc:	003e7e06 	br	81d8 <___vfiprintf_internal_r+0x2e4>
    87e0:	80800414 	ori	r2,r16,16
    87e4:	10c0080c 	andi	r3,r2,32
    87e8:	18018826 	beq	r3,zero,8e0c <___vfiprintf_internal_r+0xf18>
    87ec:	d8c00317 	ldw	r3,12(sp)
    87f0:	d8000945 	stb	zero,37(sp)
    87f4:	1d800017 	ldw	r22,0(r3)
    87f8:	1d400117 	ldw	r21,4(r3)
    87fc:	18c00204 	addi	r3,r3,8
    8800:	d8c00315 	stw	r3,12(sp)
    8804:	48ffffd8 	cmpnei	r3,r9,-1
    8808:	18018d26 	beq	r3,zero,8e40 <___vfiprintf_internal_r+0xf4c>
    880c:	043fdfc4 	movi	r16,-129
    8810:	b548b03a 	or	r4,r22,r21
    8814:	0007883a 	mov	r3,zero
    8818:	1420703a 	and	r16,r2,r16
    881c:	203fe726 	beq	r4,zero,87bc <___vfiprintf_internal_r+0x8c8>
    8820:	18800060 	cmpeqi	r2,r3,1
    8824:	1002511e 	bne	r2,zero,916c <___vfiprintf_internal_r+0x1278>
    8828:	18c000a0 	cmpeqi	r3,r3,2
    882c:	1801481e 	bne	r3,zero,8d50 <___vfiprintf_internal_r+0xe5c>
    8830:	9839883a 	mov	fp,r19
    8834:	a808977a 	slli	r4,r21,29
    8838:	b006d0fa 	srli	r3,r22,3
    883c:	a82ad0fa 	srli	r21,r21,3
    8840:	b08001cc 	andi	r2,r22,7
    8844:	10800c04 	addi	r2,r2,48
    8848:	20ecb03a 	or	r22,r4,r3
    884c:	e0bfffc5 	stb	r2,-1(fp)
    8850:	b546b03a 	or	r3,r22,r21
    8854:	e00b883a 	mov	r5,fp
    8858:	e73fffc4 	addi	fp,fp,-1
    885c:	183ff51e 	bne	r3,zero,8834 <___vfiprintf_internal_r+0x940>
    8860:	80c0004c 	andi	r3,r16,1
    8864:	18014726 	beq	r3,zero,8d84 <___vfiprintf_internal_r+0xe90>
    8868:	10800c18 	cmpnei	r2,r2,48
    886c:	10014526 	beq	r2,zero,8d84 <___vfiprintf_internal_r+0xe90>
    8870:	297fff84 	addi	r5,r5,-2
    8874:	00800c04 	movi	r2,48
    8878:	e0bfffc5 	stb	r2,-1(fp)
    887c:	996bc83a 	sub	r21,r19,r5
    8880:	482d883a 	mov	r22,r9
    8884:	4d41a616 	blt	r9,r21,8f20 <___vfiprintf_internal_r+0x102c>
    8888:	2839883a 	mov	fp,r5
    888c:	003e5206 	br	81d8 <___vfiprintf_internal_r+0x2e4>
    8890:	d8800317 	ldw	r2,12(sp)
    8894:	d8000945 	stb	zero,37(sp)
    8898:	17000017 	ldw	fp,0(r2)
    889c:	10c00104 	addi	r3,r2,4
    88a0:	e001f026 	beq	fp,zero,9064 <___vfiprintf_internal_r+0x1170>
    88a4:	48bfffe0 	cmpeqi	r2,r9,-1
    88a8:	1001a01e 	bne	r2,zero,8f2c <___vfiprintf_internal_r+0x1038>
    88ac:	480d883a 	mov	r6,r9
    88b0:	000b883a 	mov	r5,zero
    88b4:	e009883a 	mov	r4,fp
    88b8:	d8c00415 	stw	r3,16(sp)
    88bc:	da000315 	stw	r8,12(sp)
    88c0:	da400215 	stw	r9,8(sp)
    88c4:	00060140 	call	6014 <memchr>
    88c8:	da400217 	ldw	r9,8(sp)
    88cc:	da000317 	ldw	r8,12(sp)
    88d0:	d8c00417 	ldw	r3,16(sp)
    88d4:	1001fe26 	beq	r2,zero,90d0 <___vfiprintf_internal_r+0x11dc>
    88d8:	172bc83a 	sub	r21,r2,fp
    88dc:	a82d883a 	mov	r22,r21
    88e0:	d8c00315 	stw	r3,12(sp)
    88e4:	003e3b06 	br	81d4 <___vfiprintf_internal_r+0x2e0>
    88e8:	a0800007 	ldb	r2,0(r20)
    88ec:	84000814 	ori	r16,r16,32
    88f0:	003dc206 	br	7ffc <___vfiprintf_internal_r+0x108>
    88f4:	d9000317 	ldw	r4,12(sp)
    88f8:	00de0c04 	movi	r3,30768
    88fc:	01400074 	movhi	r5,1
    8900:	d8c0098d 	sth	r3,38(sp)
    8904:	25800017 	ldw	r22,0(r4)
    8908:	20c00104 	addi	r3,r4,4
    890c:	d8c00315 	stw	r3,12(sp)
    8910:	28c17104 	addi	r3,r5,1476
    8914:	002b883a 	mov	r21,zero
    8918:	80800094 	ori	r2,r16,2
    891c:	d8c00515 	stw	r3,20(sp)
    8920:	d8000945 	stb	zero,37(sp)
    8924:	48ffffd8 	cmpnei	r3,r9,-1
    8928:	18010826 	beq	r3,zero,8d4c <___vfiprintf_internal_r+0xe58>
    892c:	00c00084 	movi	r3,2
    8930:	003f9e06 	br	87ac <___vfiprintf_internal_r+0x8b8>
    8934:	9839883a 	mov	fp,r19
    8938:	b009883a 	mov	r4,r22
    893c:	a80b883a 	mov	r5,r21
    8940:	01800284 	movi	r6,10
    8944:	000f883a 	mov	r7,zero
    8948:	db000615 	stw	r12,24(sp)
    894c:	da000415 	stw	r8,16(sp)
    8950:	da400215 	stw	r9,8(sp)
    8954:	000a9800 	call	a980 <__umoddi3>
    8958:	10800c04 	addi	r2,r2,48
    895c:	b009883a 	mov	r4,r22
    8960:	a80b883a 	mov	r5,r21
    8964:	e0bfffc5 	stb	r2,-1(fp)
    8968:	01800284 	movi	r6,10
    896c:	000f883a 	mov	r7,zero
    8970:	000a3a80 	call	a3a8 <__udivdi3>
    8974:	a809883a 	mov	r4,r21
    8978:	b00b883a 	mov	r5,r22
    897c:	da400217 	ldw	r9,8(sp)
    8980:	da000417 	ldw	r8,16(sp)
    8984:	db000617 	ldw	r12,24(sp)
    8988:	e73fffc4 	addi	fp,fp,-1
    898c:	102d883a 	mov	r22,r2
    8990:	182b883a 	mov	r21,r3
    8994:	203fe81e 	bne	r4,zero,8938 <___vfiprintf_internal_r+0xa44>
    8998:	294002a8 	cmpgeui	r5,r5,10
    899c:	283fe61e 	bne	r5,zero,8938 <___vfiprintf_internal_r+0xa44>
    89a0:	9f2bc83a 	sub	r21,r19,fp
    89a4:	482d883a 	mov	r22,r9
    89a8:	4d7f150e 	bge	r9,r21,8600 <___vfiprintf_internal_r+0x70c>
    89ac:	a82d883a 	mov	r22,r21
    89b0:	003f1306 	br	8600 <___vfiprintf_internal_r+0x70c>
    89b4:	00c00044 	movi	r3,1
    89b8:	a805883a 	mov	r2,r21
    89bc:	df001715 	stw	fp,92(sp)
    89c0:	dd401815 	stw	r21,96(sp)
    89c4:	dd400c15 	stw	r21,48(sp)
    89c8:	d8c00b15 	stw	r3,44(sp)
    89cc:	9811883a 	mov	r8,r19
    89d0:	42000204 	addi	r8,r8,8
    89d4:	003e4406 	br	82e8 <___vfiprintf_internal_r+0x3f4>
    89d8:	01400044 	movi	r5,1
    89dc:	0009883a 	mov	r4,zero
    89e0:	9811883a 	mov	r8,r19
    89e4:	003eba06 	br	84d0 <___vfiprintf_internal_r+0x5dc>
    89e8:	8d87c83a 	sub	r3,r17,r22
    89ec:	00fe2d0e 	bge	zero,r3,82a4 <___vfiprintf_internal_r+0x3b0>
    89f0:	19800450 	cmplti	r6,r3,17
    89f4:	3001c01e 	bne	r6,zero,90f8 <___vfiprintf_internal_r+0x1204>
    89f8:	01400074 	movhi	r5,1
    89fc:	2941f304 	addi	r5,r5,1996
    8a00:	d9400415 	stw	r5,16(sp)
    8a04:	01c00404 	movi	r7,16
    8a08:	00000606 	br	8a24 <___vfiprintf_internal_r+0xb30>
    8a0c:	21800084 	addi	r6,r4,2
    8a10:	42000204 	addi	r8,r8,8
    8a14:	2809883a 	mov	r4,r5
    8a18:	18fffc04 	addi	r3,r3,-16
    8a1c:	19400448 	cmpgei	r5,r3,17
    8a20:	28001b26 	beq	r5,zero,8a90 <___vfiprintf_internal_r+0xb9c>
    8a24:	d9800417 	ldw	r6,16(sp)
    8a28:	21400044 	addi	r5,r4,1
    8a2c:	10800404 	addi	r2,r2,16
    8a30:	41800015 	stw	r6,0(r8)
    8a34:	41c00115 	stw	r7,4(r8)
    8a38:	d8800c15 	stw	r2,48(sp)
    8a3c:	d9400b15 	stw	r5,44(sp)
    8a40:	29800208 	cmpgei	r6,r5,8
    8a44:	303ff126 	beq	r6,zero,8a0c <___vfiprintf_internal_r+0xb18>
    8a48:	d9000017 	ldw	r4,0(sp)
    8a4c:	d9800a04 	addi	r6,sp,40
    8a50:	900b883a 	mov	r5,r18
    8a54:	10005c26 	beq	r2,zero,8bc8 <___vfiprintf_internal_r+0xcd4>
    8a58:	d8c00615 	stw	r3,24(sp)
    8a5c:	da400215 	stw	r9,8(sp)
    8a60:	0007de80 	call	7de8 <__sprint_r.part.0>
    8a64:	103e301e 	bne	r2,zero,8328 <___vfiprintf_internal_r+0x434>
    8a68:	d8c00617 	ldw	r3,24(sp)
    8a6c:	d9000b17 	ldw	r4,44(sp)
    8a70:	d8800c17 	ldw	r2,48(sp)
    8a74:	18fffc04 	addi	r3,r3,-16
    8a78:	19400448 	cmpgei	r5,r3,17
    8a7c:	da400217 	ldw	r9,8(sp)
    8a80:	9811883a 	mov	r8,r19
    8a84:	21800044 	addi	r6,r4,1
    8a88:	01c00404 	movi	r7,16
    8a8c:	283fe51e 	bne	r5,zero,8a24 <___vfiprintf_internal_r+0xb30>
    8a90:	d9000417 	ldw	r4,16(sp)
    8a94:	10c5883a 	add	r2,r2,r3
    8a98:	40c00115 	stw	r3,4(r8)
    8a9c:	41000015 	stw	r4,0(r8)
    8aa0:	d8800c15 	stw	r2,48(sp)
    8aa4:	d9800b15 	stw	r6,44(sp)
    8aa8:	30c00208 	cmpgei	r3,r6,8
    8aac:	18010b26 	beq	r3,zero,8edc <___vfiprintf_internal_r+0xfe8>
    8ab0:	10017826 	beq	r2,zero,9094 <___vfiprintf_internal_r+0x11a0>
    8ab4:	d9000017 	ldw	r4,0(sp)
    8ab8:	d9800a04 	addi	r6,sp,40
    8abc:	900b883a 	mov	r5,r18
    8ac0:	da400215 	stw	r9,8(sp)
    8ac4:	0007de80 	call	7de8 <__sprint_r.part.0>
    8ac8:	103e171e 	bne	r2,zero,8328 <___vfiprintf_internal_r+0x434>
    8acc:	da400217 	ldw	r9,8(sp)
    8ad0:	d9000b17 	ldw	r4,44(sp)
    8ad4:	d8800c17 	ldw	r2,48(sp)
    8ad8:	4d53c83a 	sub	r9,r9,r21
    8adc:	9811883a 	mov	r8,r19
    8ae0:	21400044 	addi	r5,r4,1
    8ae4:	027df10e 	bge	zero,r9,82ac <___vfiprintf_internal_r+0x3b8>
    8ae8:	48c00450 	cmplti	r3,r9,17
    8aec:	1801651e 	bne	r3,zero,9084 <___vfiprintf_internal_r+0x1190>
    8af0:	ddc00415 	stw	r23,16(sp)
    8af4:	01c00404 	movi	r7,16
    8af8:	00000606 	br	8b14 <___vfiprintf_internal_r+0xc20>
    8afc:	21400084 	addi	r5,r4,2
    8b00:	42000204 	addi	r8,r8,8
    8b04:	1809883a 	mov	r4,r3
    8b08:	4a7ffc04 	addi	r9,r9,-16
    8b0c:	48c00448 	cmpgei	r3,r9,17
    8b10:	18001826 	beq	r3,zero,8b74 <___vfiprintf_internal_r+0xc80>
    8b14:	20c00044 	addi	r3,r4,1
    8b18:	10800404 	addi	r2,r2,16
    8b1c:	45c00015 	stw	r23,0(r8)
    8b20:	41c00115 	stw	r7,4(r8)
    8b24:	d8800c15 	stw	r2,48(sp)
    8b28:	d8c00b15 	stw	r3,44(sp)
    8b2c:	19400208 	cmpgei	r5,r3,8
    8b30:	283ff226 	beq	r5,zero,8afc <___vfiprintf_internal_r+0xc08>
    8b34:	d9000017 	ldw	r4,0(sp)
    8b38:	d9800a04 	addi	r6,sp,40
    8b3c:	900b883a 	mov	r5,r18
    8b40:	10001726 	beq	r2,zero,8ba0 <___vfiprintf_internal_r+0xcac>
    8b44:	da400215 	stw	r9,8(sp)
    8b48:	0007de80 	call	7de8 <__sprint_r.part.0>
    8b4c:	103df61e 	bne	r2,zero,8328 <___vfiprintf_internal_r+0x434>
    8b50:	da400217 	ldw	r9,8(sp)
    8b54:	d9000b17 	ldw	r4,44(sp)
    8b58:	d8800c17 	ldw	r2,48(sp)
    8b5c:	4a7ffc04 	addi	r9,r9,-16
    8b60:	48c00448 	cmpgei	r3,r9,17
    8b64:	9811883a 	mov	r8,r19
    8b68:	21400044 	addi	r5,r4,1
    8b6c:	01c00404 	movi	r7,16
    8b70:	183fe81e 	bne	r3,zero,8b14 <___vfiprintf_internal_r+0xc20>
    8b74:	d8c00417 	ldw	r3,16(sp)
    8b78:	1245883a 	add	r2,r2,r9
    8b7c:	42400115 	stw	r9,4(r8)
    8b80:	40c00015 	stw	r3,0(r8)
    8b84:	d8800c15 	stw	r2,48(sp)
    8b88:	d9400b15 	stw	r5,44(sp)
    8b8c:	28c00208 	cmpgei	r3,r5,8
    8b90:	1800811e 	bne	r3,zero,8d98 <___vfiprintf_internal_r+0xea4>
    8b94:	42000204 	addi	r8,r8,8
    8b98:	29400044 	addi	r5,r5,1
    8b9c:	003dc306 	br	82ac <___vfiprintf_internal_r+0x3b8>
    8ba0:	01400044 	movi	r5,1
    8ba4:	0009883a 	mov	r4,zero
    8ba8:	9811883a 	mov	r8,r19
    8bac:	003fd606 	br	8b08 <___vfiprintf_internal_r+0xc14>
    8bb0:	d9000017 	ldw	r4,0(sp)
    8bb4:	d9800a04 	addi	r6,sp,40
    8bb8:	900b883a 	mov	r5,r18
    8bbc:	0007de80 	call	7de8 <__sprint_r.part.0>
    8bc0:	103dd326 	beq	r2,zero,8310 <___vfiprintf_internal_r+0x41c>
    8bc4:	003dd806 	br	8328 <___vfiprintf_internal_r+0x434>
    8bc8:	01800044 	movi	r6,1
    8bcc:	0009883a 	mov	r4,zero
    8bd0:	9811883a 	mov	r8,r19
    8bd4:	003f9006 	br	8a18 <___vfiprintf_internal_r+0xb24>
    8bd8:	10001026 	beq	r2,zero,8c1c <___vfiprintf_internal_r+0xd28>
    8bdc:	d9000017 	ldw	r4,0(sp)
    8be0:	d9800a04 	addi	r6,sp,40
    8be4:	900b883a 	mov	r5,r18
    8be8:	da400615 	stw	r9,24(sp)
    8bec:	db000415 	stw	r12,16(sp)
    8bf0:	db400215 	stw	r13,8(sp)
    8bf4:	0007de80 	call	7de8 <__sprint_r.part.0>
    8bf8:	103dcb1e 	bne	r2,zero,8328 <___vfiprintf_internal_r+0x434>
    8bfc:	d9000b17 	ldw	r4,44(sp)
    8c00:	d8800c17 	ldw	r2,48(sp)
    8c04:	da400617 	ldw	r9,24(sp)
    8c08:	db000417 	ldw	r12,16(sp)
    8c0c:	db400217 	ldw	r13,8(sp)
    8c10:	9811883a 	mov	r8,r19
    8c14:	21400044 	addi	r5,r4,1
    8c18:	003d8806 	br	823c <___vfiprintf_internal_r+0x348>
    8c1c:	6800bc26 	beq	r13,zero,8f10 <___vfiprintf_internal_r+0x101c>
    8c20:	d8800984 	addi	r2,sp,38
    8c24:	d8801715 	stw	r2,92(sp)
    8c28:	00800084 	movi	r2,2
    8c2c:	d8801815 	stw	r2,96(sp)
    8c30:	01400044 	movi	r5,1
    8c34:	9811883a 	mov	r8,r19
    8c38:	2809883a 	mov	r4,r5
    8c3c:	42000204 	addi	r8,r8,8
    8c40:	29400044 	addi	r5,r5,1
    8c44:	003d9506 	br	829c <___vfiprintf_internal_r+0x3a8>
    8c48:	19400450 	cmplti	r5,r3,17
    8c4c:	01c00074 	movhi	r7,1
    8c50:	2801231e 	bne	r5,zero,90e0 <___vfiprintf_internal_r+0x11ec>
    8c54:	39c1f704 	addi	r7,r7,2012
    8c58:	03800404 	movi	r14,16
    8c5c:	00000706 	br	8c7c <___vfiprintf_internal_r+0xd88>
    8c60:	23c00084 	addi	r15,r4,2
    8c64:	42000204 	addi	r8,r8,8
    8c68:	3009883a 	mov	r4,r6
    8c6c:	18fffc04 	addi	r3,r3,-16
    8c70:	19400448 	cmpgei	r5,r3,17
    8c74:	28002026 	beq	r5,zero,8cf8 <___vfiprintf_internal_r+0xe04>
    8c78:	21800044 	addi	r6,r4,1
    8c7c:	10800404 	addi	r2,r2,16
    8c80:	41c00015 	stw	r7,0(r8)
    8c84:	43800115 	stw	r14,4(r8)
    8c88:	d8800c15 	stw	r2,48(sp)
    8c8c:	d9800b15 	stw	r6,44(sp)
    8c90:	31400208 	cmpgei	r5,r6,8
    8c94:	283ff226 	beq	r5,zero,8c60 <___vfiprintf_internal_r+0xd6c>
    8c98:	d9000017 	ldw	r4,0(sp)
    8c9c:	d9800a04 	addi	r6,sp,40
    8ca0:	900b883a 	mov	r5,r18
    8ca4:	10001f26 	beq	r2,zero,8d24 <___vfiprintf_internal_r+0xe30>
    8ca8:	d9c00815 	stw	r7,32(sp)
    8cac:	d8c00715 	stw	r3,28(sp)
    8cb0:	da400615 	stw	r9,24(sp)
    8cb4:	db000415 	stw	r12,16(sp)
    8cb8:	db400215 	stw	r13,8(sp)
    8cbc:	0007de80 	call	7de8 <__sprint_r.part.0>
    8cc0:	103d991e 	bne	r2,zero,8328 <___vfiprintf_internal_r+0x434>
    8cc4:	d8c00717 	ldw	r3,28(sp)
    8cc8:	d9000b17 	ldw	r4,44(sp)
    8ccc:	d8800c17 	ldw	r2,48(sp)
    8cd0:	18fffc04 	addi	r3,r3,-16
    8cd4:	19400448 	cmpgei	r5,r3,17
    8cd8:	d9c00817 	ldw	r7,32(sp)
    8cdc:	da400617 	ldw	r9,24(sp)
    8ce0:	db000417 	ldw	r12,16(sp)
    8ce4:	db400217 	ldw	r13,8(sp)
    8ce8:	9811883a 	mov	r8,r19
    8cec:	23c00044 	addi	r15,r4,1
    8cf0:	03800404 	movi	r14,16
    8cf4:	283fe01e 	bne	r5,zero,8c78 <___vfiprintf_internal_r+0xd84>
    8cf8:	10c5883a 	add	r2,r2,r3
    8cfc:	40c00115 	stw	r3,4(r8)
    8d00:	41c00015 	stw	r7,0(r8)
    8d04:	d8800c15 	stw	r2,48(sp)
    8d08:	dbc00b15 	stw	r15,44(sp)
    8d0c:	78c00208 	cmpgei	r3,r15,8
    8d10:	1800511e 	bne	r3,zero,8e58 <___vfiprintf_internal_r+0xf64>
    8d14:	42000204 	addi	r8,r8,8
    8d18:	79400044 	addi	r5,r15,1
    8d1c:	7809883a 	mov	r4,r15
    8d20:	003d3806 	br	8204 <___vfiprintf_internal_r+0x310>
    8d24:	0009883a 	mov	r4,zero
    8d28:	03c00044 	movi	r15,1
    8d2c:	9811883a 	mov	r8,r19
    8d30:	003fce06 	br	8c6c <___vfiprintf_internal_r+0xd78>
    8d34:	8d80010e 	bge	r17,r22,8d3c <___vfiprintf_internal_r+0xe48>
    8d38:	b023883a 	mov	r17,r22
    8d3c:	d8800117 	ldw	r2,4(sp)
    8d40:	1445883a 	add	r2,r2,r17
    8d44:	d8800115 	stw	r2,4(sp)
    8d48:	003d7106 	br	8310 <___vfiprintf_internal_r+0x41c>
    8d4c:	1021883a 	mov	r16,r2
    8d50:	9839883a 	mov	fp,r19
    8d54:	d9000517 	ldw	r4,20(sp)
    8d58:	b08003cc 	andi	r2,r22,15
    8d5c:	a806973a 	slli	r3,r21,28
    8d60:	b02cd13a 	srli	r22,r22,4
    8d64:	2085883a 	add	r2,r4,r2
    8d68:	10800003 	ldbu	r2,0(r2)
    8d6c:	a82ad13a 	srli	r21,r21,4
    8d70:	1dacb03a 	or	r22,r3,r22
    8d74:	e0bfffc5 	stb	r2,-1(fp)
    8d78:	b544b03a 	or	r2,r22,r21
    8d7c:	e73fffc4 	addi	fp,fp,-1
    8d80:	103ff41e 	bne	r2,zero,8d54 <___vfiprintf_internal_r+0xe60>
    8d84:	9f2bc83a 	sub	r21,r19,fp
    8d88:	482d883a 	mov	r22,r9
    8d8c:	4d7d120e 	bge	r9,r21,81d8 <___vfiprintf_internal_r+0x2e4>
    8d90:	a82d883a 	mov	r22,r21
    8d94:	003d1006 	br	81d8 <___vfiprintf_internal_r+0x2e4>
    8d98:	103f0626 	beq	r2,zero,89b4 <___vfiprintf_internal_r+0xac0>
    8d9c:	d9000017 	ldw	r4,0(sp)
    8da0:	d9800a04 	addi	r6,sp,40
    8da4:	900b883a 	mov	r5,r18
    8da8:	0007de80 	call	7de8 <__sprint_r.part.0>
    8dac:	103d5e1e 	bne	r2,zero,8328 <___vfiprintf_internal_r+0x434>
    8db0:	d9400b17 	ldw	r5,44(sp)
    8db4:	d8800c17 	ldw	r2,48(sp)
    8db8:	9811883a 	mov	r8,r19
    8dbc:	29400044 	addi	r5,r5,1
    8dc0:	003d3a06 	br	82ac <___vfiprintf_internal_r+0x3b8>
    8dc4:	d8000b15 	stw	zero,44(sp)
    8dc8:	003daf06 	br	8488 <___vfiprintf_internal_r+0x594>
    8dcc:	d9000317 	ldw	r4,12(sp)
    8dd0:	10c0040c 	andi	r3,r2,16
    8dd4:	25800017 	ldw	r22,0(r4)
    8dd8:	21000104 	addi	r4,r4,4
    8ddc:	d9000315 	stw	r4,12(sp)
    8de0:	1800031e 	bne	r3,zero,8df0 <___vfiprintf_internal_r+0xefc>
    8de4:	10c0100c 	andi	r3,r2,64
    8de8:	18000126 	beq	r3,zero,8df0 <___vfiprintf_internal_r+0xefc>
    8dec:	b5bfffcc 	andi	r22,r22,65535
    8df0:	d8000945 	stb	zero,37(sp)
    8df4:	48ffffd8 	cmpnei	r3,r9,-1
    8df8:	002b883a 	mov	r21,zero
    8dfc:	183e6a1e 	bne	r3,zero,87a8 <___vfiprintf_internal_r+0x8b4>
    8e00:	1021883a 	mov	r16,r2
    8e04:	0019883a 	mov	r12,zero
    8e08:	003df306 	br	85d8 <___vfiprintf_internal_r+0x6e4>
    8e0c:	d9000317 	ldw	r4,12(sp)
    8e10:	10c0040c 	andi	r3,r2,16
    8e14:	25800017 	ldw	r22,0(r4)
    8e18:	21000104 	addi	r4,r4,4
    8e1c:	d9000315 	stw	r4,12(sp)
    8e20:	1800031e 	bne	r3,zero,8e30 <___vfiprintf_internal_r+0xf3c>
    8e24:	10c0100c 	andi	r3,r2,64
    8e28:	18000126 	beq	r3,zero,8e30 <___vfiprintf_internal_r+0xf3c>
    8e2c:	b5bfffcc 	andi	r22,r22,65535
    8e30:	d8000945 	stb	zero,37(sp)
    8e34:	48ffffd8 	cmpnei	r3,r9,-1
    8e38:	002b883a 	mov	r21,zero
    8e3c:	183e731e 	bne	r3,zero,880c <___vfiprintf_internal_r+0x918>
    8e40:	1021883a 	mov	r16,r2
    8e44:	003e7a06 	br	8830 <___vfiprintf_internal_r+0x93c>
    8e48:	01400044 	movi	r5,1
    8e4c:	0009883a 	mov	r4,zero
    8e50:	9811883a 	mov	r8,r19
    8e54:	003d1106 	br	829c <___vfiprintf_internal_r+0x3a8>
    8e58:	10005726 	beq	r2,zero,8fb8 <___vfiprintf_internal_r+0x10c4>
    8e5c:	d9000017 	ldw	r4,0(sp)
    8e60:	d9800a04 	addi	r6,sp,40
    8e64:	900b883a 	mov	r5,r18
    8e68:	da400615 	stw	r9,24(sp)
    8e6c:	db000415 	stw	r12,16(sp)
    8e70:	db400215 	stw	r13,8(sp)
    8e74:	0007de80 	call	7de8 <__sprint_r.part.0>
    8e78:	103d2b1e 	bne	r2,zero,8328 <___vfiprintf_internal_r+0x434>
    8e7c:	d9000b17 	ldw	r4,44(sp)
    8e80:	d8800c17 	ldw	r2,48(sp)
    8e84:	da400617 	ldw	r9,24(sp)
    8e88:	db000417 	ldw	r12,16(sp)
    8e8c:	db400217 	ldw	r13,8(sp)
    8e90:	9811883a 	mov	r8,r19
    8e94:	21400044 	addi	r5,r4,1
    8e98:	003cda06 	br	8204 <___vfiprintf_internal_r+0x310>
    8e9c:	d8000945 	stb	zero,37(sp)
    8ea0:	48bfffd8 	cmpnei	r2,r9,-1
    8ea4:	103faa26 	beq	r2,zero,8d50 <___vfiprintf_internal_r+0xe5c>
    8ea8:	00bfdfc4 	movi	r2,-129
    8eac:	80a0703a 	and	r16,r16,r2
    8eb0:	4800621e 	bne	r9,zero,903c <___vfiprintf_internal_r+0x1148>
    8eb4:	002d883a 	mov	r22,zero
    8eb8:	002b883a 	mov	r21,zero
    8ebc:	9839883a 	mov	fp,r19
    8ec0:	003cc506 	br	81d8 <___vfiprintf_internal_r+0x2e4>
    8ec4:	a0800007 	ldb	r2,0(r20)
    8ec8:	df000315 	stw	fp,12(sp)
    8ecc:	003c4b06 	br	7ffc <___vfiprintf_internal_r+0x108>
    8ed0:	002d883a 	mov	r22,zero
    8ed4:	9839883a 	mov	fp,r19
    8ed8:	003cbf06 	br	81d8 <___vfiprintf_internal_r+0x2e4>
    8edc:	42000204 	addi	r8,r8,8
    8ee0:	31400044 	addi	r5,r6,1
    8ee4:	3009883a 	mov	r4,r6
    8ee8:	003cee06 	br	82a4 <___vfiprintf_internal_r+0x3b0>
    8eec:	8080040c 	andi	r2,r16,16
    8ef0:	10003e1e 	bne	r2,zero,8fec <___vfiprintf_internal_r+0x10f8>
    8ef4:	8400100c 	andi	r16,r16,64
    8ef8:	80003c26 	beq	r16,zero,8fec <___vfiprintf_internal_r+0x10f8>
    8efc:	d8800317 	ldw	r2,12(sp)
    8f00:	d8c00117 	ldw	r3,4(sp)
    8f04:	10800017 	ldw	r2,0(r2)
    8f08:	10c0000d 	sth	r3,0(r2)
    8f0c:	003e0506 	br	8724 <___vfiprintf_internal_r+0x830>
    8f10:	0009883a 	mov	r4,zero
    8f14:	01400044 	movi	r5,1
    8f18:	9811883a 	mov	r8,r19
    8f1c:	003cdf06 	br	829c <___vfiprintf_internal_r+0x3a8>
    8f20:	a82d883a 	mov	r22,r21
    8f24:	2839883a 	mov	fp,r5
    8f28:	003cab06 	br	81d8 <___vfiprintf_internal_r+0x2e4>
    8f2c:	e009883a 	mov	r4,fp
    8f30:	da000215 	stw	r8,8(sp)
    8f34:	d8c00315 	stw	r3,12(sp)
    8f38:	00004140 	call	414 <strlen>
    8f3c:	da000217 	ldw	r8,8(sp)
    8f40:	102b883a 	mov	r21,r2
    8f44:	102d883a 	mov	r22,r2
    8f48:	003ca206 	br	81d4 <___vfiprintf_internal_r+0x2e0>
    8f4c:	8005883a 	mov	r2,r16
    8f50:	003e0b06 	br	8780 <___vfiprintf_internal_r+0x88c>
    8f54:	00c00074 	movhi	r3,1
    8f58:	18c16c04 	addi	r3,r3,1456
    8f5c:	d8c00515 	stw	r3,20(sp)
    8f60:	80c0080c 	andi	r3,r16,32
    8f64:	18002826 	beq	r3,zero,9008 <___vfiprintf_internal_r+0x1114>
    8f68:	d8c00317 	ldw	r3,12(sp)
    8f6c:	1d800017 	ldw	r22,0(r3)
    8f70:	1d400117 	ldw	r21,4(r3)
    8f74:	18c00204 	addi	r3,r3,8
    8f78:	d8c00315 	stw	r3,12(sp)
    8f7c:	80c0004c 	andi	r3,r16,1
    8f80:	18001f26 	beq	r3,zero,9000 <___vfiprintf_internal_r+0x110c>
    8f84:	b546b03a 	or	r3,r22,r21
    8f88:	183fc426 	beq	r3,zero,8e9c <___vfiprintf_internal_r+0xfa8>
    8f8c:	00c00c04 	movi	r3,48
    8f90:	d8c00985 	stb	r3,38(sp)
    8f94:	d88009c5 	stb	r2,39(sp)
    8f98:	d8000945 	stb	zero,37(sp)
    8f9c:	48bfffd8 	cmpnei	r2,r9,-1
    8fa0:	80c00094 	ori	r3,r16,2
    8fa4:	10006d1e 	bne	r2,zero,915c <___vfiprintf_internal_r+0x1268>
    8fa8:	1821883a 	mov	r16,r3
    8fac:	003f6806 	br	8d50 <___vfiprintf_internal_r+0xe5c>
    8fb0:	8005883a 	mov	r2,r16
    8fb4:	003e0b06 	br	87e4 <___vfiprintf_internal_r+0x8f0>
    8fb8:	d8c00947 	ldb	r3,37(sp)
    8fbc:	18003b26 	beq	r3,zero,90ac <___vfiprintf_internal_r+0x11b8>
    8fc0:	d8800944 	addi	r2,sp,37
    8fc4:	d8801715 	stw	r2,92(sp)
    8fc8:	00800044 	movi	r2,1
    8fcc:	d8801815 	stw	r2,96(sp)
    8fd0:	01400044 	movi	r5,1
    8fd4:	9811883a 	mov	r8,r19
    8fd8:	003c9506 	br	8230 <___vfiprintf_internal_r+0x33c>
    8fdc:	00c00074 	movhi	r3,1
    8fe0:	18c17104 	addi	r3,r3,1476
    8fe4:	d8c00515 	stw	r3,20(sp)
    8fe8:	003fdd06 	br	8f60 <___vfiprintf_internal_r+0x106c>
    8fec:	d8800317 	ldw	r2,12(sp)
    8ff0:	d8c00117 	ldw	r3,4(sp)
    8ff4:	10800017 	ldw	r2,0(r2)
    8ff8:	10c00015 	stw	r3,0(r2)
    8ffc:	003dc906 	br	8724 <___vfiprintf_internal_r+0x830>
    9000:	8005883a 	mov	r2,r16
    9004:	003e4606 	br	8920 <___vfiprintf_internal_r+0xa2c>
    9008:	d9000317 	ldw	r4,12(sp)
    900c:	80c0040c 	andi	r3,r16,16
    9010:	25800017 	ldw	r22,0(r4)
    9014:	21000104 	addi	r4,r4,4
    9018:	d9000315 	stw	r4,12(sp)
    901c:	1800051e 	bne	r3,zero,9034 <___vfiprintf_internal_r+0x1140>
    9020:	80c0100c 	andi	r3,r16,64
    9024:	18000326 	beq	r3,zero,9034 <___vfiprintf_internal_r+0x1140>
    9028:	b5bfffcc 	andi	r22,r22,65535
    902c:	002b883a 	mov	r21,zero
    9030:	003fd206 	br	8f7c <___vfiprintf_internal_r+0x1088>
    9034:	002b883a 	mov	r21,zero
    9038:	003fd006 	br	8f7c <___vfiprintf_internal_r+0x1088>
    903c:	002d883a 	mov	r22,zero
    9040:	002b883a 	mov	r21,zero
    9044:	003f4206 	br	8d50 <___vfiprintf_internal_r+0xe5c>
    9048:	18800060 	cmpeqi	r2,r3,1
    904c:	1000341e 	bne	r2,zero,9120 <___vfiprintf_internal_r+0x122c>
    9050:	18c000a0 	cmpeqi	r3,r3,2
    9054:	183ff91e 	bne	r3,zero,903c <___vfiprintf_internal_r+0x1148>
    9058:	002d883a 	mov	r22,zero
    905c:	002b883a 	mov	r21,zero
    9060:	003df306 	br	8830 <___vfiprintf_internal_r+0x93c>
    9064:	488001f0 	cmpltui	r2,r9,7
    9068:	482b883a 	mov	r21,r9
    906c:	10000d26 	beq	r2,zero,90a4 <___vfiprintf_internal_r+0x11b0>
    9070:	07000074 	movhi	fp,1
    9074:	a82d883a 	mov	r22,r21
    9078:	d8c00315 	stw	r3,12(sp)
    907c:	e7017604 	addi	fp,fp,1496
    9080:	003c5406 	br	81d4 <___vfiprintf_internal_r+0x2e0>
    9084:	00c00074 	movhi	r3,1
    9088:	18c1f304 	addi	r3,r3,1996
    908c:	d8c00415 	stw	r3,16(sp)
    9090:	003eb806 	br	8b74 <___vfiprintf_internal_r+0xc80>
    9094:	01400044 	movi	r5,1
    9098:	0009883a 	mov	r4,zero
    909c:	9811883a 	mov	r8,r19
    90a0:	003c8006 	br	82a4 <___vfiprintf_internal_r+0x3b0>
    90a4:	05400184 	movi	r21,6
    90a8:	003ff106 	br	9070 <___vfiprintf_internal_r+0x117c>
    90ac:	0009883a 	mov	r4,zero
    90b0:	01400044 	movi	r5,1
    90b4:	9811883a 	mov	r8,r19
    90b8:	003c6006 	br	823c <___vfiprintf_internal_r+0x348>
    90bc:	d9000017 	ldw	r4,0(sp)
    90c0:	d9800a04 	addi	r6,sp,40
    90c4:	900b883a 	mov	r5,r18
    90c8:	0007de80 	call	7de8 <__sprint_r.part.0>
    90cc:	003c9606 	br	8328 <___vfiprintf_internal_r+0x434>
    90d0:	482d883a 	mov	r22,r9
    90d4:	d8c00315 	stw	r3,12(sp)
    90d8:	482b883a 	mov	r21,r9
    90dc:	003c3d06 	br	81d4 <___vfiprintf_internal_r+0x2e0>
    90e0:	301f883a 	mov	r15,r6
    90e4:	39c1f704 	addi	r7,r7,2012
    90e8:	003f0306 	br	8cf8 <___vfiprintf_internal_r+0xe04>
    90ec:	21400044 	addi	r5,r4,1
    90f0:	39c1f704 	addi	r7,r7,2012
    90f4:	003d1006 	br	8538 <___vfiprintf_internal_r+0x644>
    90f8:	01000074 	movhi	r4,1
    90fc:	2101f304 	addi	r4,r4,1996
    9100:	280d883a 	mov	r6,r5
    9104:	d9000415 	stw	r4,16(sp)
    9108:	003e6106 	br	8a90 <___vfiprintf_internal_r+0xb9c>
    910c:	00bfffc4 	movi	r2,-1
    9110:	d8800115 	stw	r2,4(sp)
    9114:	003c8706 	br	8334 <___vfiprintf_internal_r+0x440>
    9118:	05800c04 	movi	r22,48
    911c:	003d3206 	br	85e8 <___vfiprintf_internal_r+0x6f4>
    9120:	0019883a 	mov	r12,zero
    9124:	05800c04 	movi	r22,48
    9128:	003d2f06 	br	85e8 <___vfiprintf_internal_r+0x6f4>
    912c:	d8800317 	ldw	r2,12(sp)
    9130:	12400017 	ldw	r9,0(r2)
    9134:	17000104 	addi	fp,r2,4
    9138:	4800010e 	bge	r9,zero,9140 <___vfiprintf_internal_r+0x124c>
    913c:	027fffc4 	movi	r9,-1
    9140:	a0800043 	ldbu	r2,1(r20)
    9144:	df000315 	stw	fp,12(sp)
    9148:	1829883a 	mov	r20,r3
    914c:	10803fcc 	andi	r2,r2,255
    9150:	1080201c 	xori	r2,r2,128
    9154:	10bfe004 	addi	r2,r2,-128
    9158:	003ba806 	br	7ffc <___vfiprintf_internal_r+0x108>
    915c:	00bfdfc4 	movi	r2,-129
    9160:	8084703a 	and	r2,r16,r2
    9164:	14000094 	ori	r16,r2,2
    9168:	003ef906 	br	8d50 <___vfiprintf_internal_r+0xe5c>
    916c:	0019883a 	mov	r12,zero
    9170:	003d1906 	br	85d8 <___vfiprintf_internal_r+0x6e4>

00009174 <__vfiprintf_internal>:
    9174:	00c00074 	movhi	r3,1
    9178:	2005883a 	mov	r2,r4
    917c:	1909e617 	ldw	r4,10136(r3)
    9180:	300f883a 	mov	r7,r6
    9184:	280d883a 	mov	r6,r5
    9188:	100b883a 	mov	r5,r2
    918c:	0007ef41 	jmpi	7ef4 <___vfiprintf_internal_r>

00009190 <__sbprintf>:
    9190:	28c0038b 	ldhu	r3,14(r5)
    9194:	2880030b 	ldhu	r2,12(r5)
    9198:	2ac01917 	ldw	r11,100(r5)
    919c:	1806943a 	slli	r3,r3,16
    91a0:	2a800717 	ldw	r10,28(r5)
    91a4:	2a400917 	ldw	r9,36(r5)
    91a8:	defee204 	addi	sp,sp,-1144
    91ac:	10bfff4c 	andi	r2,r2,65533
    91b0:	10c4b03a 	or	r2,r2,r3
    91b4:	da001a04 	addi	r8,sp,104
    91b8:	00c10004 	movi	r3,1024
    91bc:	dc011a15 	stw	r16,1128(sp)
    91c0:	2821883a 	mov	r16,r5
    91c4:	d80b883a 	mov	r5,sp
    91c8:	dc811c15 	stw	r18,1136(sp)
    91cc:	dc411b15 	stw	r17,1132(sp)
    91d0:	dfc11d15 	stw	ra,1140(sp)
    91d4:	2025883a 	mov	r18,r4
    91d8:	dac01915 	stw	r11,100(sp)
    91dc:	d8800315 	stw	r2,12(sp)
    91e0:	da800715 	stw	r10,28(sp)
    91e4:	da400915 	stw	r9,36(sp)
    91e8:	da000015 	stw	r8,0(sp)
    91ec:	da000415 	stw	r8,16(sp)
    91f0:	d8c00215 	stw	r3,8(sp)
    91f4:	d8c00515 	stw	r3,20(sp)
    91f8:	d8000615 	stw	zero,24(sp)
    91fc:	0007ef40 	call	7ef4 <___vfiprintf_internal_r>
    9200:	1023883a 	mov	r17,r2
    9204:	10000d0e 	bge	r2,zero,923c <__sbprintf+0xac>
    9208:	d880030b 	ldhu	r2,12(sp)
    920c:	1080100c 	andi	r2,r2,64
    9210:	10000326 	beq	r2,zero,9220 <__sbprintf+0x90>
    9214:	8080030b 	ldhu	r2,12(r16)
    9218:	10801014 	ori	r2,r2,64
    921c:	8080030d 	sth	r2,12(r16)
    9220:	8805883a 	mov	r2,r17
    9224:	dfc11d17 	ldw	ra,1140(sp)
    9228:	dc811c17 	ldw	r18,1136(sp)
    922c:	dc411b17 	ldw	r17,1132(sp)
    9230:	dc011a17 	ldw	r16,1128(sp)
    9234:	dec11e04 	addi	sp,sp,1144
    9238:	f800283a 	ret
    923c:	d80b883a 	mov	r5,sp
    9240:	9009883a 	mov	r4,r18
    9244:	00047900 	call	4790 <_fflush_r>
    9248:	103fef26 	beq	r2,zero,9208 <__sbprintf+0x78>
    924c:	047fffc4 	movi	r17,-1
    9250:	003fed06 	br	9208 <__sbprintf+0x78>

00009254 <_write_r>:
    9254:	2807883a 	mov	r3,r5
    9258:	defffe04 	addi	sp,sp,-8
    925c:	dc000015 	stw	r16,0(sp)
    9260:	300b883a 	mov	r5,r6
    9264:	00800074 	movhi	r2,1
    9268:	380d883a 	mov	r6,r7
    926c:	2021883a 	mov	r16,r4
    9270:	1809883a 	mov	r4,r3
    9274:	dfc00115 	stw	ra,4(sp)
    9278:	1010ec15 	stw	zero,17328(r2)
    927c:	000e3640 	call	e364 <write>
    9280:	10ffffd8 	cmpnei	r3,r2,-1
    9284:	18000426 	beq	r3,zero,9298 <_write_r+0x44>
    9288:	dfc00117 	ldw	ra,4(sp)
    928c:	dc000017 	ldw	r16,0(sp)
    9290:	dec00204 	addi	sp,sp,8
    9294:	f800283a 	ret
    9298:	00c00074 	movhi	r3,1
    929c:	18d0ec17 	ldw	r3,17328(r3)
    92a0:	183ff926 	beq	r3,zero,9288 <_write_r+0x34>
    92a4:	80c00015 	stw	r3,0(r16)
    92a8:	dfc00117 	ldw	ra,4(sp)
    92ac:	dc000017 	ldw	r16,0(sp)
    92b0:	dec00204 	addi	sp,sp,8
    92b4:	f800283a 	ret

000092b8 <_close_r>:
    92b8:	defffe04 	addi	sp,sp,-8
    92bc:	dc000015 	stw	r16,0(sp)
    92c0:	00800074 	movhi	r2,1
    92c4:	2021883a 	mov	r16,r4
    92c8:	2809883a 	mov	r4,r5
    92cc:	dfc00115 	stw	ra,4(sp)
    92d0:	1010ec15 	stw	zero,17328(r2)
    92d4:	000d97c0 	call	d97c <close>
    92d8:	10ffffd8 	cmpnei	r3,r2,-1
    92dc:	18000426 	beq	r3,zero,92f0 <_close_r+0x38>
    92e0:	dfc00117 	ldw	ra,4(sp)
    92e4:	dc000017 	ldw	r16,0(sp)
    92e8:	dec00204 	addi	sp,sp,8
    92ec:	f800283a 	ret
    92f0:	00c00074 	movhi	r3,1
    92f4:	18d0ec17 	ldw	r3,17328(r3)
    92f8:	183ff926 	beq	r3,zero,92e0 <_close_r+0x28>
    92fc:	80c00015 	stw	r3,0(r16)
    9300:	dfc00117 	ldw	ra,4(sp)
    9304:	dc000017 	ldw	r16,0(sp)
    9308:	dec00204 	addi	sp,sp,8
    930c:	f800283a 	ret

00009310 <__assert_func>:
    9310:	00800074 	movhi	r2,1
    9314:	1209e617 	ldw	r8,10136(r2)
    9318:	defffc04 	addi	sp,sp,-16
    931c:	3807883a 	mov	r3,r7
    9320:	3005883a 	mov	r2,r6
    9324:	dfc00315 	stw	ra,12(sp)
    9328:	42400317 	ldw	r9,12(r8)
    932c:	200f883a 	mov	r7,r4
    9330:	2811883a 	mov	r8,r5
    9334:	180d883a 	mov	r6,r3
    9338:	10000a26 	beq	r2,zero,9364 <__assert_func+0x54>
    933c:	00c00074 	movhi	r3,1
    9340:	18c1fb04 	addi	r3,r3,2028
    9344:	01400074 	movhi	r5,1
    9348:	2941ff04 	addi	r5,r5,2044
    934c:	4809883a 	mov	r4,r9
    9350:	d8c00115 	stw	r3,4(sp)
    9354:	da000015 	stw	r8,0(sp)
    9358:	d8800215 	stw	r2,8(sp)
    935c:	00096240 	call	9624 <fiprintf>
    9360:	0009e6c0 	call	9e6c <abort>
    9364:	00c00074 	movhi	r3,1
    9368:	18c1fe04 	addi	r3,r3,2040
    936c:	1805883a 	mov	r2,r3
    9370:	003ff406 	br	9344 <__assert_func+0x34>

00009374 <__assert>:
    9374:	deffff04 	addi	sp,sp,-4
    9378:	300f883a 	mov	r7,r6
    937c:	000d883a 	mov	r6,zero
    9380:	dfc00015 	stw	ra,0(sp)
    9384:	00093100 	call	9310 <__assert_func>

00009388 <_calloc_r>:
    9388:	2806d43a 	srli	r3,r5,16
    938c:	defffb04 	addi	sp,sp,-20
    9390:	dc000015 	stw	r16,0(sp)
    9394:	dfc00415 	stw	ra,16(sp)
    9398:	dcc00315 	stw	r19,12(sp)
    939c:	dc800215 	stw	r18,8(sp)
    93a0:	dc400115 	stw	r17,4(sp)
    93a4:	2805883a 	mov	r2,r5
    93a8:	2021883a 	mov	r16,r4
    93ac:	300ad43a 	srli	r5,r6,16
    93b0:	18002d1e 	bne	r3,zero,9468 <_calloc_r+0xe0>
    93b4:	2800431e 	bne	r5,zero,94c4 <_calloc_r+0x13c>
    93b8:	317fffcc 	andi	r5,r6,65535
    93bc:	113fffcc 	andi	r4,r2,65535
    93c0:	000b0900 	call	b090 <__mulsi3>
    93c4:	8009883a 	mov	r4,r16
    93c8:	100b883a 	mov	r5,r2
    93cc:	00058600 	call	5860 <_malloc_r>
    93d0:	1009883a 	mov	r4,r2
    93d4:	10003926 	beq	r2,zero,94bc <_calloc_r+0x134>
    93d8:	11bfff17 	ldw	r6,-4(r2)
    93dc:	00bfff04 	movi	r2,-4
    93e0:	308c703a 	and	r6,r6,r2
    93e4:	31bfff04 	addi	r6,r6,-4
    93e8:	30800968 	cmpgeui	r2,r6,37
    93ec:	10000c1e 	bne	r2,zero,9420 <_calloc_r+0x98>
    93f0:	30800530 	cmpltui	r2,r6,20
    93f4:	1000151e 	bne	r2,zero,944c <_calloc_r+0xc4>
    93f8:	20000015 	stw	zero,0(r4)
    93fc:	20000115 	stw	zero,4(r4)
    9400:	30800728 	cmpgeui	r2,r6,28
    9404:	10001626 	beq	r2,zero,9460 <_calloc_r+0xd8>
    9408:	20000215 	stw	zero,8(r4)
    940c:	20000315 	stw	zero,12(r4)
    9410:	31800920 	cmpeqi	r6,r6,36
    9414:	3000321e 	bne	r6,zero,94e0 <_calloc_r+0x158>
    9418:	20800404 	addi	r2,r4,16
    941c:	00000c06 	br	9450 <_calloc_r+0xc8>
    9420:	000b883a 	mov	r5,zero
    9424:	00063380 	call	6338 <memset>
    9428:	1009883a 	mov	r4,r2
    942c:	2005883a 	mov	r2,r4
    9430:	dfc00417 	ldw	ra,16(sp)
    9434:	dcc00317 	ldw	r19,12(sp)
    9438:	dc800217 	ldw	r18,8(sp)
    943c:	dc400117 	ldw	r17,4(sp)
    9440:	dc000017 	ldw	r16,0(sp)
    9444:	dec00504 	addi	sp,sp,20
    9448:	f800283a 	ret
    944c:	2005883a 	mov	r2,r4
    9450:	10000015 	stw	zero,0(r2)
    9454:	10000115 	stw	zero,4(r2)
    9458:	10000215 	stw	zero,8(r2)
    945c:	003ff306 	br	942c <_calloc_r+0xa4>
    9460:	20800204 	addi	r2,r4,8
    9464:	003ffa06 	br	9450 <_calloc_r+0xc8>
    9468:	2800191e 	bne	r5,zero,94d0 <_calloc_r+0x148>
    946c:	1823883a 	mov	r17,r3
    9470:	3027883a 	mov	r19,r6
    9474:	317fffcc 	andi	r5,r6,65535
    9478:	113fffcc 	andi	r4,r2,65535
    947c:	000b0900 	call	b090 <__mulsi3>
    9480:	897fffcc 	andi	r5,r17,65535
    9484:	993fffcc 	andi	r4,r19,65535
    9488:	1025883a 	mov	r18,r2
    948c:	000b0900 	call	b090 <__mulsi3>
    9490:	9006d43a 	srli	r3,r18,16
    9494:	10cb883a 	add	r5,r2,r3
    9498:	2804d43a 	srli	r2,r5,16
    949c:	10000c1e 	bne	r2,zero,94d0 <_calloc_r+0x148>
    94a0:	280a943a 	slli	r5,r5,16
    94a4:	94bfffcc 	andi	r18,r18,65535
    94a8:	8009883a 	mov	r4,r16
    94ac:	2c8ab03a 	or	r5,r5,r18
    94b0:	00058600 	call	5860 <_malloc_r>
    94b4:	1009883a 	mov	r4,r2
    94b8:	103fc71e 	bne	r2,zero,93d8 <_calloc_r+0x50>
    94bc:	0009883a 	mov	r4,zero
    94c0:	003fda06 	br	942c <_calloc_r+0xa4>
    94c4:	2823883a 	mov	r17,r5
    94c8:	1027883a 	mov	r19,r2
    94cc:	003fe906 	br	9474 <_calloc_r+0xec>
    94d0:	00094f00 	call	94f0 <__errno>
    94d4:	00c00304 	movi	r3,12
    94d8:	10c00015 	stw	r3,0(r2)
    94dc:	003ff706 	br	94bc <_calloc_r+0x134>
    94e0:	20000415 	stw	zero,16(r4)
    94e4:	20800604 	addi	r2,r4,24
    94e8:	20000515 	stw	zero,20(r4)
    94ec:	003fd806 	br	9450 <_calloc_r+0xc8>

000094f0 <__errno>:
    94f0:	00800074 	movhi	r2,1
    94f4:	1089e617 	ldw	r2,10136(r2)
    94f8:	f800283a 	ret

000094fc <_fclose_r>:
    94fc:	defffc04 	addi	sp,sp,-16
    9500:	dfc00315 	stw	ra,12(sp)
    9504:	dc800215 	stw	r18,8(sp)
    9508:	dc400115 	stw	r17,4(sp)
    950c:	dc000015 	stw	r16,0(sp)
    9510:	28000726 	beq	r5,zero,9530 <_fclose_r+0x34>
    9514:	2821883a 	mov	r16,r5
    9518:	2023883a 	mov	r17,r4
    951c:	20000226 	beq	r4,zero,9528 <_fclose_r+0x2c>
    9520:	20800e17 	ldw	r2,56(r4)
    9524:	10002726 	beq	r2,zero,95c4 <_fclose_r+0xc8>
    9528:	8080030f 	ldh	r2,12(r16)
    952c:	1000081e 	bne	r2,zero,9550 <_fclose_r+0x54>
    9530:	0025883a 	mov	r18,zero
    9534:	9005883a 	mov	r2,r18
    9538:	dfc00317 	ldw	ra,12(sp)
    953c:	dc800217 	ldw	r18,8(sp)
    9540:	dc400117 	ldw	r17,4(sp)
    9544:	dc000017 	ldw	r16,0(sp)
    9548:	dec00404 	addi	sp,sp,16
    954c:	f800283a 	ret
    9550:	800b883a 	mov	r5,r16
    9554:	8809883a 	mov	r4,r17
    9558:	00045880 	call	4588 <__sflush_r>
    955c:	80c00b17 	ldw	r3,44(r16)
    9560:	1025883a 	mov	r18,r2
    9564:	18000426 	beq	r3,zero,9578 <_fclose_r+0x7c>
    9568:	81400717 	ldw	r5,28(r16)
    956c:	8809883a 	mov	r4,r17
    9570:	183ee83a 	callr	r3
    9574:	10001716 	blt	r2,zero,95d4 <_fclose_r+0xd8>
    9578:	8080030b 	ldhu	r2,12(r16)
    957c:	1080200c 	andi	r2,r2,128
    9580:	1000181e 	bne	r2,zero,95e4 <_fclose_r+0xe8>
    9584:	81400c17 	ldw	r5,48(r16)
    9588:	28000526 	beq	r5,zero,95a0 <_fclose_r+0xa4>
    958c:	80801004 	addi	r2,r16,64
    9590:	28800226 	beq	r5,r2,959c <_fclose_r+0xa0>
    9594:	8809883a 	mov	r4,r17
    9598:	0004d240 	call	4d24 <_free_r>
    959c:	80000c15 	stw	zero,48(r16)
    95a0:	81401117 	ldw	r5,68(r16)
    95a4:	28000326 	beq	r5,zero,95b4 <_fclose_r+0xb8>
    95a8:	8809883a 	mov	r4,r17
    95ac:	0004d240 	call	4d24 <_free_r>
    95b0:	80001115 	stw	zero,68(r16)
    95b4:	0004bc80 	call	4bc8 <__sfp_lock_acquire>
    95b8:	8000030d 	sth	zero,12(r16)
    95bc:	0004bcc0 	call	4bcc <__sfp_lock_release>
    95c0:	003fdc06 	br	9534 <_fclose_r+0x38>
    95c4:	0004bb80 	call	4bb8 <__sinit>
    95c8:	8080030f 	ldh	r2,12(r16)
    95cc:	103fd826 	beq	r2,zero,9530 <_fclose_r+0x34>
    95d0:	003fdf06 	br	9550 <_fclose_r+0x54>
    95d4:	8080030b 	ldhu	r2,12(r16)
    95d8:	04bfffc4 	movi	r18,-1
    95dc:	1080200c 	andi	r2,r2,128
    95e0:	103fe826 	beq	r2,zero,9584 <_fclose_r+0x88>
    95e4:	81400417 	ldw	r5,16(r16)
    95e8:	8809883a 	mov	r4,r17
    95ec:	0004d240 	call	4d24 <_free_r>
    95f0:	003fe406 	br	9584 <_fclose_r+0x88>

000095f4 <fclose>:
    95f4:	00800074 	movhi	r2,1
    95f8:	200b883a 	mov	r5,r4
    95fc:	1109e617 	ldw	r4,10136(r2)
    9600:	00094fc1 	jmpi	94fc <_fclose_r>

00009604 <_fiprintf_r>:
    9604:	defffe04 	addi	sp,sp,-8
    9608:	dfc00015 	stw	ra,0(sp)
    960c:	d9c00115 	stw	r7,4(sp)
    9610:	d9c00104 	addi	r7,sp,4
    9614:	0009bd80 	call	9bd8 <_vfiprintf_r>
    9618:	dfc00017 	ldw	ra,0(sp)
    961c:	dec00204 	addi	sp,sp,8
    9620:	f800283a 	ret

00009624 <fiprintf>:
    9624:	defffd04 	addi	sp,sp,-12
    9628:	2005883a 	mov	r2,r4
    962c:	dfc00015 	stw	ra,0(sp)
    9630:	d9800115 	stw	r6,4(sp)
    9634:	d9c00215 	stw	r7,8(sp)
    9638:	00c00074 	movhi	r3,1
    963c:	1909e617 	ldw	r4,10136(r3)
    9640:	280d883a 	mov	r6,r5
    9644:	d9c00104 	addi	r7,sp,4
    9648:	100b883a 	mov	r5,r2
    964c:	0009bd80 	call	9bd8 <_vfiprintf_r>
    9650:	dfc00017 	ldw	ra,0(sp)
    9654:	dec00304 	addi	sp,sp,12
    9658:	f800283a 	ret

0000965c <__fputwc>:
    965c:	defff904 	addi	sp,sp,-28
    9660:	dcc00415 	stw	r19,16(sp)
    9664:	dc800315 	stw	r18,12(sp)
    9668:	dc000115 	stw	r16,4(sp)
    966c:	dfc00615 	stw	ra,24(sp)
    9670:	dd000515 	stw	r20,20(sp)
    9674:	dc400215 	stw	r17,8(sp)
    9678:	2027883a 	mov	r19,r4
    967c:	2825883a 	mov	r18,r5
    9680:	3021883a 	mov	r16,r6
    9684:	00099880 	call	9988 <__locale_mb_cur_max>
    9688:	10800058 	cmpnei	r2,r2,1
    968c:	1000071e 	bne	r2,zero,96ac <__fputwc+0x50>
    9690:	90bfffc4 	addi	r2,r18,-1
    9694:	10803fe8 	cmpgeui	r2,r2,255
    9698:	1000041e 	bne	r2,zero,96ac <__fputwc+0x50>
    969c:	900b883a 	mov	r5,r18
    96a0:	dc8000c5 	stb	r18,3(sp)
    96a4:	05000044 	movi	r20,1
    96a8:	00000a06 	br	96d4 <__fputwc+0x78>
    96ac:	81c01704 	addi	r7,r16,92
    96b0:	900d883a 	mov	r6,r18
    96b4:	d94000c4 	addi	r5,sp,3
    96b8:	9809883a 	mov	r4,r19
    96bc:	0009d3c0 	call	9d3c <_wcrtomb_r>
    96c0:	1029883a 	mov	r20,r2
    96c4:	10bfffd8 	cmpnei	r2,r2,-1
    96c8:	10003826 	beq	r2,zero,97ac <__fputwc+0x150>
    96cc:	a0001f26 	beq	r20,zero,974c <__fputwc+0xf0>
    96d0:	d94000c3 	ldbu	r5,3(sp)
    96d4:	0023883a 	mov	r17,zero
    96d8:	00000a06 	br	9704 <__fputwc+0xa8>
    96dc:	80800017 	ldw	r2,0(r16)
    96e0:	11400005 	stb	r5,0(r2)
    96e4:	80c00017 	ldw	r3,0(r16)
    96e8:	18c00044 	addi	r3,r3,1
    96ec:	80c00015 	stw	r3,0(r16)
    96f0:	8c400044 	addi	r17,r17,1
    96f4:	d88000c4 	addi	r2,sp,3
    96f8:	1447883a 	add	r3,r2,r17
    96fc:	8d00132e 	bgeu	r17,r20,974c <__fputwc+0xf0>
    9700:	19400003 	ldbu	r5,0(r3)
    9704:	80c00217 	ldw	r3,8(r16)
    9708:	18ffffc4 	addi	r3,r3,-1
    970c:	80c00215 	stw	r3,8(r16)
    9710:	183ff20e 	bge	r3,zero,96dc <__fputwc+0x80>
    9714:	80800617 	ldw	r2,24(r16)
    9718:	18801516 	blt	r3,r2,9770 <__fputwc+0x114>
    971c:	80800017 	ldw	r2,0(r16)
    9720:	11400005 	stb	r5,0(r2)
    9724:	80800017 	ldw	r2,0(r16)
    9728:	10c00003 	ldbu	r3,0(r2)
    972c:	10800044 	addi	r2,r2,1
    9730:	18c002a0 	cmpeqi	r3,r3,10
    9734:	1800161e 	bne	r3,zero,9790 <__fputwc+0x134>
    9738:	80800015 	stw	r2,0(r16)
    973c:	8c400044 	addi	r17,r17,1
    9740:	d88000c4 	addi	r2,sp,3
    9744:	1447883a 	add	r3,r2,r17
    9748:	8d3fed36 	bltu	r17,r20,9700 <__fputwc+0xa4>
    974c:	9005883a 	mov	r2,r18
    9750:	dfc00617 	ldw	ra,24(sp)
    9754:	dd000517 	ldw	r20,20(sp)
    9758:	dcc00417 	ldw	r19,16(sp)
    975c:	dc800317 	ldw	r18,12(sp)
    9760:	dc400217 	ldw	r17,8(sp)
    9764:	dc000117 	ldw	r16,4(sp)
    9768:	dec00704 	addi	sp,sp,28
    976c:	f800283a 	ret
    9770:	29403fcc 	andi	r5,r5,255
    9774:	800d883a 	mov	r6,r16
    9778:	9809883a 	mov	r4,r19
    977c:	0009bdc0 	call	9bdc <__swbuf_r>
    9780:	10bfffe0 	cmpeqi	r2,r2,-1
    9784:	103fda26 	beq	r2,zero,96f0 <__fputwc+0x94>
    9788:	00bfffc4 	movi	r2,-1
    978c:	003ff006 	br	9750 <__fputwc+0xf4>
    9790:	800d883a 	mov	r6,r16
    9794:	01400284 	movi	r5,10
    9798:	9809883a 	mov	r4,r19
    979c:	0009bdc0 	call	9bdc <__swbuf_r>
    97a0:	10bfffe0 	cmpeqi	r2,r2,-1
    97a4:	103fd226 	beq	r2,zero,96f0 <__fputwc+0x94>
    97a8:	003ff706 	br	9788 <__fputwc+0x12c>
    97ac:	8080030b 	ldhu	r2,12(r16)
    97b0:	10801014 	ori	r2,r2,64
    97b4:	8080030d 	sth	r2,12(r16)
    97b8:	00bfffc4 	movi	r2,-1
    97bc:	003fe406 	br	9750 <__fputwc+0xf4>

000097c0 <_fputwc_r>:
    97c0:	3080030b 	ldhu	r2,12(r6)
    97c4:	10c8000c 	andi	r3,r2,8192
    97c8:	1800051e 	bne	r3,zero,97e0 <_fputwc_r+0x20>
    97cc:	30c01917 	ldw	r3,100(r6)
    97d0:	10880014 	ori	r2,r2,8192
    97d4:	3080030d 	sth	r2,12(r6)
    97d8:	18880014 	ori	r2,r3,8192
    97dc:	30801915 	stw	r2,100(r6)
    97e0:	000965c1 	jmpi	965c <__fputwc>

000097e4 <fputwc>:
    97e4:	defffc04 	addi	sp,sp,-16
    97e8:	00800074 	movhi	r2,1
    97ec:	dc000215 	stw	r16,8(sp)
    97f0:	1409e617 	ldw	r16,10136(r2)
    97f4:	dfc00315 	stw	ra,12(sp)
    97f8:	280d883a 	mov	r6,r5
    97fc:	200b883a 	mov	r5,r4
    9800:	80000226 	beq	r16,zero,980c <fputwc+0x28>
    9804:	80800e17 	ldw	r2,56(r16)
    9808:	10000d26 	beq	r2,zero,9840 <fputwc+0x5c>
    980c:	3080030b 	ldhu	r2,12(r6)
    9810:	10c8000c 	andi	r3,r2,8192
    9814:	1800051e 	bne	r3,zero,982c <fputwc+0x48>
    9818:	30c01917 	ldw	r3,100(r6)
    981c:	10880014 	ori	r2,r2,8192
    9820:	3080030d 	sth	r2,12(r6)
    9824:	18880014 	ori	r2,r3,8192
    9828:	30801915 	stw	r2,100(r6)
    982c:	8009883a 	mov	r4,r16
    9830:	dfc00317 	ldw	ra,12(sp)
    9834:	dc000217 	ldw	r16,8(sp)
    9838:	dec00404 	addi	sp,sp,16
    983c:	000965c1 	jmpi	965c <__fputwc>
    9840:	d9000015 	stw	r4,0(sp)
    9844:	8009883a 	mov	r4,r16
    9848:	d9800115 	stw	r6,4(sp)
    984c:	0004bb80 	call	4bb8 <__sinit>
    9850:	d9800117 	ldw	r6,4(sp)
    9854:	d9400017 	ldw	r5,0(sp)
    9858:	003fec06 	br	980c <fputwc+0x28>

0000985c <_fstat_r>:
    985c:	2807883a 	mov	r3,r5
    9860:	defffe04 	addi	sp,sp,-8
    9864:	dc000015 	stw	r16,0(sp)
    9868:	00800074 	movhi	r2,1
    986c:	300b883a 	mov	r5,r6
    9870:	2021883a 	mov	r16,r4
    9874:	1809883a 	mov	r4,r3
    9878:	dfc00115 	stw	ra,4(sp)
    987c:	1010ec15 	stw	zero,17328(r2)
    9880:	000dafc0 	call	dafc <fstat>
    9884:	10ffffd8 	cmpnei	r3,r2,-1
    9888:	18000426 	beq	r3,zero,989c <_fstat_r+0x40>
    988c:	dfc00117 	ldw	ra,4(sp)
    9890:	dc000017 	ldw	r16,0(sp)
    9894:	dec00204 	addi	sp,sp,8
    9898:	f800283a 	ret
    989c:	00c00074 	movhi	r3,1
    98a0:	18d0ec17 	ldw	r3,17328(r3)
    98a4:	183ff926 	beq	r3,zero,988c <_fstat_r+0x30>
    98a8:	80c00015 	stw	r3,0(r16)
    98ac:	dfc00117 	ldw	ra,4(sp)
    98b0:	dc000017 	ldw	r16,0(sp)
    98b4:	dec00204 	addi	sp,sp,8
    98b8:	f800283a 	ret

000098bc <_isatty_r>:
    98bc:	defffe04 	addi	sp,sp,-8
    98c0:	dc000015 	stw	r16,0(sp)
    98c4:	00800074 	movhi	r2,1
    98c8:	2021883a 	mov	r16,r4
    98cc:	2809883a 	mov	r4,r5
    98d0:	dfc00115 	stw	ra,4(sp)
    98d4:	1010ec15 	stw	zero,17328(r2)
    98d8:	000dc140 	call	dc14 <isatty>
    98dc:	10ffffd8 	cmpnei	r3,r2,-1
    98e0:	18000426 	beq	r3,zero,98f4 <_isatty_r+0x38>
    98e4:	dfc00117 	ldw	ra,4(sp)
    98e8:	dc000017 	ldw	r16,0(sp)
    98ec:	dec00204 	addi	sp,sp,8
    98f0:	f800283a 	ret
    98f4:	00c00074 	movhi	r3,1
    98f8:	18d0ec17 	ldw	r3,17328(r3)
    98fc:	183ff926 	beq	r3,zero,98e4 <_isatty_r+0x28>
    9900:	80c00015 	stw	r3,0(r16)
    9904:	dfc00117 	ldw	ra,4(sp)
    9908:	dc000017 	ldw	r16,0(sp)
    990c:	dec00204 	addi	sp,sp,8
    9910:	f800283a 	ret

00009914 <_setlocale_r>:
    9914:	30001626 	beq	r6,zero,9970 <_setlocale_r+0x5c>
    9918:	01400074 	movhi	r5,1
    991c:	defffe04 	addi	sp,sp,-8
    9920:	29420c04 	addi	r5,r5,2096
    9924:	3009883a 	mov	r4,r6
    9928:	dc000015 	stw	r16,0(sp)
    992c:	dfc00115 	stw	ra,4(sp)
    9930:	3021883a 	mov	r16,r6
    9934:	0009b200 	call	9b20 <strcmp>
    9938:	1000061e 	bne	r2,zero,9954 <_setlocale_r+0x40>
    993c:	00800074 	movhi	r2,1
    9940:	10820b04 	addi	r2,r2,2092
    9944:	dfc00117 	ldw	ra,4(sp)
    9948:	dc000017 	ldw	r16,0(sp)
    994c:	dec00204 	addi	sp,sp,8
    9950:	f800283a 	ret
    9954:	80800003 	ldbu	r2,0(r16)
    9958:	10bfef44 	addi	r2,r2,-67
    995c:	10000726 	beq	r2,zero,997c <_setlocale_r+0x68>
    9960:	80800003 	ldbu	r2,0(r16)
    9964:	103ff526 	beq	r2,zero,993c <_setlocale_r+0x28>
    9968:	0005883a 	mov	r2,zero
    996c:	003ff506 	br	9944 <_setlocale_r+0x30>
    9970:	00800074 	movhi	r2,1
    9974:	10820b04 	addi	r2,r2,2092
    9978:	f800283a 	ret
    997c:	80800043 	ldbu	r2,1(r16)
    9980:	103fee26 	beq	r2,zero,993c <_setlocale_r+0x28>
    9984:	003ff606 	br	9960 <_setlocale_r+0x4c>

00009988 <__locale_mb_cur_max>:
    9988:	00800074 	movhi	r2,1
    998c:	10855207 	ldb	r2,5448(r2)
    9990:	f800283a 	ret

00009994 <setlocale>:
    9994:	28001626 	beq	r5,zero,99f0 <setlocale+0x5c>
    9998:	defffe04 	addi	sp,sp,-8
    999c:	dc000015 	stw	r16,0(sp)
    99a0:	2821883a 	mov	r16,r5
    99a4:	01400074 	movhi	r5,1
    99a8:	29420c04 	addi	r5,r5,2096
    99ac:	8009883a 	mov	r4,r16
    99b0:	dfc00115 	stw	ra,4(sp)
    99b4:	0009b200 	call	9b20 <strcmp>
    99b8:	1000061e 	bne	r2,zero,99d4 <setlocale+0x40>
    99bc:	00800074 	movhi	r2,1
    99c0:	10820b04 	addi	r2,r2,2092
    99c4:	dfc00117 	ldw	ra,4(sp)
    99c8:	dc000017 	ldw	r16,0(sp)
    99cc:	dec00204 	addi	sp,sp,8
    99d0:	f800283a 	ret
    99d4:	80800003 	ldbu	r2,0(r16)
    99d8:	10bfef44 	addi	r2,r2,-67
    99dc:	10000726 	beq	r2,zero,99fc <setlocale+0x68>
    99e0:	80800003 	ldbu	r2,0(r16)
    99e4:	103ff526 	beq	r2,zero,99bc <setlocale+0x28>
    99e8:	0005883a 	mov	r2,zero
    99ec:	003ff506 	br	99c4 <setlocale+0x30>
    99f0:	00800074 	movhi	r2,1
    99f4:	10820b04 	addi	r2,r2,2092
    99f8:	f800283a 	ret
    99fc:	80800043 	ldbu	r2,1(r16)
    9a00:	103fee26 	beq	r2,zero,99bc <setlocale+0x28>
    9a04:	003ff606 	br	99e0 <setlocale+0x4c>

00009a08 <_lseek_r>:
    9a08:	2807883a 	mov	r3,r5
    9a0c:	defffe04 	addi	sp,sp,-8
    9a10:	dc000015 	stw	r16,0(sp)
    9a14:	300b883a 	mov	r5,r6
    9a18:	00800074 	movhi	r2,1
    9a1c:	380d883a 	mov	r6,r7
    9a20:	2021883a 	mov	r16,r4
    9a24:	1809883a 	mov	r4,r3
    9a28:	dfc00115 	stw	ra,4(sp)
    9a2c:	1010ec15 	stw	zero,17328(r2)
    9a30:	000df180 	call	df18 <lseek>
    9a34:	10ffffd8 	cmpnei	r3,r2,-1
    9a38:	18000426 	beq	r3,zero,9a4c <_lseek_r+0x44>
    9a3c:	dfc00117 	ldw	ra,4(sp)
    9a40:	dc000017 	ldw	r16,0(sp)
    9a44:	dec00204 	addi	sp,sp,8
    9a48:	f800283a 	ret
    9a4c:	00c00074 	movhi	r3,1
    9a50:	18d0ec17 	ldw	r3,17328(r3)
    9a54:	183ff926 	beq	r3,zero,9a3c <_lseek_r+0x34>
    9a58:	80c00015 	stw	r3,0(r16)
    9a5c:	dfc00117 	ldw	ra,4(sp)
    9a60:	dc000017 	ldw	r16,0(sp)
    9a64:	dec00204 	addi	sp,sp,8
    9a68:	f800283a 	ret

00009a6c <_mbtowc_r>:
    9a6c:	00800074 	movhi	r2,1
    9a70:	10854117 	ldw	r2,5380(r2)
    9a74:	1000683a 	jmp	r2

00009a78 <__ascii_mbtowc>:
    9a78:	deffff04 	addi	sp,sp,-4
    9a7c:	28000826 	beq	r5,zero,9aa0 <__ascii_mbtowc+0x28>
    9a80:	30000926 	beq	r6,zero,9aa8 <__ascii_mbtowc+0x30>
    9a84:	38000b26 	beq	r7,zero,9ab4 <__ascii_mbtowc+0x3c>
    9a88:	30800003 	ldbu	r2,0(r6)
    9a8c:	28800015 	stw	r2,0(r5)
    9a90:	30800003 	ldbu	r2,0(r6)
    9a94:	1004c03a 	cmpne	r2,r2,zero
    9a98:	dec00104 	addi	sp,sp,4
    9a9c:	f800283a 	ret
    9aa0:	d80b883a 	mov	r5,sp
    9aa4:	303ff71e 	bne	r6,zero,9a84 <__ascii_mbtowc+0xc>
    9aa8:	0005883a 	mov	r2,zero
    9aac:	dec00104 	addi	sp,sp,4
    9ab0:	f800283a 	ret
    9ab4:	00bfff84 	movi	r2,-2
    9ab8:	003ff706 	br	9a98 <__ascii_mbtowc+0x20>

00009abc <_read_r>:
    9abc:	2807883a 	mov	r3,r5
    9ac0:	defffe04 	addi	sp,sp,-8
    9ac4:	dc000015 	stw	r16,0(sp)
    9ac8:	300b883a 	mov	r5,r6
    9acc:	00800074 	movhi	r2,1
    9ad0:	380d883a 	mov	r6,r7
    9ad4:	2021883a 	mov	r16,r4
    9ad8:	1809883a 	mov	r4,r3
    9adc:	dfc00115 	stw	ra,4(sp)
    9ae0:	1010ec15 	stw	zero,17328(r2)
    9ae4:	000e0f80 	call	e0f8 <read>
    9ae8:	10ffffd8 	cmpnei	r3,r2,-1
    9aec:	18000426 	beq	r3,zero,9b00 <_read_r+0x44>
    9af0:	dfc00117 	ldw	ra,4(sp)
    9af4:	dc000017 	ldw	r16,0(sp)
    9af8:	dec00204 	addi	sp,sp,8
    9afc:	f800283a 	ret
    9b00:	00c00074 	movhi	r3,1
    9b04:	18d0ec17 	ldw	r3,17328(r3)
    9b08:	183ff926 	beq	r3,zero,9af0 <_read_r+0x34>
    9b0c:	80c00015 	stw	r3,0(r16)
    9b10:	dfc00117 	ldw	ra,4(sp)
    9b14:	dc000017 	ldw	r16,0(sp)
    9b18:	dec00204 	addi	sp,sp,8
    9b1c:	f800283a 	ret

00009b20 <strcmp>:
    9b20:	2144b03a 	or	r2,r4,r5
    9b24:	108000cc 	andi	r2,r2,3
    9b28:	1000141e 	bne	r2,zero,9b7c <strcmp+0x5c>
    9b2c:	20800017 	ldw	r2,0(r4)
    9b30:	28c00017 	ldw	r3,0(r5)
    9b34:	10c0111e 	bne	r2,r3,9b7c <strcmp+0x5c>
    9b38:	01ffbff4 	movhi	r7,65279
    9b3c:	01a02074 	movhi	r6,32897
    9b40:	39ffbfc4 	addi	r7,r7,-257
    9b44:	31a02004 	addi	r6,r6,-32640
    9b48:	00000306 	br	9b58 <strcmp+0x38>
    9b4c:	20800017 	ldw	r2,0(r4)
    9b50:	28c00017 	ldw	r3,0(r5)
    9b54:	10c0091e 	bne	r2,r3,9b7c <strcmp+0x5c>
    9b58:	11c7883a 	add	r3,r2,r7
    9b5c:	0084303a 	nor	r2,zero,r2
    9b60:	1884703a 	and	r2,r3,r2
    9b64:	1184703a 	and	r2,r2,r6
    9b68:	21000104 	addi	r4,r4,4
    9b6c:	29400104 	addi	r5,r5,4
    9b70:	103ff626 	beq	r2,zero,9b4c <strcmp+0x2c>
    9b74:	0005883a 	mov	r2,zero
    9b78:	f800283a 	ret
    9b7c:	20c00003 	ldbu	r3,0(r4)
    9b80:	18803fcc 	andi	r2,r3,255
    9b84:	1080201c 	xori	r2,r2,128
    9b88:	10bfe004 	addi	r2,r2,-128
    9b8c:	1000071e 	bne	r2,zero,9bac <strcmp+0x8c>
    9b90:	00000a06 	br	9bbc <strcmp+0x9c>
    9b94:	20c00003 	ldbu	r3,0(r4)
    9b98:	29400044 	addi	r5,r5,1
    9b9c:	18803fcc 	andi	r2,r3,255
    9ba0:	1080201c 	xori	r2,r2,128
    9ba4:	10bfe004 	addi	r2,r2,-128
    9ba8:	10000726 	beq	r2,zero,9bc8 <strcmp+0xa8>
    9bac:	29800007 	ldb	r6,0(r5)
    9bb0:	21000044 	addi	r4,r4,1
    9bb4:	30bff726 	beq	r6,r2,9b94 <strcmp+0x74>
    9bb8:	18803fcc 	andi	r2,r3,255
    9bbc:	28c00003 	ldbu	r3,0(r5)
    9bc0:	10c5c83a 	sub	r2,r2,r3
    9bc4:	f800283a 	ret
    9bc8:	28c00003 	ldbu	r3,0(r5)
    9bcc:	0005883a 	mov	r2,zero
    9bd0:	10c5c83a 	sub	r2,r2,r3
    9bd4:	f800283a 	ret

00009bd8 <_vfiprintf_r>:
    9bd8:	0007ef41 	jmpi	7ef4 <___vfiprintf_internal_r>

00009bdc <__swbuf_r>:
    9bdc:	defffb04 	addi	sp,sp,-20
    9be0:	dcc00315 	stw	r19,12(sp)
    9be4:	dc400115 	stw	r17,4(sp)
    9be8:	dc000015 	stw	r16,0(sp)
    9bec:	dfc00415 	stw	ra,16(sp)
    9bf0:	dc800215 	stw	r18,8(sp)
    9bf4:	2027883a 	mov	r19,r4
    9bf8:	2823883a 	mov	r17,r5
    9bfc:	3021883a 	mov	r16,r6
    9c00:	20000226 	beq	r4,zero,9c0c <__swbuf_r+0x30>
    9c04:	20800e17 	ldw	r2,56(r4)
    9c08:	10003e26 	beq	r2,zero,9d04 <__swbuf_r+0x128>
    9c0c:	80800617 	ldw	r2,24(r16)
    9c10:	80c0030b 	ldhu	r3,12(r16)
    9c14:	80800215 	stw	r2,8(r16)
    9c18:	1880020c 	andi	r2,r3,8
    9c1c:	10001f26 	beq	r2,zero,9c9c <__swbuf_r+0xc0>
    9c20:	80800417 	ldw	r2,16(r16)
    9c24:	10001d26 	beq	r2,zero,9c9c <__swbuf_r+0xc0>
    9c28:	1948000c 	andi	r5,r3,8192
    9c2c:	8c803fcc 	andi	r18,r17,255
    9c30:	28002326 	beq	r5,zero,9cc0 <__swbuf_r+0xe4>
    9c34:	80c00017 	ldw	r3,0(r16)
    9c38:	81000517 	ldw	r4,20(r16)
    9c3c:	1885c83a 	sub	r2,r3,r2
    9c40:	1100290e 	bge	r2,r4,9ce8 <__swbuf_r+0x10c>
    9c44:	10800044 	addi	r2,r2,1
    9c48:	81400217 	ldw	r5,8(r16)
    9c4c:	19000044 	addi	r4,r3,1
    9c50:	81000015 	stw	r4,0(r16)
    9c54:	297fffc4 	addi	r5,r5,-1
    9c58:	81400215 	stw	r5,8(r16)
    9c5c:	1c400005 	stb	r17,0(r3)
    9c60:	80c00517 	ldw	r3,20(r16)
    9c64:	18802926 	beq	r3,r2,9d0c <__swbuf_r+0x130>
    9c68:	8080030b 	ldhu	r2,12(r16)
    9c6c:	1080004c 	andi	r2,r2,1
    9c70:	10000226 	beq	r2,zero,9c7c <__swbuf_r+0xa0>
    9c74:	90800298 	cmpnei	r2,r18,10
    9c78:	10002426 	beq	r2,zero,9d0c <__swbuf_r+0x130>
    9c7c:	9005883a 	mov	r2,r18
    9c80:	dfc00417 	ldw	ra,16(sp)
    9c84:	dcc00317 	ldw	r19,12(sp)
    9c88:	dc800217 	ldw	r18,8(sp)
    9c8c:	dc400117 	ldw	r17,4(sp)
    9c90:	dc000017 	ldw	r16,0(sp)
    9c94:	dec00504 	addi	sp,sp,20
    9c98:	f800283a 	ret
    9c9c:	800b883a 	mov	r5,r16
    9ca0:	9809883a 	mov	r4,r19
    9ca4:	0002a3c0 	call	2a3c <__swsetup_r>
    9ca8:	10001c1e 	bne	r2,zero,9d1c <__swbuf_r+0x140>
    9cac:	80c0030b 	ldhu	r3,12(r16)
    9cb0:	80800417 	ldw	r2,16(r16)
    9cb4:	8c803fcc 	andi	r18,r17,255
    9cb8:	1948000c 	andi	r5,r3,8192
    9cbc:	283fdd1e 	bne	r5,zero,9c34 <__swbuf_r+0x58>
    9cc0:	81001917 	ldw	r4,100(r16)
    9cc4:	18c80014 	ori	r3,r3,8192
    9cc8:	0177ffc4 	movi	r5,-8193
    9ccc:	2148703a 	and	r4,r4,r5
    9cd0:	80c0030d 	sth	r3,12(r16)
    9cd4:	80c00017 	ldw	r3,0(r16)
    9cd8:	81001915 	stw	r4,100(r16)
    9cdc:	81000517 	ldw	r4,20(r16)
    9ce0:	1885c83a 	sub	r2,r3,r2
    9ce4:	113fd716 	blt	r2,r4,9c44 <__swbuf_r+0x68>
    9ce8:	800b883a 	mov	r5,r16
    9cec:	9809883a 	mov	r4,r19
    9cf0:	00047900 	call	4790 <_fflush_r>
    9cf4:	1000091e 	bne	r2,zero,9d1c <__swbuf_r+0x140>
    9cf8:	80c00017 	ldw	r3,0(r16)
    9cfc:	00800044 	movi	r2,1
    9d00:	003fd106 	br	9c48 <__swbuf_r+0x6c>
    9d04:	0004bb80 	call	4bb8 <__sinit>
    9d08:	003fc006 	br	9c0c <__swbuf_r+0x30>
    9d0c:	800b883a 	mov	r5,r16
    9d10:	9809883a 	mov	r4,r19
    9d14:	00047900 	call	4790 <_fflush_r>
    9d18:	103fd826 	beq	r2,zero,9c7c <__swbuf_r+0xa0>
    9d1c:	04bfffc4 	movi	r18,-1
    9d20:	003fd606 	br	9c7c <__swbuf_r+0xa0>

00009d24 <__swbuf>:
    9d24:	00c00074 	movhi	r3,1
    9d28:	2005883a 	mov	r2,r4
    9d2c:	1909e617 	ldw	r4,10136(r3)
    9d30:	280d883a 	mov	r6,r5
    9d34:	100b883a 	mov	r5,r2
    9d38:	0009bdc1 	jmpi	9bdc <__swbuf_r>

00009d3c <_wcrtomb_r>:
    9d3c:	defffa04 	addi	sp,sp,-24
    9d40:	dc400415 	stw	r17,16(sp)
    9d44:	dc000315 	stw	r16,12(sp)
    9d48:	00800074 	movhi	r2,1
    9d4c:	dfc00515 	stw	ra,20(sp)
    9d50:	10854017 	ldw	r2,5376(r2)
    9d54:	2023883a 	mov	r17,r4
    9d58:	3821883a 	mov	r16,r7
    9d5c:	28000826 	beq	r5,zero,9d80 <_wcrtomb_r+0x44>
    9d60:	103ee83a 	callr	r2
    9d64:	10ffffd8 	cmpnei	r3,r2,-1
    9d68:	18000a26 	beq	r3,zero,9d94 <_wcrtomb_r+0x58>
    9d6c:	dfc00517 	ldw	ra,20(sp)
    9d70:	dc400417 	ldw	r17,16(sp)
    9d74:	dc000317 	ldw	r16,12(sp)
    9d78:	dec00604 	addi	sp,sp,24
    9d7c:	f800283a 	ret
    9d80:	000d883a 	mov	r6,zero
    9d84:	d9400084 	addi	r5,sp,2
    9d88:	103ee83a 	callr	r2
    9d8c:	10ffffd8 	cmpnei	r3,r2,-1
    9d90:	183ff61e 	bne	r3,zero,9d6c <_wcrtomb_r+0x30>
    9d94:	00802284 	movi	r2,138
    9d98:	80000015 	stw	zero,0(r16)
    9d9c:	88800015 	stw	r2,0(r17)
    9da0:	00bfffc4 	movi	r2,-1
    9da4:	003ff106 	br	9d6c <_wcrtomb_r+0x30>

00009da8 <wcrtomb>:
    9da8:	defffa04 	addi	sp,sp,-24
    9dac:	00c00074 	movhi	r3,1
    9db0:	dc400415 	stw	r17,16(sp)
    9db4:	dc000315 	stw	r16,12(sp)
    9db8:	1c49e617 	ldw	r17,10136(r3)
    9dbc:	dfc00515 	stw	ra,20(sp)
    9dc0:	00c00074 	movhi	r3,1
    9dc4:	18c54017 	ldw	r3,5376(r3)
    9dc8:	3021883a 	mov	r16,r6
    9dcc:	20000c26 	beq	r4,zero,9e00 <wcrtomb+0x58>
    9dd0:	280d883a 	mov	r6,r5
    9dd4:	800f883a 	mov	r7,r16
    9dd8:	200b883a 	mov	r5,r4
    9ddc:	8809883a 	mov	r4,r17
    9de0:	183ee83a 	callr	r3
    9de4:	10ffffd8 	cmpnei	r3,r2,-1
    9de8:	18000c26 	beq	r3,zero,9e1c <wcrtomb+0x74>
    9dec:	dfc00517 	ldw	ra,20(sp)
    9df0:	dc400417 	ldw	r17,16(sp)
    9df4:	dc000317 	ldw	r16,12(sp)
    9df8:	dec00604 	addi	sp,sp,24
    9dfc:	f800283a 	ret
    9e00:	300f883a 	mov	r7,r6
    9e04:	d9400084 	addi	r5,sp,2
    9e08:	000d883a 	mov	r6,zero
    9e0c:	8809883a 	mov	r4,r17
    9e10:	183ee83a 	callr	r3
    9e14:	10ffffd8 	cmpnei	r3,r2,-1
    9e18:	183ff41e 	bne	r3,zero,9dec <wcrtomb+0x44>
    9e1c:	00802284 	movi	r2,138
    9e20:	80000015 	stw	zero,0(r16)
    9e24:	88800015 	stw	r2,0(r17)
    9e28:	00bfffc4 	movi	r2,-1
    9e2c:	003fef06 	br	9dec <wcrtomb+0x44>

00009e30 <_wctomb_r>:
    9e30:	00800074 	movhi	r2,1
    9e34:	10854017 	ldw	r2,5376(r2)
    9e38:	1000683a 	jmp	r2

00009e3c <__ascii_wctomb>:
    9e3c:	28000926 	beq	r5,zero,9e64 <__ascii_wctomb+0x28>
    9e40:	30804030 	cmpltui	r2,r6,256
    9e44:	10000326 	beq	r2,zero,9e54 <__ascii_wctomb+0x18>
    9e48:	29800005 	stb	r6,0(r5)
    9e4c:	00800044 	movi	r2,1
    9e50:	f800283a 	ret
    9e54:	00802284 	movi	r2,138
    9e58:	20800015 	stw	r2,0(r4)
    9e5c:	00bfffc4 	movi	r2,-1
    9e60:	f800283a 	ret
    9e64:	0005883a 	mov	r2,zero
    9e68:	f800283a 	ret

00009e6c <abort>:
    9e6c:	deffff04 	addi	sp,sp,-4
    9e70:	01000184 	movi	r4,6
    9e74:	dfc00015 	stw	ra,0(sp)
    9e78:	000a0dc0 	call	a0dc <raise>
    9e7c:	01000044 	movi	r4,1
    9e80:	000da840 	call	da84 <_exit>

00009e84 <_init_signal_r>:
    9e84:	2080b717 	ldw	r2,732(r4)
    9e88:	10000226 	beq	r2,zero,9e94 <_init_signal_r+0x10>
    9e8c:	0005883a 	mov	r2,zero
    9e90:	f800283a 	ret
    9e94:	defffe04 	addi	sp,sp,-8
    9e98:	01402004 	movi	r5,128
    9e9c:	dc000015 	stw	r16,0(sp)
    9ea0:	dfc00115 	stw	ra,4(sp)
    9ea4:	2021883a 	mov	r16,r4
    9ea8:	00058600 	call	5860 <_malloc_r>
    9eac:	8080b715 	stw	r2,732(r16)
    9eb0:	1009883a 	mov	r4,r2
    9eb4:	10000826 	beq	r2,zero,9ed8 <_init_signal_r+0x54>
    9eb8:	01802004 	movi	r6,128
    9ebc:	000b883a 	mov	r5,zero
    9ec0:	00063380 	call	6338 <memset>
    9ec4:	0005883a 	mov	r2,zero
    9ec8:	dfc00117 	ldw	ra,4(sp)
    9ecc:	dc000017 	ldw	r16,0(sp)
    9ed0:	dec00204 	addi	sp,sp,8
    9ed4:	f800283a 	ret
    9ed8:	00bfffc4 	movi	r2,-1
    9edc:	003ffa06 	br	9ec8 <_init_signal_r+0x44>

00009ee0 <_signal_r>:
    9ee0:	defffc04 	addi	sp,sp,-16
    9ee4:	dc400115 	stw	r17,4(sp)
    9ee8:	dfc00315 	stw	ra,12(sp)
    9eec:	dc800215 	stw	r18,8(sp)
    9ef0:	dc000015 	stw	r16,0(sp)
    9ef4:	28800830 	cmpltui	r2,r5,32
    9ef8:	2023883a 	mov	r17,r4
    9efc:	10000e26 	beq	r2,zero,9f38 <_signal_r+0x58>
    9f00:	20c0b717 	ldw	r3,732(r4)
    9f04:	2821883a 	mov	r16,r5
    9f08:	3025883a 	mov	r18,r6
    9f0c:	18000e26 	beq	r3,zero,9f48 <_signal_r+0x68>
    9f10:	802090ba 	slli	r16,r16,2
    9f14:	1c07883a 	add	r3,r3,r16
    9f18:	18800017 	ldw	r2,0(r3)
    9f1c:	1c800015 	stw	r18,0(r3)
    9f20:	dfc00317 	ldw	ra,12(sp)
    9f24:	dc800217 	ldw	r18,8(sp)
    9f28:	dc400117 	ldw	r17,4(sp)
    9f2c:	dc000017 	ldw	r16,0(sp)
    9f30:	dec00404 	addi	sp,sp,16
    9f34:	f800283a 	ret
    9f38:	00800584 	movi	r2,22
    9f3c:	20800015 	stw	r2,0(r4)
    9f40:	00bfffc4 	movi	r2,-1
    9f44:	003ff606 	br	9f20 <_signal_r+0x40>
    9f48:	01402004 	movi	r5,128
    9f4c:	00058600 	call	5860 <_malloc_r>
    9f50:	8880b715 	stw	r2,732(r17)
    9f54:	103ffa26 	beq	r2,zero,9f40 <_signal_r+0x60>
    9f58:	01802004 	movi	r6,128
    9f5c:	000b883a 	mov	r5,zero
    9f60:	1009883a 	mov	r4,r2
    9f64:	00063380 	call	6338 <memset>
    9f68:	1007883a 	mov	r3,r2
    9f6c:	003fe806 	br	9f10 <_signal_r+0x30>

00009f70 <_raise_r>:
    9f70:	28800830 	cmpltui	r2,r5,32
    9f74:	10002626 	beq	r2,zero,a010 <_raise_r+0xa0>
    9f78:	2080b717 	ldw	r2,732(r4)
    9f7c:	defffd04 	addi	sp,sp,-12
    9f80:	dc000115 	stw	r16,4(sp)
    9f84:	dfc00215 	stw	ra,8(sp)
    9f88:	2821883a 	mov	r16,r5
    9f8c:	10001026 	beq	r2,zero,9fd0 <_raise_r+0x60>
    9f90:	280690ba 	slli	r3,r5,2
    9f94:	10c5883a 	add	r2,r2,r3
    9f98:	10c00017 	ldw	r3,0(r2)
    9f9c:	18000c26 	beq	r3,zero,9fd0 <_raise_r+0x60>
    9fa0:	19400060 	cmpeqi	r5,r3,1
    9fa4:	2800051e 	bne	r5,zero,9fbc <_raise_r+0x4c>
    9fa8:	197fffd8 	cmpnei	r5,r3,-1
    9fac:	28001126 	beq	r5,zero,9ff4 <_raise_r+0x84>
    9fb0:	10000015 	stw	zero,0(r2)
    9fb4:	8009883a 	mov	r4,r16
    9fb8:	183ee83a 	callr	r3
    9fbc:	0005883a 	mov	r2,zero
    9fc0:	dfc00217 	ldw	ra,8(sp)
    9fc4:	dc000117 	ldw	r16,4(sp)
    9fc8:	dec00304 	addi	sp,sp,12
    9fcc:	f800283a 	ret
    9fd0:	d9000015 	stw	r4,0(sp)
    9fd4:	000a3a40 	call	a3a4 <_getpid_r>
    9fd8:	d9000017 	ldw	r4,0(sp)
    9fdc:	800d883a 	mov	r6,r16
    9fe0:	100b883a 	mov	r5,r2
    9fe4:	dfc00217 	ldw	ra,8(sp)
    9fe8:	dc000117 	ldw	r16,4(sp)
    9fec:	dec00304 	addi	sp,sp,12
    9ff0:	000a3441 	jmpi	a344 <_kill_r>
    9ff4:	00800584 	movi	r2,22
    9ff8:	20800015 	stw	r2,0(r4)
    9ffc:	00800044 	movi	r2,1
    a000:	dfc00217 	ldw	ra,8(sp)
    a004:	dc000117 	ldw	r16,4(sp)
    a008:	dec00304 	addi	sp,sp,12
    a00c:	f800283a 	ret
    a010:	00800584 	movi	r2,22
    a014:	20800015 	stw	r2,0(r4)
    a018:	00bfffc4 	movi	r2,-1
    a01c:	f800283a 	ret

0000a020 <__sigtramp_r>:
    a020:	28800830 	cmpltui	r2,r5,32
    a024:	10002b26 	beq	r2,zero,a0d4 <__sigtramp_r+0xb4>
    a028:	20c0b717 	ldw	r3,732(r4)
    a02c:	defffd04 	addi	sp,sp,-12
    a030:	dc400115 	stw	r17,4(sp)
    a034:	dc000015 	stw	r16,0(sp)
    a038:	dfc00215 	stw	ra,8(sp)
    a03c:	2821883a 	mov	r16,r5
    a040:	2023883a 	mov	r17,r4
    a044:	18001726 	beq	r3,zero,a0a4 <__sigtramp_r+0x84>
    a048:	800490ba 	slli	r2,r16,2
    a04c:	1887883a 	add	r3,r3,r2
    a050:	18800017 	ldw	r2,0(r3)
    a054:	10000d26 	beq	r2,zero,a08c <__sigtramp_r+0x6c>
    a058:	113fffe0 	cmpeqi	r4,r2,-1
    a05c:	20000f1e 	bne	r4,zero,a09c <__sigtramp_r+0x7c>
    a060:	11000060 	cmpeqi	r4,r2,1
    a064:	20000b1e 	bne	r4,zero,a094 <__sigtramp_r+0x74>
    a068:	18000015 	stw	zero,0(r3)
    a06c:	8009883a 	mov	r4,r16
    a070:	103ee83a 	callr	r2
    a074:	0005883a 	mov	r2,zero
    a078:	dfc00217 	ldw	ra,8(sp)
    a07c:	dc400117 	ldw	r17,4(sp)
    a080:	dc000017 	ldw	r16,0(sp)
    a084:	dec00304 	addi	sp,sp,12
    a088:	f800283a 	ret
    a08c:	00800044 	movi	r2,1
    a090:	003ff906 	br	a078 <__sigtramp_r+0x58>
    a094:	008000c4 	movi	r2,3
    a098:	003ff706 	br	a078 <__sigtramp_r+0x58>
    a09c:	00800084 	movi	r2,2
    a0a0:	003ff506 	br	a078 <__sigtramp_r+0x58>
    a0a4:	01402004 	movi	r5,128
    a0a8:	00058600 	call	5860 <_malloc_r>
    a0ac:	8880b715 	stw	r2,732(r17)
    a0b0:	10000626 	beq	r2,zero,a0cc <__sigtramp_r+0xac>
    a0b4:	01802004 	movi	r6,128
    a0b8:	000b883a 	mov	r5,zero
    a0bc:	1009883a 	mov	r4,r2
    a0c0:	00063380 	call	6338 <memset>
    a0c4:	1007883a 	mov	r3,r2
    a0c8:	003fdf06 	br	a048 <__sigtramp_r+0x28>
    a0cc:	00bfffc4 	movi	r2,-1
    a0d0:	003fe906 	br	a078 <__sigtramp_r+0x58>
    a0d4:	00bfffc4 	movi	r2,-1
    a0d8:	f800283a 	ret

0000a0dc <raise>:
    a0dc:	defffd04 	addi	sp,sp,-12
    a0e0:	dc400115 	stw	r17,4(sp)
    a0e4:	00c00074 	movhi	r3,1
    a0e8:	dfc00215 	stw	ra,8(sp)
    a0ec:	dc000015 	stw	r16,0(sp)
    a0f0:	20800830 	cmpltui	r2,r4,32
    a0f4:	1c49e617 	ldw	r17,10136(r3)
    a0f8:	10002126 	beq	r2,zero,a180 <raise+0xa4>
    a0fc:	8880b717 	ldw	r2,732(r17)
    a100:	2021883a 	mov	r16,r4
    a104:	10001026 	beq	r2,zero,a148 <raise+0x6c>
    a108:	200690ba 	slli	r3,r4,2
    a10c:	10c5883a 	add	r2,r2,r3
    a110:	10c00017 	ldw	r3,0(r2)
    a114:	18000c26 	beq	r3,zero,a148 <raise+0x6c>
    a118:	19400060 	cmpeqi	r5,r3,1
    a11c:	2800041e 	bne	r5,zero,a130 <raise+0x54>
    a120:	197fffd8 	cmpnei	r5,r3,-1
    a124:	28001226 	beq	r5,zero,a170 <raise+0x94>
    a128:	10000015 	stw	zero,0(r2)
    a12c:	183ee83a 	callr	r3
    a130:	0005883a 	mov	r2,zero
    a134:	dfc00217 	ldw	ra,8(sp)
    a138:	dc400117 	ldw	r17,4(sp)
    a13c:	dc000017 	ldw	r16,0(sp)
    a140:	dec00304 	addi	sp,sp,12
    a144:	f800283a 	ret
    a148:	8809883a 	mov	r4,r17
    a14c:	000a3a40 	call	a3a4 <_getpid_r>
    a150:	800d883a 	mov	r6,r16
    a154:	100b883a 	mov	r5,r2
    a158:	8809883a 	mov	r4,r17
    a15c:	dfc00217 	ldw	ra,8(sp)
    a160:	dc400117 	ldw	r17,4(sp)
    a164:	dc000017 	ldw	r16,0(sp)
    a168:	dec00304 	addi	sp,sp,12
    a16c:	000a3441 	jmpi	a344 <_kill_r>
    a170:	00800584 	movi	r2,22
    a174:	88800015 	stw	r2,0(r17)
    a178:	00800044 	movi	r2,1
    a17c:	003fed06 	br	a134 <raise+0x58>
    a180:	00800584 	movi	r2,22
    a184:	88800015 	stw	r2,0(r17)
    a188:	00bfffc4 	movi	r2,-1
    a18c:	003fe906 	br	a134 <raise+0x58>

0000a190 <signal>:
    a190:	defffc04 	addi	sp,sp,-16
    a194:	dc800215 	stw	r18,8(sp)
    a198:	00c00074 	movhi	r3,1
    a19c:	dfc00315 	stw	ra,12(sp)
    a1a0:	dc400115 	stw	r17,4(sp)
    a1a4:	dc000015 	stw	r16,0(sp)
    a1a8:	20800830 	cmpltui	r2,r4,32
    a1ac:	1c89e617 	ldw	r18,10136(r3)
    a1b0:	10000e26 	beq	r2,zero,a1ec <signal+0x5c>
    a1b4:	2021883a 	mov	r16,r4
    a1b8:	9100b717 	ldw	r4,732(r18)
    a1bc:	2823883a 	mov	r17,r5
    a1c0:	20000e26 	beq	r4,zero,a1fc <signal+0x6c>
    a1c4:	802090ba 	slli	r16,r16,2
    a1c8:	2409883a 	add	r4,r4,r16
    a1cc:	20800017 	ldw	r2,0(r4)
    a1d0:	24400015 	stw	r17,0(r4)
    a1d4:	dfc00317 	ldw	ra,12(sp)
    a1d8:	dc800217 	ldw	r18,8(sp)
    a1dc:	dc400117 	ldw	r17,4(sp)
    a1e0:	dc000017 	ldw	r16,0(sp)
    a1e4:	dec00404 	addi	sp,sp,16
    a1e8:	f800283a 	ret
    a1ec:	00800584 	movi	r2,22
    a1f0:	90800015 	stw	r2,0(r18)
    a1f4:	00bfffc4 	movi	r2,-1
    a1f8:	003ff606 	br	a1d4 <signal+0x44>
    a1fc:	9009883a 	mov	r4,r18
    a200:	01402004 	movi	r5,128
    a204:	00058600 	call	5860 <_malloc_r>
    a208:	9080b715 	stw	r2,732(r18)
    a20c:	1009883a 	mov	r4,r2
    a210:	103ff826 	beq	r2,zero,a1f4 <signal+0x64>
    a214:	01802004 	movi	r6,128
    a218:	000b883a 	mov	r5,zero
    a21c:	00063380 	call	6338 <memset>
    a220:	1009883a 	mov	r4,r2
    a224:	003fe706 	br	a1c4 <signal+0x34>

0000a228 <_init_signal>:
    a228:	defffe04 	addi	sp,sp,-8
    a22c:	00800074 	movhi	r2,1
    a230:	dc000015 	stw	r16,0(sp)
    a234:	1409e617 	ldw	r16,10136(r2)
    a238:	dfc00115 	stw	ra,4(sp)
    a23c:	8080b717 	ldw	r2,732(r16)
    a240:	10000526 	beq	r2,zero,a258 <_init_signal+0x30>
    a244:	0005883a 	mov	r2,zero
    a248:	dfc00117 	ldw	ra,4(sp)
    a24c:	dc000017 	ldw	r16,0(sp)
    a250:	dec00204 	addi	sp,sp,8
    a254:	f800283a 	ret
    a258:	8009883a 	mov	r4,r16
    a25c:	01402004 	movi	r5,128
    a260:	00058600 	call	5860 <_malloc_r>
    a264:	8080b715 	stw	r2,732(r16)
    a268:	1009883a 	mov	r4,r2
    a26c:	10000426 	beq	r2,zero,a280 <_init_signal+0x58>
    a270:	01802004 	movi	r6,128
    a274:	000b883a 	mov	r5,zero
    a278:	00063380 	call	6338 <memset>
    a27c:	003ff106 	br	a244 <_init_signal+0x1c>
    a280:	00bfffc4 	movi	r2,-1
    a284:	003ff006 	br	a248 <_init_signal+0x20>

0000a288 <__sigtramp>:
    a288:	defffd04 	addi	sp,sp,-12
    a28c:	dc400115 	stw	r17,4(sp)
    a290:	00c00074 	movhi	r3,1
    a294:	dfc00215 	stw	ra,8(sp)
    a298:	dc000015 	stw	r16,0(sp)
    a29c:	20800830 	cmpltui	r2,r4,32
    a2a0:	1c49e617 	ldw	r17,10136(r3)
    a2a4:	10002526 	beq	r2,zero,a33c <__sigtramp+0xb4>
    a2a8:	88c0b717 	ldw	r3,732(r17)
    a2ac:	2021883a 	mov	r16,r4
    a2b0:	18001726 	beq	r3,zero,a310 <__sigtramp+0x88>
    a2b4:	800490ba 	slli	r2,r16,2
    a2b8:	1887883a 	add	r3,r3,r2
    a2bc:	18800017 	ldw	r2,0(r3)
    a2c0:	10000d26 	beq	r2,zero,a2f8 <__sigtramp+0x70>
    a2c4:	113fffe0 	cmpeqi	r4,r2,-1
    a2c8:	20000f1e 	bne	r4,zero,a308 <__sigtramp+0x80>
    a2cc:	11000060 	cmpeqi	r4,r2,1
    a2d0:	20000b1e 	bne	r4,zero,a300 <__sigtramp+0x78>
    a2d4:	18000015 	stw	zero,0(r3)
    a2d8:	8009883a 	mov	r4,r16
    a2dc:	103ee83a 	callr	r2
    a2e0:	0005883a 	mov	r2,zero
    a2e4:	dfc00217 	ldw	ra,8(sp)
    a2e8:	dc400117 	ldw	r17,4(sp)
    a2ec:	dc000017 	ldw	r16,0(sp)
    a2f0:	dec00304 	addi	sp,sp,12
    a2f4:	f800283a 	ret
    a2f8:	00800044 	movi	r2,1
    a2fc:	003ff906 	br	a2e4 <__sigtramp+0x5c>
    a300:	008000c4 	movi	r2,3
    a304:	003ff706 	br	a2e4 <__sigtramp+0x5c>
    a308:	00800084 	movi	r2,2
    a30c:	003ff506 	br	a2e4 <__sigtramp+0x5c>
    a310:	01402004 	movi	r5,128
    a314:	8809883a 	mov	r4,r17
    a318:	00058600 	call	5860 <_malloc_r>
    a31c:	8880b715 	stw	r2,732(r17)
    a320:	10000626 	beq	r2,zero,a33c <__sigtramp+0xb4>
    a324:	01802004 	movi	r6,128
    a328:	000b883a 	mov	r5,zero
    a32c:	1009883a 	mov	r4,r2
    a330:	00063380 	call	6338 <memset>
    a334:	1007883a 	mov	r3,r2
    a338:	003fde06 	br	a2b4 <__sigtramp+0x2c>
    a33c:	00bfffc4 	movi	r2,-1
    a340:	003fe806 	br	a2e4 <__sigtramp+0x5c>

0000a344 <_kill_r>:
    a344:	2807883a 	mov	r3,r5
    a348:	defffe04 	addi	sp,sp,-8
    a34c:	dc000015 	stw	r16,0(sp)
    a350:	00800074 	movhi	r2,1
    a354:	300b883a 	mov	r5,r6
    a358:	2021883a 	mov	r16,r4
    a35c:	1809883a 	mov	r4,r3
    a360:	dfc00115 	stw	ra,4(sp)
    a364:	1010ec15 	stw	zero,17328(r2)
    a368:	000dd000 	call	dd00 <kill>
    a36c:	10ffffd8 	cmpnei	r3,r2,-1
    a370:	18000426 	beq	r3,zero,a384 <_kill_r+0x40>
    a374:	dfc00117 	ldw	ra,4(sp)
    a378:	dc000017 	ldw	r16,0(sp)
    a37c:	dec00204 	addi	sp,sp,8
    a380:	f800283a 	ret
    a384:	00c00074 	movhi	r3,1
    a388:	18d0ec17 	ldw	r3,17328(r3)
    a38c:	183ff926 	beq	r3,zero,a374 <_kill_r+0x30>
    a390:	80c00015 	stw	r3,0(r16)
    a394:	dfc00117 	ldw	ra,4(sp)
    a398:	dc000017 	ldw	r16,0(sp)
    a39c:	dec00204 	addi	sp,sp,8
    a3a0:	f800283a 	ret

0000a3a4 <_getpid_r>:
    a3a4:	000dbb81 	jmpi	dbb8 <getpid>

0000a3a8 <__udivdi3>:
    a3a8:	defff504 	addi	sp,sp,-44
    a3ac:	dc800315 	stw	r18,12(sp)
    a3b0:	dc000115 	stw	r16,4(sp)
    a3b4:	dfc00a15 	stw	ra,40(sp)
    a3b8:	df000915 	stw	fp,36(sp)
    a3bc:	ddc00815 	stw	r23,32(sp)
    a3c0:	dd800715 	stw	r22,28(sp)
    a3c4:	dd400615 	stw	r21,24(sp)
    a3c8:	dd000515 	stw	r20,20(sp)
    a3cc:	dcc00415 	stw	r19,16(sp)
    a3d0:	dc400215 	stw	r17,8(sp)
    a3d4:	2025883a 	mov	r18,r4
    a3d8:	2821883a 	mov	r16,r5
    a3dc:	3800451e 	bne	r7,zero,a4f4 <__udivdi3+0x14c>
    a3e0:	3023883a 	mov	r17,r6
    a3e4:	2027883a 	mov	r19,r4
    a3e8:	2980622e 	bgeu	r5,r6,a574 <__udivdi3+0x1cc>
    a3ec:	00bfffd4 	movui	r2,65535
    a3f0:	282d883a 	mov	r22,r5
    a3f4:	1180a22e 	bgeu	r2,r6,a680 <__udivdi3+0x2d8>
    a3f8:	00804034 	movhi	r2,256
    a3fc:	30814736 	bltu	r6,r2,a91c <__udivdi3+0x574>
    a400:	00c00604 	movi	r3,24
    a404:	30cad83a 	srl	r5,r6,r3
    a408:	00800074 	movhi	r2,1
    a40c:	01000804 	movi	r4,32
    a410:	2885883a 	add	r2,r5,r2
    a414:	1082b003 	ldbu	r2,2752(r2)
    a418:	10c5883a 	add	r2,r2,r3
    a41c:	2087c83a 	sub	r3,r4,r2
    a420:	20800526 	beq	r4,r2,a438 <__udivdi3+0x90>
    a424:	80ec983a 	sll	r22,r16,r3
    a428:	9084d83a 	srl	r2,r18,r2
    a42c:	30e2983a 	sll	r17,r6,r3
    a430:	90e6983a 	sll	r19,r18,r3
    a434:	15acb03a 	or	r22,r2,r22
    a438:	8828d43a 	srli	r20,r17,16
    a43c:	b009883a 	mov	r4,r22
    a440:	8d7fffcc 	andi	r21,r17,65535
    a444:	a00b883a 	mov	r5,r20
    a448:	000b0340 	call	b034 <__umodsi3>
    a44c:	a00b883a 	mov	r5,r20
    a450:	b009883a 	mov	r4,r22
    a454:	1025883a 	mov	r18,r2
    a458:	000afd00 	call	afd0 <__udivsi3>
    a45c:	a809883a 	mov	r4,r21
    a460:	100b883a 	mov	r5,r2
    a464:	1021883a 	mov	r16,r2
    a468:	000b0900 	call	b090 <__mulsi3>
    a46c:	9008943a 	slli	r4,r18,16
    a470:	9806d43a 	srli	r3,r19,16
    a474:	20c8b03a 	or	r4,r4,r3
    a478:	2080052e 	bgeu	r4,r2,a490 <__udivdi3+0xe8>
    a47c:	2449883a 	add	r4,r4,r17
    a480:	80ffffc4 	addi	r3,r16,-1
    a484:	24400136 	bltu	r4,r17,a48c <__udivdi3+0xe4>
    a488:	20813a36 	bltu	r4,r2,a974 <__udivdi3+0x5cc>
    a48c:	1821883a 	mov	r16,r3
    a490:	20a5c83a 	sub	r18,r4,r2
    a494:	a00b883a 	mov	r5,r20
    a498:	9009883a 	mov	r4,r18
    a49c:	000b0340 	call	b034 <__umodsi3>
    a4a0:	a00b883a 	mov	r5,r20
    a4a4:	9009883a 	mov	r4,r18
    a4a8:	1025883a 	mov	r18,r2
    a4ac:	000afd00 	call	afd0 <__udivsi3>
    a4b0:	100b883a 	mov	r5,r2
    a4b4:	a809883a 	mov	r4,r21
    a4b8:	1029883a 	mov	r20,r2
    a4bc:	000b0900 	call	b090 <__mulsi3>
    a4c0:	9006943a 	slli	r3,r18,16
    a4c4:	9cffffcc 	andi	r19,r19,65535
    a4c8:	1cc6b03a 	or	r3,r3,r19
    a4cc:	1880052e 	bgeu	r3,r2,a4e4 <__udivdi3+0x13c>
    a4d0:	88c7883a 	add	r3,r17,r3
    a4d4:	a13fffc4 	addi	r4,r20,-1
    a4d8:	1c400136 	bltu	r3,r17,a4e0 <__udivdi3+0x138>
    a4dc:	18811e36 	bltu	r3,r2,a958 <__udivdi3+0x5b0>
    a4e0:	2029883a 	mov	r20,r4
    a4e4:	800c943a 	slli	r6,r16,16
    a4e8:	0007883a 	mov	r3,zero
    a4ec:	3504b03a 	or	r2,r6,r20
    a4f0:	00000306 	br	a500 <__udivdi3+0x158>
    a4f4:	29c00e2e 	bgeu	r5,r7,a530 <__udivdi3+0x188>
    a4f8:	0007883a 	mov	r3,zero
    a4fc:	0005883a 	mov	r2,zero
    a500:	dfc00a17 	ldw	ra,40(sp)
    a504:	df000917 	ldw	fp,36(sp)
    a508:	ddc00817 	ldw	r23,32(sp)
    a50c:	dd800717 	ldw	r22,28(sp)
    a510:	dd400617 	ldw	r21,24(sp)
    a514:	dd000517 	ldw	r20,20(sp)
    a518:	dcc00417 	ldw	r19,16(sp)
    a51c:	dc800317 	ldw	r18,12(sp)
    a520:	dc400217 	ldw	r17,8(sp)
    a524:	dc000117 	ldw	r16,4(sp)
    a528:	dec00b04 	addi	sp,sp,44
    a52c:	f800283a 	ret
    a530:	00bfffd4 	movui	r2,65535
    a534:	11c05b2e 	bgeu	r2,r7,a6a4 <__udivdi3+0x2fc>
    a538:	00804034 	movhi	r2,256
    a53c:	3880f536 	bltu	r7,r2,a914 <__udivdi3+0x56c>
    a540:	00c00604 	movi	r3,24
    a544:	38cad83a 	srl	r5,r7,r3
    a548:	00800074 	movhi	r2,1
    a54c:	01000804 	movi	r4,32
    a550:	2885883a 	add	r2,r5,r2
    a554:	1082b003 	ldbu	r2,2752(r2)
    a558:	10c5883a 	add	r2,r2,r3
    a55c:	20a3c83a 	sub	r17,r4,r2
    a560:	20808a1e 	bne	r4,r2,a78c <__udivdi3+0x3e4>
    a564:	3c00ef36 	bltu	r7,r16,a924 <__udivdi3+0x57c>
    a568:	9185403a 	cmpgeu	r2,r18,r6
    a56c:	0007883a 	mov	r3,zero
    a570:	003fe306 	br	a500 <__udivdi3+0x158>
    a574:	3000451e 	bne	r6,zero,a68c <__udivdi3+0x2e4>
    a578:	000b883a 	mov	r5,zero
    a57c:	01000044 	movi	r4,1
    a580:	000afd00 	call	afd0 <__udivsi3>
    a584:	1023883a 	mov	r17,r2
    a588:	88804028 	cmpgeui	r2,r17,256
    a58c:	100490fa 	slli	r2,r2,3
    a590:	888ad83a 	srl	r5,r17,r2
    a594:	00c00074 	movhi	r3,1
    a598:	01000804 	movi	r4,32
    a59c:	28c7883a 	add	r3,r5,r3
    a5a0:	1d82b003 	ldbu	r22,2752(r3)
    a5a4:	b0ad883a 	add	r22,r22,r2
    a5a8:	2587c83a 	sub	r3,r4,r22
    a5ac:	2580401e 	bne	r4,r22,a6b0 <__udivdi3+0x308>
    a5b0:	8828d43a 	srli	r20,r17,16
    a5b4:	8461c83a 	sub	r16,r16,r17
    a5b8:	8d7fffcc 	andi	r21,r17,65535
    a5bc:	00c00044 	movi	r3,1
    a5c0:	8009883a 	mov	r4,r16
    a5c4:	a00b883a 	mov	r5,r20
    a5c8:	d8c00015 	stw	r3,0(sp)
    a5cc:	000b0340 	call	b034 <__umodsi3>
    a5d0:	8009883a 	mov	r4,r16
    a5d4:	a00b883a 	mov	r5,r20
    a5d8:	1025883a 	mov	r18,r2
    a5dc:	000afd00 	call	afd0 <__udivsi3>
    a5e0:	a80b883a 	mov	r5,r21
    a5e4:	1009883a 	mov	r4,r2
    a5e8:	1021883a 	mov	r16,r2
    a5ec:	000b0900 	call	b090 <__mulsi3>
    a5f0:	9008943a 	slli	r4,r18,16
    a5f4:	980ad43a 	srli	r5,r19,16
    a5f8:	d8c00017 	ldw	r3,0(sp)
    a5fc:	2148b03a 	or	r4,r4,r5
    a600:	2080052e 	bgeu	r4,r2,a618 <__udivdi3+0x270>
    a604:	2449883a 	add	r4,r4,r17
    a608:	817fffc4 	addi	r5,r16,-1
    a60c:	24400136 	bltu	r4,r17,a614 <__udivdi3+0x26c>
    a610:	2080d336 	bltu	r4,r2,a960 <__udivdi3+0x5b8>
    a614:	2821883a 	mov	r16,r5
    a618:	20a5c83a 	sub	r18,r4,r2
    a61c:	a00b883a 	mov	r5,r20
    a620:	9009883a 	mov	r4,r18
    a624:	d8c00015 	stw	r3,0(sp)
    a628:	000b0340 	call	b034 <__umodsi3>
    a62c:	a00b883a 	mov	r5,r20
    a630:	9009883a 	mov	r4,r18
    a634:	1025883a 	mov	r18,r2
    a638:	000afd00 	call	afd0 <__udivsi3>
    a63c:	a80b883a 	mov	r5,r21
    a640:	1009883a 	mov	r4,r2
    a644:	1029883a 	mov	r20,r2
    a648:	000b0900 	call	b090 <__mulsi3>
    a64c:	900a943a 	slli	r5,r18,16
    a650:	9cffffcc 	andi	r19,r19,65535
    a654:	d8c00017 	ldw	r3,0(sp)
    a658:	2ccab03a 	or	r5,r5,r19
    a65c:	2880052e 	bgeu	r5,r2,a674 <__udivdi3+0x2cc>
    a660:	894b883a 	add	r5,r17,r5
    a664:	a13fffc4 	addi	r4,r20,-1
    a668:	2c400136 	bltu	r5,r17,a670 <__udivdi3+0x2c8>
    a66c:	2880b836 	bltu	r5,r2,a950 <__udivdi3+0x5a8>
    a670:	2029883a 	mov	r20,r4
    a674:	800c943a 	slli	r6,r16,16
    a678:	3504b03a 	or	r2,r6,r20
    a67c:	003fa006 	br	a500 <__udivdi3+0x158>
    a680:	30c04028 	cmpgeui	r3,r6,256
    a684:	180690fa 	slli	r3,r3,3
    a688:	003f5e06 	br	a404 <__udivdi3+0x5c>
    a68c:	00bfffd4 	movui	r2,65535
    a690:	11bfbd2e 	bgeu	r2,r6,a588 <__udivdi3+0x1e0>
    a694:	00804034 	movhi	r2,256
    a698:	3080b42e 	bgeu	r6,r2,a96c <__udivdi3+0x5c4>
    a69c:	00800404 	movi	r2,16
    a6a0:	003fbb06 	br	a590 <__udivdi3+0x1e8>
    a6a4:	38c04028 	cmpgeui	r3,r7,256
    a6a8:	180690fa 	slli	r3,r3,3
    a6ac:	003fa506 	br	a544 <__udivdi3+0x19c>
    a6b0:	88e2983a 	sll	r17,r17,r3
    a6b4:	85aad83a 	srl	r21,r16,r22
    a6b8:	80e0983a 	sll	r16,r16,r3
    a6bc:	8828d43a 	srli	r20,r17,16
    a6c0:	a809883a 	mov	r4,r21
    a6c4:	95acd83a 	srl	r22,r18,r22
    a6c8:	a00b883a 	mov	r5,r20
    a6cc:	90e6983a 	sll	r19,r18,r3
    a6d0:	000b0340 	call	b034 <__umodsi3>
    a6d4:	a809883a 	mov	r4,r21
    a6d8:	a00b883a 	mov	r5,r20
    a6dc:	b42cb03a 	or	r22,r22,r16
    a6e0:	8d7fffcc 	andi	r21,r17,65535
    a6e4:	1021883a 	mov	r16,r2
    a6e8:	000afd00 	call	afd0 <__udivsi3>
    a6ec:	a809883a 	mov	r4,r21
    a6f0:	100b883a 	mov	r5,r2
    a6f4:	1025883a 	mov	r18,r2
    a6f8:	000b0900 	call	b090 <__mulsi3>
    a6fc:	8008943a 	slli	r4,r16,16
    a700:	b006d43a 	srli	r3,r22,16
    a704:	20c8b03a 	or	r4,r4,r3
    a708:	2080062e 	bgeu	r4,r2,a724 <__udivdi3+0x37c>
    a70c:	2449883a 	add	r4,r4,r17
    a710:	90ffffc4 	addi	r3,r18,-1
    a714:	24408c36 	bltu	r4,r17,a948 <__udivdi3+0x5a0>
    a718:	20808b2e 	bgeu	r4,r2,a948 <__udivdi3+0x5a0>
    a71c:	94bfff84 	addi	r18,r18,-2
    a720:	2449883a 	add	r4,r4,r17
    a724:	20a1c83a 	sub	r16,r4,r2
    a728:	8009883a 	mov	r4,r16
    a72c:	a00b883a 	mov	r5,r20
    a730:	000b0340 	call	b034 <__umodsi3>
    a734:	8009883a 	mov	r4,r16
    a738:	1021883a 	mov	r16,r2
    a73c:	a00b883a 	mov	r5,r20
    a740:	8020943a 	slli	r16,r16,16
    a744:	000afd00 	call	afd0 <__udivsi3>
    a748:	100b883a 	mov	r5,r2
    a74c:	a809883a 	mov	r4,r21
    a750:	b5bfffcc 	andi	r22,r22,65535
    a754:	102f883a 	mov	r23,r2
    a758:	85a0b03a 	or	r16,r16,r22
    a75c:	000b0900 	call	b090 <__mulsi3>
    a760:	8080062e 	bgeu	r16,r2,a77c <__udivdi3+0x3d4>
    a764:	8461883a 	add	r16,r16,r17
    a768:	b8ffffc4 	addi	r3,r23,-1
    a76c:	84407236 	bltu	r16,r17,a938 <__udivdi3+0x590>
    a770:	8080712e 	bgeu	r16,r2,a938 <__udivdi3+0x590>
    a774:	bdffff84 	addi	r23,r23,-2
    a778:	8461883a 	add	r16,r16,r17
    a77c:	9006943a 	slli	r3,r18,16
    a780:	80a1c83a 	sub	r16,r16,r2
    a784:	1dc6b03a 	or	r3,r3,r23
    a788:	003f8d06 	br	a5c0 <__udivdi3+0x218>
    a78c:	30a8d83a 	srl	r20,r6,r2
    a790:	3c4e983a 	sll	r7,r7,r17
    a794:	80aed83a 	srl	r23,r16,r2
    a798:	90a6d83a 	srl	r19,r18,r2
    a79c:	a1e8b03a 	or	r20,r20,r7
    a7a0:	a02ad43a 	srli	r21,r20,16
    a7a4:	8444983a 	sll	r2,r16,r17
    a7a8:	b809883a 	mov	r4,r23
    a7ac:	a80b883a 	mov	r5,r21
    a7b0:	346c983a 	sll	r22,r6,r17
    a7b4:	98a6b03a 	or	r19,r19,r2
    a7b8:	000b0340 	call	b034 <__umodsi3>
    a7bc:	b809883a 	mov	r4,r23
    a7c0:	a80b883a 	mov	r5,r21
    a7c4:	1039883a 	mov	fp,r2
    a7c8:	a5ffffcc 	andi	r23,r20,65535
    a7cc:	000afd00 	call	afd0 <__udivsi3>
    a7d0:	b809883a 	mov	r4,r23
    a7d4:	100b883a 	mov	r5,r2
    a7d8:	1021883a 	mov	r16,r2
    a7dc:	000b0900 	call	b090 <__mulsi3>
    a7e0:	e008943a 	slli	r4,fp,16
    a7e4:	9806d43a 	srli	r3,r19,16
    a7e8:	20c8b03a 	or	r4,r4,r3
    a7ec:	2080062e 	bgeu	r4,r2,a808 <__udivdi3+0x460>
    a7f0:	2509883a 	add	r4,r4,r20
    a7f4:	80ffffc4 	addi	r3,r16,-1
    a7f8:	25005136 	bltu	r4,r20,a940 <__udivdi3+0x598>
    a7fc:	2080502e 	bgeu	r4,r2,a940 <__udivdi3+0x598>
    a800:	843fff84 	addi	r16,r16,-2
    a804:	2509883a 	add	r4,r4,r20
    a808:	20b9c83a 	sub	fp,r4,r2
    a80c:	a80b883a 	mov	r5,r21
    a810:	e009883a 	mov	r4,fp
    a814:	000b0340 	call	b034 <__umodsi3>
    a818:	a80b883a 	mov	r5,r21
    a81c:	e009883a 	mov	r4,fp
    a820:	102b883a 	mov	r21,r2
    a824:	000afd00 	call	afd0 <__udivsi3>
    a828:	100b883a 	mov	r5,r2
    a82c:	b809883a 	mov	r4,r23
    a830:	1039883a 	mov	fp,r2
    a834:	000b0900 	call	b090 <__mulsi3>
    a838:	a806943a 	slli	r3,r21,16
    a83c:	9cffffcc 	andi	r19,r19,65535
    a840:	1cc6b03a 	or	r3,r3,r19
    a844:	1880062e 	bgeu	r3,r2,a860 <__udivdi3+0x4b8>
    a848:	1d07883a 	add	r3,r3,r20
    a84c:	e13fffc4 	addi	r4,fp,-1
    a850:	1d003736 	bltu	r3,r20,a930 <__udivdi3+0x588>
    a854:	1880362e 	bgeu	r3,r2,a930 <__udivdi3+0x588>
    a858:	e73fff84 	addi	fp,fp,-2
    a85c:	1d07883a 	add	r3,r3,r20
    a860:	8020943a 	slli	r16,r16,16
    a864:	e1bfffcc 	andi	r6,fp,65535
    a868:	b53fffcc 	andi	r20,r22,65535
    a86c:	8720b03a 	or	r16,r16,fp
    a870:	802ad43a 	srli	r21,r16,16
    a874:	3009883a 	mov	r4,r6
    a878:	a00b883a 	mov	r5,r20
    a87c:	18a7c83a 	sub	r19,r3,r2
    a880:	d9800015 	stw	r6,0(sp)
    a884:	b02cd43a 	srli	r22,r22,16
    a888:	000b0900 	call	b090 <__mulsi3>
    a88c:	a00b883a 	mov	r5,r20
    a890:	a809883a 	mov	r4,r21
    a894:	102f883a 	mov	r23,r2
    a898:	000b0900 	call	b090 <__mulsi3>
    a89c:	a809883a 	mov	r4,r21
    a8a0:	b00b883a 	mov	r5,r22
    a8a4:	1029883a 	mov	r20,r2
    a8a8:	000b0900 	call	b090 <__mulsi3>
    a8ac:	d9800017 	ldw	r6,0(sp)
    a8b0:	b00b883a 	mov	r5,r22
    a8b4:	102b883a 	mov	r21,r2
    a8b8:	3009883a 	mov	r4,r6
    a8bc:	000b0900 	call	b090 <__mulsi3>
    a8c0:	b806d43a 	srli	r3,r23,16
    a8c4:	1505883a 	add	r2,r2,r20
    a8c8:	1887883a 	add	r3,r3,r2
    a8cc:	1d00022e 	bgeu	r3,r20,a8d8 <__udivdi3+0x530>
    a8d0:	00800074 	movhi	r2,1
    a8d4:	a8ab883a 	add	r21,r21,r2
    a8d8:	1804d43a 	srli	r2,r3,16
    a8dc:	1545883a 	add	r2,r2,r21
    a8e0:	98800936 	bltu	r19,r2,a908 <__udivdi3+0x560>
    a8e4:	98800326 	beq	r19,r2,a8f4 <__udivdi3+0x54c>
    a8e8:	8005883a 	mov	r2,r16
    a8ec:	0007883a 	mov	r3,zero
    a8f0:	003f0306 	br	a500 <__udivdi3+0x158>
    a8f4:	1806943a 	slli	r3,r3,16
    a8f8:	9448983a 	sll	r4,r18,r17
    a8fc:	bdffffcc 	andi	r23,r23,65535
    a900:	1dc5883a 	add	r2,r3,r23
    a904:	20bff82e 	bgeu	r4,r2,a8e8 <__udivdi3+0x540>
    a908:	80bfffc4 	addi	r2,r16,-1
    a90c:	0007883a 	mov	r3,zero
    a910:	003efb06 	br	a500 <__udivdi3+0x158>
    a914:	00c00404 	movi	r3,16
    a918:	003f0a06 	br	a544 <__udivdi3+0x19c>
    a91c:	00c00404 	movi	r3,16
    a920:	003eb806 	br	a404 <__udivdi3+0x5c>
    a924:	0007883a 	mov	r3,zero
    a928:	00800044 	movi	r2,1
    a92c:	003ef406 	br	a500 <__udivdi3+0x158>
    a930:	2039883a 	mov	fp,r4
    a934:	003fca06 	br	a860 <__udivdi3+0x4b8>
    a938:	182f883a 	mov	r23,r3
    a93c:	003f8f06 	br	a77c <__udivdi3+0x3d4>
    a940:	1821883a 	mov	r16,r3
    a944:	003fb006 	br	a808 <__udivdi3+0x460>
    a948:	1825883a 	mov	r18,r3
    a94c:	003f7506 	br	a724 <__udivdi3+0x37c>
    a950:	a53fff84 	addi	r20,r20,-2
    a954:	003f4706 	br	a674 <__udivdi3+0x2cc>
    a958:	a53fff84 	addi	r20,r20,-2
    a95c:	003ee106 	br	a4e4 <__udivdi3+0x13c>
    a960:	843fff84 	addi	r16,r16,-2
    a964:	2449883a 	add	r4,r4,r17
    a968:	003f2b06 	br	a618 <__udivdi3+0x270>
    a96c:	00800604 	movi	r2,24
    a970:	003f0706 	br	a590 <__udivdi3+0x1e8>
    a974:	843fff84 	addi	r16,r16,-2
    a978:	2449883a 	add	r4,r4,r17
    a97c:	003ec406 	br	a490 <__udivdi3+0xe8>

0000a980 <__umoddi3>:
    a980:	defff504 	addi	sp,sp,-44
    a984:	dcc00415 	stw	r19,16(sp)
    a988:	dc000115 	stw	r16,4(sp)
    a98c:	dfc00a15 	stw	ra,40(sp)
    a990:	df000915 	stw	fp,36(sp)
    a994:	ddc00815 	stw	r23,32(sp)
    a998:	dd800715 	stw	r22,28(sp)
    a99c:	dd400615 	stw	r21,24(sp)
    a9a0:	dd000515 	stw	r20,20(sp)
    a9a4:	dc800315 	stw	r18,12(sp)
    a9a8:	dc400215 	stw	r17,8(sp)
    a9ac:	2827883a 	mov	r19,r5
    a9b0:	2021883a 	mov	r16,r4
    a9b4:	3800401e 	bne	r7,zero,aab8 <__umoddi3+0x138>
    a9b8:	3029883a 	mov	r20,r6
    a9bc:	2025883a 	mov	r18,r4
    a9c0:	2980622e 	bgeu	r5,r6,ab4c <__umoddi3+0x1cc>
    a9c4:	00bfffd4 	movui	r2,65535
    a9c8:	282d883a 	mov	r22,r5
    a9cc:	11808e2e 	bgeu	r2,r6,ac08 <__umoddi3+0x288>
    a9d0:	00804034 	movhi	r2,256
    a9d4:	30813536 	bltu	r6,r2,aeac <__umoddi3+0x52c>
    a9d8:	00c00604 	movi	r3,24
    a9dc:	30cad83a 	srl	r5,r6,r3
    a9e0:	00800074 	movhi	r2,1
    a9e4:	01000804 	movi	r4,32
    a9e8:	2885883a 	add	r2,r5,r2
    a9ec:	1082b003 	ldbu	r2,2752(r2)
    a9f0:	10c5883a 	add	r2,r2,r3
    a9f4:	20a3c83a 	sub	r17,r4,r2
    a9f8:	20800526 	beq	r4,r2,aa10 <__umoddi3+0x90>
    a9fc:	9c6c983a 	sll	r22,r19,r17
    aa00:	8084d83a 	srl	r2,r16,r2
    aa04:	3468983a 	sll	r20,r6,r17
    aa08:	8464983a 	sll	r18,r16,r17
    aa0c:	15acb03a 	or	r22,r2,r22
    aa10:	a02ad43a 	srli	r21,r20,16
    aa14:	b009883a 	mov	r4,r22
    aa18:	a4ffffcc 	andi	r19,r20,65535
    aa1c:	a80b883a 	mov	r5,r21
    aa20:	000b0340 	call	b034 <__umodsi3>
    aa24:	a80b883a 	mov	r5,r21
    aa28:	b009883a 	mov	r4,r22
    aa2c:	1021883a 	mov	r16,r2
    aa30:	000afd00 	call	afd0 <__udivsi3>
    aa34:	9809883a 	mov	r4,r19
    aa38:	100b883a 	mov	r5,r2
    aa3c:	000b0900 	call	b090 <__mulsi3>
    aa40:	8008943a 	slli	r4,r16,16
    aa44:	9006d43a 	srli	r3,r18,16
    aa48:	20c8b03a 	or	r4,r4,r3
    aa4c:	2080032e 	bgeu	r4,r2,aa5c <__umoddi3+0xdc>
    aa50:	2509883a 	add	r4,r4,r20
    aa54:	25000136 	bltu	r4,r20,aa5c <__umoddi3+0xdc>
    aa58:	20811e36 	bltu	r4,r2,aed4 <__umoddi3+0x554>
    aa5c:	20a1c83a 	sub	r16,r4,r2
    aa60:	8009883a 	mov	r4,r16
    aa64:	a80b883a 	mov	r5,r21
    aa68:	000b0340 	call	b034 <__umodsi3>
    aa6c:	8009883a 	mov	r4,r16
    aa70:	a80b883a 	mov	r5,r21
    aa74:	1021883a 	mov	r16,r2
    aa78:	000afd00 	call	afd0 <__udivsi3>
    aa7c:	100b883a 	mov	r5,r2
    aa80:	9809883a 	mov	r4,r19
    aa84:	8020943a 	slli	r16,r16,16
    aa88:	94bfffcc 	andi	r18,r18,65535
    aa8c:	000b0900 	call	b090 <__mulsi3>
    aa90:	84a0b03a 	or	r16,r16,r18
    aa94:	8080042e 	bgeu	r16,r2,aaa8 <__umoddi3+0x128>
    aa98:	8521883a 	add	r16,r16,r20
    aa9c:	85000236 	bltu	r16,r20,aaa8 <__umoddi3+0x128>
    aaa0:	8080012e 	bgeu	r16,r2,aaa8 <__umoddi3+0x128>
    aaa4:	8521883a 	add	r16,r16,r20
    aaa8:	80a1c83a 	sub	r16,r16,r2
    aaac:	8444d83a 	srl	r2,r16,r17
    aab0:	0007883a 	mov	r3,zero
    aab4:	00000406 	br	aac8 <__umoddi3+0x148>
    aab8:	2807883a 	mov	r3,r5
    aabc:	200b883a 	mov	r5,r4
    aac0:	99c00d2e 	bgeu	r19,r7,aaf8 <__umoddi3+0x178>
    aac4:	2005883a 	mov	r2,r4
    aac8:	dfc00a17 	ldw	ra,40(sp)
    aacc:	df000917 	ldw	fp,36(sp)
    aad0:	ddc00817 	ldw	r23,32(sp)
    aad4:	dd800717 	ldw	r22,28(sp)
    aad8:	dd400617 	ldw	r21,24(sp)
    aadc:	dd000517 	ldw	r20,20(sp)
    aae0:	dcc00417 	ldw	r19,16(sp)
    aae4:	dc800317 	ldw	r18,12(sp)
    aae8:	dc400217 	ldw	r17,8(sp)
    aaec:	dc000117 	ldw	r16,4(sp)
    aaf0:	dec00b04 	addi	sp,sp,44
    aaf4:	f800283a 	ret
    aaf8:	00bfffd4 	movui	r2,65535
    aafc:	11c04b2e 	bgeu	r2,r7,ac2c <__umoddi3+0x2ac>
    ab00:	00804034 	movhi	r2,256
    ab04:	3880eb36 	bltu	r7,r2,aeb4 <__umoddi3+0x534>
    ab08:	01000604 	movi	r4,24
    ab0c:	3912d83a 	srl	r9,r7,r4
    ab10:	00800074 	movhi	r2,1
    ab14:	02000804 	movi	r8,32
    ab18:	4885883a 	add	r2,r9,r2
    ab1c:	1702b003 	ldbu	fp,2752(r2)
    ab20:	e139883a 	add	fp,fp,r4
    ab24:	4729c83a 	sub	r20,r8,fp
    ab28:	4700721e 	bne	r8,fp,acf4 <__umoddi3+0x374>
    ab2c:	3cc00136 	bltu	r7,r19,ab34 <__umoddi3+0x1b4>
    ab30:	81800436 	bltu	r16,r6,ab44 <__umoddi3+0x1c4>
    ab34:	818bc83a 	sub	r5,r16,r6
    ab38:	99cfc83a 	sub	r7,r19,r7
    ab3c:	8147803a 	cmpltu	r3,r16,r5
    ab40:	38c7c83a 	sub	r3,r7,r3
    ab44:	2805883a 	mov	r2,r5
    ab48:	003fdf06 	br	aac8 <__umoddi3+0x148>
    ab4c:	3000311e 	bne	r6,zero,ac14 <__umoddi3+0x294>
    ab50:	000b883a 	mov	r5,zero
    ab54:	01000044 	movi	r4,1
    ab58:	000afd00 	call	afd0 <__udivsi3>
    ab5c:	1029883a 	mov	r20,r2
    ab60:	a0804028 	cmpgeui	r2,r20,256
    ab64:	100490fa 	slli	r2,r2,3
    ab68:	a08ad83a 	srl	r5,r20,r2
    ab6c:	00c00074 	movhi	r3,1
    ab70:	01000804 	movi	r4,32
    ab74:	28c7883a 	add	r3,r5,r3
    ab78:	1dc2b003 	ldbu	r23,2752(r3)
    ab7c:	b8af883a 	add	r23,r23,r2
    ab80:	25e3c83a 	sub	r17,r4,r23
    ab84:	25c02c1e 	bne	r4,r23,ac38 <__umoddi3+0x2b8>
    ab88:	a02ad43a 	srli	r21,r20,16
    ab8c:	9d27c83a 	sub	r19,r19,r20
    ab90:	a5bfffcc 	andi	r22,r20,65535
    ab94:	a80b883a 	mov	r5,r21
    ab98:	9809883a 	mov	r4,r19
    ab9c:	000b0340 	call	b034 <__umodsi3>
    aba0:	a80b883a 	mov	r5,r21
    aba4:	9809883a 	mov	r4,r19
    aba8:	1021883a 	mov	r16,r2
    abac:	000afd00 	call	afd0 <__udivsi3>
    abb0:	1009883a 	mov	r4,r2
    abb4:	b00b883a 	mov	r5,r22
    abb8:	000b0900 	call	b090 <__mulsi3>
    abbc:	8008943a 	slli	r4,r16,16
    abc0:	9006d43a 	srli	r3,r18,16
    abc4:	20c8b03a 	or	r4,r4,r3
    abc8:	2080042e 	bgeu	r4,r2,abdc <__umoddi3+0x25c>
    abcc:	2509883a 	add	r4,r4,r20
    abd0:	25000236 	bltu	r4,r20,abdc <__umoddi3+0x25c>
    abd4:	2080012e 	bgeu	r4,r2,abdc <__umoddi3+0x25c>
    abd8:	2509883a 	add	r4,r4,r20
    abdc:	20a1c83a 	sub	r16,r4,r2
    abe0:	8009883a 	mov	r4,r16
    abe4:	a80b883a 	mov	r5,r21
    abe8:	000b0340 	call	b034 <__umodsi3>
    abec:	8009883a 	mov	r4,r16
    abf0:	a80b883a 	mov	r5,r21
    abf4:	1021883a 	mov	r16,r2
    abf8:	000afd00 	call	afd0 <__udivsi3>
    abfc:	b00b883a 	mov	r5,r22
    ac00:	1009883a 	mov	r4,r2
    ac04:	003f9f06 	br	aa84 <__umoddi3+0x104>
    ac08:	30c04028 	cmpgeui	r3,r6,256
    ac0c:	180690fa 	slli	r3,r3,3
    ac10:	003f7206 	br	a9dc <__umoddi3+0x5c>
    ac14:	00bfffd4 	movui	r2,65535
    ac18:	11bfd12e 	bgeu	r2,r6,ab60 <__umoddi3+0x1e0>
    ac1c:	00804034 	movhi	r2,256
    ac20:	3080aa2e 	bgeu	r6,r2,aecc <__umoddi3+0x54c>
    ac24:	00800404 	movi	r2,16
    ac28:	003fcf06 	br	ab68 <__umoddi3+0x1e8>
    ac2c:	39004028 	cmpgeui	r4,r7,256
    ac30:	200890fa 	slli	r4,r4,3
    ac34:	003fb506 	br	ab0c <__umoddi3+0x18c>
    ac38:	a468983a 	sll	r20,r20,r17
    ac3c:	9de4d83a 	srl	r18,r19,r23
    ac40:	85eed83a 	srl	r23,r16,r23
    ac44:	a02ad43a 	srli	r21,r20,16
    ac48:	9009883a 	mov	r4,r18
    ac4c:	9c66983a 	sll	r19,r19,r17
    ac50:	a80b883a 	mov	r5,r21
    ac54:	000b0340 	call	b034 <__umodsi3>
    ac58:	9009883a 	mov	r4,r18
    ac5c:	a80b883a 	mov	r5,r21
    ac60:	1025883a 	mov	r18,r2
    ac64:	a5bfffcc 	andi	r22,r20,65535
    ac68:	000afd00 	call	afd0 <__udivsi3>
    ac6c:	b009883a 	mov	r4,r22
    ac70:	100b883a 	mov	r5,r2
    ac74:	000b0900 	call	b090 <__mulsi3>
    ac78:	bceeb03a 	or	r23,r23,r19
    ac7c:	9008943a 	slli	r4,r18,16
    ac80:	b806d43a 	srli	r3,r23,16
    ac84:	8464983a 	sll	r18,r16,r17
    ac88:	20c8b03a 	or	r4,r4,r3
    ac8c:	2080042e 	bgeu	r4,r2,aca0 <__umoddi3+0x320>
    ac90:	2509883a 	add	r4,r4,r20
    ac94:	25000236 	bltu	r4,r20,aca0 <__umoddi3+0x320>
    ac98:	2080012e 	bgeu	r4,r2,aca0 <__umoddi3+0x320>
    ac9c:	2509883a 	add	r4,r4,r20
    aca0:	20a1c83a 	sub	r16,r4,r2
    aca4:	a80b883a 	mov	r5,r21
    aca8:	8009883a 	mov	r4,r16
    acac:	000b0340 	call	b034 <__umodsi3>
    acb0:	1027883a 	mov	r19,r2
    acb4:	a80b883a 	mov	r5,r21
    acb8:	8009883a 	mov	r4,r16
    acbc:	9826943a 	slli	r19,r19,16
    acc0:	000afd00 	call	afd0 <__udivsi3>
    acc4:	100b883a 	mov	r5,r2
    acc8:	b009883a 	mov	r4,r22
    accc:	bdffffcc 	andi	r23,r23,65535
    acd0:	000b0900 	call	b090 <__mulsi3>
    acd4:	9de6b03a 	or	r19,r19,r23
    acd8:	9880042e 	bgeu	r19,r2,acec <__umoddi3+0x36c>
    acdc:	9d27883a 	add	r19,r19,r20
    ace0:	9d000236 	bltu	r19,r20,acec <__umoddi3+0x36c>
    ace4:	9880012e 	bgeu	r19,r2,acec <__umoddi3+0x36c>
    ace8:	9d27883a 	add	r19,r19,r20
    acec:	98a7c83a 	sub	r19,r19,r2
    acf0:	003fa806 	br	ab94 <__umoddi3+0x214>
    acf4:	3d0e983a 	sll	r7,r7,r20
    acf8:	3722d83a 	srl	r17,r6,fp
    acfc:	9f2ed83a 	srl	r23,r19,fp
    ad00:	3524983a 	sll	r18,r6,r20
    ad04:	89e2b03a 	or	r17,r17,r7
    ad08:	882cd43a 	srli	r22,r17,16
    ad0c:	b809883a 	mov	r4,r23
    ad10:	9d26983a 	sll	r19,r19,r20
    ad14:	b00b883a 	mov	r5,r22
    ad18:	000b0340 	call	b034 <__umodsi3>
    ad1c:	b809883a 	mov	r4,r23
    ad20:	872ad83a 	srl	r21,r16,fp
    ad24:	b00b883a 	mov	r5,r22
    ad28:	d8800015 	stw	r2,0(sp)
    ad2c:	8dffffcc 	andi	r23,r17,65535
    ad30:	000afd00 	call	afd0 <__udivsi3>
    ad34:	b809883a 	mov	r4,r23
    ad38:	100b883a 	mov	r5,r2
    ad3c:	aceab03a 	or	r21,r21,r19
    ad40:	1027883a 	mov	r19,r2
    ad44:	000b0900 	call	b090 <__mulsi3>
    ad48:	d8c00017 	ldw	r3,0(sp)
    ad4c:	8520983a 	sll	r16,r16,r20
    ad50:	1808943a 	slli	r4,r3,16
    ad54:	a806d43a 	srli	r3,r21,16
    ad58:	20c8b03a 	or	r4,r4,r3
    ad5c:	2080062e 	bgeu	r4,r2,ad78 <__umoddi3+0x3f8>
    ad60:	2449883a 	add	r4,r4,r17
    ad64:	98ffffc4 	addi	r3,r19,-1
    ad68:	24405636 	bltu	r4,r17,aec4 <__umoddi3+0x544>
    ad6c:	2080552e 	bgeu	r4,r2,aec4 <__umoddi3+0x544>
    ad70:	9cffff84 	addi	r19,r19,-2
    ad74:	2449883a 	add	r4,r4,r17
    ad78:	2089c83a 	sub	r4,r4,r2
    ad7c:	b00b883a 	mov	r5,r22
    ad80:	d9000015 	stw	r4,0(sp)
    ad84:	000b0340 	call	b034 <__umodsi3>
    ad88:	d9000017 	ldw	r4,0(sp)
    ad8c:	b00b883a 	mov	r5,r22
    ad90:	102d883a 	mov	r22,r2
    ad94:	000afd00 	call	afd0 <__udivsi3>
    ad98:	100b883a 	mov	r5,r2
    ad9c:	b809883a 	mov	r4,r23
    ada0:	d8800015 	stw	r2,0(sp)
    ada4:	000b0900 	call	b090 <__mulsi3>
    ada8:	b006943a 	slli	r3,r22,16
    adac:	ad7fffcc 	andi	r21,r21,65535
    adb0:	d9400017 	ldw	r5,0(sp)
    adb4:	1d46b03a 	or	r3,r3,r21
    adb8:	1880062e 	bgeu	r3,r2,add4 <__umoddi3+0x454>
    adbc:	1c47883a 	add	r3,r3,r17
    adc0:	293fffc4 	addi	r4,r5,-1
    adc4:	1c403d36 	bltu	r3,r17,aebc <__umoddi3+0x53c>
    adc8:	18803c2e 	bgeu	r3,r2,aebc <__umoddi3+0x53c>
    adcc:	297fff84 	addi	r5,r5,-2
    add0:	1c47883a 	add	r3,r3,r17
    add4:	9826943a 	slli	r19,r19,16
    add8:	29bfffcc 	andi	r6,r5,65535
    addc:	913fffcc 	andi	r4,r18,65535
    ade0:	9966b03a 	or	r19,r19,r5
    ade4:	982ad43a 	srli	r21,r19,16
    ade8:	202d883a 	mov	r22,r4
    adec:	200b883a 	mov	r5,r4
    adf0:	3009883a 	mov	r4,r6
    adf4:	d9800015 	stw	r6,0(sp)
    adf8:	18a7c83a 	sub	r19,r3,r2
    adfc:	902ed43a 	srli	r23,r18,16
    ae00:	000b0900 	call	b090 <__mulsi3>
    ae04:	b00b883a 	mov	r5,r22
    ae08:	a809883a 	mov	r4,r21
    ae0c:	102d883a 	mov	r22,r2
    ae10:	000b0900 	call	b090 <__mulsi3>
    ae14:	b80b883a 	mov	r5,r23
    ae18:	a809883a 	mov	r4,r21
    ae1c:	102b883a 	mov	r21,r2
    ae20:	000b0900 	call	b090 <__mulsi3>
    ae24:	d9800017 	ldw	r6,0(sp)
    ae28:	b80b883a 	mov	r5,r23
    ae2c:	102f883a 	mov	r23,r2
    ae30:	3009883a 	mov	r4,r6
    ae34:	000b0900 	call	b090 <__mulsi3>
    ae38:	b008d43a 	srli	r4,r22,16
    ae3c:	1545883a 	add	r2,r2,r21
    ae40:	2089883a 	add	r4,r4,r2
    ae44:	2540022e 	bgeu	r4,r21,ae50 <__umoddi3+0x4d0>
    ae48:	00800074 	movhi	r2,1
    ae4c:	b8af883a 	add	r23,r23,r2
    ae50:	2006d43a 	srli	r3,r4,16
    ae54:	2008943a 	slli	r4,r4,16
    ae58:	b5bfffcc 	andi	r22,r22,65535
    ae5c:	1dc5883a 	add	r2,r3,r23
    ae60:	2589883a 	add	r4,r4,r22
    ae64:	98800b36 	bltu	r19,r2,ae94 <__umoddi3+0x514>
    ae68:	98800926 	beq	r19,r2,ae90 <__umoddi3+0x510>
    ae6c:	8109c83a 	sub	r4,r16,r4
    ae70:	9887c83a 	sub	r3,r19,r2
    ae74:	8121803a 	cmpltu	r16,r16,r4
    ae78:	1c07c83a 	sub	r3,r3,r16
    ae7c:	1f38983a 	sll	fp,r3,fp
    ae80:	2508d83a 	srl	r4,r4,r20
    ae84:	1d06d83a 	srl	r3,r3,r20
    ae88:	e104b03a 	or	r2,fp,r4
    ae8c:	003f0e06 	br	aac8 <__umoddi3+0x148>
    ae90:	813ff62e 	bgeu	r16,r4,ae6c <__umoddi3+0x4ec>
    ae94:	24a5c83a 	sub	r18,r4,r18
    ae98:	2489803a 	cmpltu	r4,r4,r18
    ae9c:	2449883a 	add	r4,r4,r17
    aea0:	1105c83a 	sub	r2,r2,r4
    aea4:	9009883a 	mov	r4,r18
    aea8:	003ff006 	br	ae6c <__umoddi3+0x4ec>
    aeac:	00c00404 	movi	r3,16
    aeb0:	003eca06 	br	a9dc <__umoddi3+0x5c>
    aeb4:	01000404 	movi	r4,16
    aeb8:	003f1406 	br	ab0c <__umoddi3+0x18c>
    aebc:	200b883a 	mov	r5,r4
    aec0:	003fc406 	br	add4 <__umoddi3+0x454>
    aec4:	1827883a 	mov	r19,r3
    aec8:	003fab06 	br	ad78 <__umoddi3+0x3f8>
    aecc:	00800604 	movi	r2,24
    aed0:	003f2506 	br	ab68 <__umoddi3+0x1e8>
    aed4:	2509883a 	add	r4,r4,r20
    aed8:	003ee006 	br	aa5c <__umoddi3+0xdc>

0000aedc <__divsi3>:
    aedc:	20001a16 	blt	r4,zero,af48 <__divsi3+0x6c>
    aee0:	000f883a 	mov	r7,zero
    aee4:	2800020e 	bge	r5,zero,aef0 <__divsi3+0x14>
    aee8:	014bc83a 	sub	r5,zero,r5
    aeec:	39c0005c 	xori	r7,r7,1
    aef0:	200d883a 	mov	r6,r4
    aef4:	00c00044 	movi	r3,1
    aef8:	2900092e 	bgeu	r5,r4,af20 <__divsi3+0x44>
    aefc:	00800804 	movi	r2,32
    af00:	00c00044 	movi	r3,1
    af04:	00000106 	br	af0c <__divsi3+0x30>
    af08:	10001226 	beq	r2,zero,af54 <__divsi3+0x78>
    af0c:	294b883a 	add	r5,r5,r5
    af10:	10bfffc4 	addi	r2,r2,-1
    af14:	18c7883a 	add	r3,r3,r3
    af18:	293ffb36 	bltu	r5,r4,af08 <__divsi3+0x2c>
    af1c:	18000d26 	beq	r3,zero,af54 <__divsi3+0x78>
    af20:	0005883a 	mov	r2,zero
    af24:	31400236 	bltu	r6,r5,af30 <__divsi3+0x54>
    af28:	314dc83a 	sub	r6,r6,r5
    af2c:	10c4b03a 	or	r2,r2,r3
    af30:	1806d07a 	srli	r3,r3,1
    af34:	280ad07a 	srli	r5,r5,1
    af38:	183ffa1e 	bne	r3,zero,af24 <__divsi3+0x48>
    af3c:	38000126 	beq	r7,zero,af44 <__divsi3+0x68>
    af40:	0085c83a 	sub	r2,zero,r2
    af44:	f800283a 	ret
    af48:	0109c83a 	sub	r4,zero,r4
    af4c:	01c00044 	movi	r7,1
    af50:	003fe406 	br	aee4 <__divsi3+0x8>
    af54:	0005883a 	mov	r2,zero
    af58:	003ff806 	br	af3c <__divsi3+0x60>

0000af5c <__modsi3>:
    af5c:	20001716 	blt	r4,zero,afbc <__modsi3+0x60>
    af60:	000f883a 	mov	r7,zero
    af64:	2005883a 	mov	r2,r4
    af68:	2800010e 	bge	r5,zero,af70 <__modsi3+0x14>
    af6c:	014bc83a 	sub	r5,zero,r5
    af70:	00c00044 	movi	r3,1
    af74:	2900092e 	bgeu	r5,r4,af9c <__modsi3+0x40>
    af78:	01800804 	movi	r6,32
    af7c:	00c00044 	movi	r3,1
    af80:	00000106 	br	af88 <__modsi3+0x2c>
    af84:	30001026 	beq	r6,zero,afc8 <__modsi3+0x6c>
    af88:	294b883a 	add	r5,r5,r5
    af8c:	31bfffc4 	addi	r6,r6,-1
    af90:	18c7883a 	add	r3,r3,r3
    af94:	293ffb36 	bltu	r5,r4,af84 <__modsi3+0x28>
    af98:	18000b26 	beq	r3,zero,afc8 <__modsi3+0x6c>
    af9c:	1806d07a 	srli	r3,r3,1
    afa0:	11400136 	bltu	r2,r5,afa8 <__modsi3+0x4c>
    afa4:	1145c83a 	sub	r2,r2,r5
    afa8:	280ad07a 	srli	r5,r5,1
    afac:	183ffb1e 	bne	r3,zero,af9c <__modsi3+0x40>
    afb0:	38000126 	beq	r7,zero,afb8 <__modsi3+0x5c>
    afb4:	0085c83a 	sub	r2,zero,r2
    afb8:	f800283a 	ret
    afbc:	0109c83a 	sub	r4,zero,r4
    afc0:	01c00044 	movi	r7,1
    afc4:	003fe706 	br	af64 <__modsi3+0x8>
    afc8:	2005883a 	mov	r2,r4
    afcc:	003ff806 	br	afb0 <__modsi3+0x54>

0000afd0 <__udivsi3>:
    afd0:	200d883a 	mov	r6,r4
    afd4:	2900152e 	bgeu	r5,r4,b02c <__udivsi3+0x5c>
    afd8:	28001416 	blt	r5,zero,b02c <__udivsi3+0x5c>
    afdc:	00800804 	movi	r2,32
    afe0:	00c00044 	movi	r3,1
    afe4:	00000206 	br	aff0 <__udivsi3+0x20>
    afe8:	10000e26 	beq	r2,zero,b024 <__udivsi3+0x54>
    afec:	28000416 	blt	r5,zero,b000 <__udivsi3+0x30>
    aff0:	294b883a 	add	r5,r5,r5
    aff4:	10bfffc4 	addi	r2,r2,-1
    aff8:	18c7883a 	add	r3,r3,r3
    affc:	293ffa36 	bltu	r5,r4,afe8 <__udivsi3+0x18>
    b000:	18000826 	beq	r3,zero,b024 <__udivsi3+0x54>
    b004:	0005883a 	mov	r2,zero
    b008:	31400236 	bltu	r6,r5,b014 <__udivsi3+0x44>
    b00c:	314dc83a 	sub	r6,r6,r5
    b010:	10c4b03a 	or	r2,r2,r3
    b014:	1806d07a 	srli	r3,r3,1
    b018:	280ad07a 	srli	r5,r5,1
    b01c:	183ffa1e 	bne	r3,zero,b008 <__udivsi3+0x38>
    b020:	f800283a 	ret
    b024:	0005883a 	mov	r2,zero
    b028:	f800283a 	ret
    b02c:	00c00044 	movi	r3,1
    b030:	003ff406 	br	b004 <__udivsi3+0x34>

0000b034 <__umodsi3>:
    b034:	2005883a 	mov	r2,r4
    b038:	2900132e 	bgeu	r5,r4,b088 <__umodsi3+0x54>
    b03c:	28001216 	blt	r5,zero,b088 <__umodsi3+0x54>
    b040:	01800804 	movi	r6,32
    b044:	00c00044 	movi	r3,1
    b048:	00000206 	br	b054 <__umodsi3+0x20>
    b04c:	30000c26 	beq	r6,zero,b080 <__umodsi3+0x4c>
    b050:	28000416 	blt	r5,zero,b064 <__umodsi3+0x30>
    b054:	294b883a 	add	r5,r5,r5
    b058:	31bfffc4 	addi	r6,r6,-1
    b05c:	18c7883a 	add	r3,r3,r3
    b060:	293ffa36 	bltu	r5,r4,b04c <__umodsi3+0x18>
    b064:	18000626 	beq	r3,zero,b080 <__umodsi3+0x4c>
    b068:	1806d07a 	srli	r3,r3,1
    b06c:	11400136 	bltu	r2,r5,b074 <__umodsi3+0x40>
    b070:	1145c83a 	sub	r2,r2,r5
    b074:	280ad07a 	srli	r5,r5,1
    b078:	183ffb1e 	bne	r3,zero,b068 <__umodsi3+0x34>
    b07c:	f800283a 	ret
    b080:	2005883a 	mov	r2,r4
    b084:	f800283a 	ret
    b088:	00c00044 	movi	r3,1
    b08c:	003ff606 	br	b068 <__umodsi3+0x34>

0000b090 <__mulsi3>:
    b090:	0005883a 	mov	r2,zero
    b094:	20000726 	beq	r4,zero,b0b4 <__mulsi3+0x24>
    b098:	20c0004c 	andi	r3,r4,1
    b09c:	2008d07a 	srli	r4,r4,1
    b0a0:	18000126 	beq	r3,zero,b0a8 <__mulsi3+0x18>
    b0a4:	1145883a 	add	r2,r2,r5
    b0a8:	294b883a 	add	r5,r5,r5
    b0ac:	203ffa1e 	bne	r4,zero,b098 <__mulsi3+0x8>
    b0b0:	f800283a 	ret
    b0b4:	f800283a 	ret

0000b0b8 <__adddf3>:
    b0b8:	00c00434 	movhi	r3,16
    b0bc:	18ffffc4 	addi	r3,r3,-1
    b0c0:	defffa04 	addi	sp,sp,-24
    b0c4:	2810d7fa 	srli	r8,r5,31
    b0c8:	3804d53a 	srli	r2,r7,20
    b0cc:	28d4703a 	and	r10,r5,r3
    b0d0:	38d2703a 	and	r9,r7,r3
    b0d4:	280ad53a 	srli	r5,r5,20
    b0d8:	501490fa 	slli	r10,r10,3
    b0dc:	481290fa 	slli	r9,r9,3
    b0e0:	3016d77a 	srli	r11,r6,29
    b0e4:	dc400115 	stw	r17,4(sp)
    b0e8:	380ed7fa 	srli	r7,r7,31
    b0ec:	2022d77a 	srli	r17,r4,29
    b0f0:	dd000415 	stw	r20,16(sp)
    b0f4:	dcc00315 	stw	r19,12(sp)
    b0f8:	dc000015 	stw	r16,0(sp)
    b0fc:	1081ffcc 	andi	r2,r2,2047
    b100:	2c01ffcc 	andi	r16,r5,2047
    b104:	dfc00515 	stw	ra,20(sp)
    b108:	dc800215 	stw	r18,8(sp)
    b10c:	201890fa 	slli	r12,r4,3
    b110:	301a90fa 	slli	r13,r6,3
    b114:	4027883a 	mov	r19,r8
    b118:	45003fcc 	andi	r20,r8,255
    b11c:	8aa2b03a 	or	r17,r17,r10
    b120:	5a56b03a 	or	r11,r11,r9
    b124:	808bc83a 	sub	r5,r16,r2
    b128:	41c07526 	beq	r8,r7,b300 <__adddf3+0x248>
    b12c:	0140540e 	bge	zero,r5,b280 <__adddf3+0x1c8>
    b130:	10008b26 	beq	r2,zero,b360 <__adddf3+0x2a8>
    b134:	8081ffe0 	cmpeqi	r2,r16,2047
    b138:	10010d1e 	bne	r2,zero,b570 <__adddf3+0x4b8>
    b13c:	28800e48 	cmpgei	r2,r5,57
    b140:	1000c11e 	bne	r2,zero,b448 <__adddf3+0x390>
    b144:	5ac02034 	orhi	r11,r11,128
    b148:	28800808 	cmpgei	r2,r5,32
    b14c:	1001461e 	bne	r2,zero,b668 <__adddf3+0x5b0>
    b150:	00800804 	movi	r2,32
    b154:	1145c83a 	sub	r2,r2,r5
    b158:	58a4983a 	sll	r18,r11,r2
    b15c:	6946d83a 	srl	r3,r13,r5
    b160:	6884983a 	sll	r2,r13,r2
    b164:	594ad83a 	srl	r5,r11,r5
    b168:	90e4b03a 	or	r18,r18,r3
    b16c:	1004c03a 	cmpne	r2,r2,zero
    b170:	90a4b03a 	or	r18,r18,r2
    b174:	8963c83a 	sub	r17,r17,r5
    b178:	64a5c83a 	sub	r18,r12,r18
    b17c:	6485803a 	cmpltu	r2,r12,r18
    b180:	88a3c83a 	sub	r17,r17,r2
    b184:	8880202c 	andhi	r2,r17,128
    b188:	1000b826 	beq	r2,zero,b46c <__adddf3+0x3b4>
    b18c:	00802034 	movhi	r2,128
    b190:	10bfffc4 	addi	r2,r2,-1
    b194:	88a2703a 	and	r17,r17,r2
    b198:	8800d026 	beq	r17,zero,b4dc <__adddf3+0x424>
    b19c:	8809883a 	mov	r4,r17
    b1a0:	000d8f00 	call	d8f0 <__clzsi2>
    b1a4:	113ffe04 	addi	r4,r2,-8
    b1a8:	00c00804 	movi	r3,32
    b1ac:	1905c83a 	sub	r2,r3,r4
    b1b0:	9084d83a 	srl	r2,r18,r2
    b1b4:	8922983a 	sll	r17,r17,r4
    b1b8:	9124983a 	sll	r18,r18,r4
    b1bc:	1444b03a 	or	r2,r2,r17
    b1c0:	2400ff16 	blt	r4,r16,b5c0 <__adddf3+0x508>
    b1c4:	2409c83a 	sub	r4,r4,r16
    b1c8:	21000044 	addi	r4,r4,1
    b1cc:	1907c83a 	sub	r3,r3,r4
    b1d0:	90ca983a 	sll	r5,r18,r3
    b1d4:	9122d83a 	srl	r17,r18,r4
    b1d8:	280ac03a 	cmpne	r5,r5,zero
    b1dc:	10c6983a 	sll	r3,r2,r3
    b1e0:	894ab03a 	or	r5,r17,r5
    b1e4:	1122d83a 	srl	r17,r2,r4
    b1e8:	0021883a 	mov	r16,zero
    b1ec:	1964b03a 	or	r18,r3,r5
    b1f0:	908001cc 	andi	r2,r18,7
    b1f4:	10000726 	beq	r2,zero,b214 <__adddf3+0x15c>
    b1f8:	908003cc 	andi	r2,r18,15
    b1fc:	10800120 	cmpeqi	r2,r2,4
    b200:	1000041e 	bne	r2,zero,b214 <__adddf3+0x15c>
    b204:	90800104 	addi	r2,r18,4
    b208:	14a5803a 	cmpltu	r18,r2,r18
    b20c:	8ca3883a 	add	r17,r17,r18
    b210:	1025883a 	mov	r18,r2
    b214:	8880202c 	andhi	r2,r17,128
    b218:	1000c926 	beq	r2,zero,b540 <__adddf3+0x488>
    b21c:	8081ffa0 	cmpeqi	r2,r16,2046
    b220:	84000044 	addi	r16,r16,1
    b224:	1000841e 	bne	r2,zero,b438 <__adddf3+0x380>
    b228:	013fe034 	movhi	r4,65408
    b22c:	213fffc4 	addi	r4,r4,-1
    b230:	8908703a 	and	r4,r17,r4
    b234:	2004977a 	slli	r2,r4,29
    b238:	2008927a 	slli	r4,r4,9
    b23c:	9024d0fa 	srli	r18,r18,3
    b240:	80c1ffcc 	andi	r3,r16,2047
    b244:	2008d33a 	srli	r4,r4,12
    b248:	1484b03a 	or	r2,r2,r18
    b24c:	a027883a 	mov	r19,r20
    b250:	1806953a 	slli	r3,r3,20
    b254:	982697fa 	slli	r19,r19,31
    b258:	1906b03a 	or	r3,r3,r4
    b25c:	1cc6b03a 	or	r3,r3,r19
    b260:	dfc00517 	ldw	ra,20(sp)
    b264:	dd000417 	ldw	r20,16(sp)
    b268:	dcc00317 	ldw	r19,12(sp)
    b26c:	dc800217 	ldw	r18,8(sp)
    b270:	dc400117 	ldw	r17,4(sp)
    b274:	dc000017 	ldw	r16,0(sp)
    b278:	dec00604 	addi	sp,sp,24
    b27c:	f800283a 	ret
    b280:	3a803fcc 	andi	r10,r7,255
    b284:	28004026 	beq	r5,zero,b388 <__adddf3+0x2d0>
    b288:	140bc83a 	sub	r5,r2,r16
    b28c:	8000e61e 	bne	r16,zero,b628 <__adddf3+0x570>
    b290:	8b06b03a 	or	r3,r17,r12
    b294:	1800c426 	beq	r3,zero,b5a8 <__adddf3+0x4f0>
    b298:	28ffffc4 	addi	r3,r5,-1
    b29c:	18017a26 	beq	r3,zero,b888 <__adddf3+0x7d0>
    b2a0:	2941ffe0 	cmpeqi	r5,r5,2047
    b2a4:	28019a1e 	bne	r5,zero,b910 <__adddf3+0x858>
    b2a8:	19000e48 	cmpgei	r4,r3,57
    b2ac:	20010c1e 	bne	r4,zero,b6e0 <__adddf3+0x628>
    b2b0:	180b883a 	mov	r5,r3
    b2b4:	28c00808 	cmpgei	r3,r5,32
    b2b8:	1801521e 	bne	r3,zero,b804 <__adddf3+0x74c>
    b2bc:	00c00804 	movi	r3,32
    b2c0:	1947c83a 	sub	r3,r3,r5
    b2c4:	88e4983a 	sll	r18,r17,r3
    b2c8:	6148d83a 	srl	r4,r12,r5
    b2cc:	60c6983a 	sll	r3,r12,r3
    b2d0:	894ad83a 	srl	r5,r17,r5
    b2d4:	9124b03a 	or	r18,r18,r4
    b2d8:	1806c03a 	cmpne	r3,r3,zero
    b2dc:	90e4b03a 	or	r18,r18,r3
    b2e0:	5957c83a 	sub	r11,r11,r5
    b2e4:	6ca5c83a 	sub	r18,r13,r18
    b2e8:	6c9b803a 	cmpltu	r13,r13,r18
    b2ec:	5b63c83a 	sub	r17,r11,r13
    b2f0:	3827883a 	mov	r19,r7
    b2f4:	1021883a 	mov	r16,r2
    b2f8:	5029883a 	mov	r20,r10
    b2fc:	003fa106 	br	b184 <__adddf3+0xcc>
    b300:	01405d0e 	bge	zero,r5,b478 <__adddf3+0x3c0>
    b304:	1000351e 	bne	r2,zero,b3dc <__adddf3+0x324>
    b308:	5b44b03a 	or	r2,r11,r13
    b30c:	1000a926 	beq	r2,zero,b5b4 <__adddf3+0x4fc>
    b310:	28bfffc4 	addi	r2,r5,-1
    b314:	10004e26 	beq	r2,zero,b450 <__adddf3+0x398>
    b318:	2941ffe0 	cmpeqi	r5,r5,2047
    b31c:	2801121e 	bne	r5,zero,b768 <__adddf3+0x6b0>
    b320:	10c00e48 	cmpgei	r3,r2,57
    b324:	1800311e 	bne	r3,zero,b3ec <__adddf3+0x334>
    b328:	100b883a 	mov	r5,r2
    b32c:	28800808 	cmpgei	r2,r5,32
    b330:	1001181e 	bne	r2,zero,b794 <__adddf3+0x6dc>
    b334:	00800804 	movi	r2,32
    b338:	1145c83a 	sub	r2,r2,r5
    b33c:	58a4983a 	sll	r18,r11,r2
    b340:	6946d83a 	srl	r3,r13,r5
    b344:	6884983a 	sll	r2,r13,r2
    b348:	594ad83a 	srl	r5,r11,r5
    b34c:	90e4b03a 	or	r18,r18,r3
    b350:	1004c03a 	cmpne	r2,r2,zero
    b354:	90a4b03a 	or	r18,r18,r2
    b358:	8963883a 	add	r17,r17,r5
    b35c:	00002406 	br	b3f0 <__adddf3+0x338>
    b360:	5b44b03a 	or	r2,r11,r13
    b364:	10009326 	beq	r2,zero,b5b4 <__adddf3+0x4fc>
    b368:	28bfffc4 	addi	r2,r5,-1
    b36c:	1000f826 	beq	r2,zero,b750 <__adddf3+0x698>
    b370:	2941ffe0 	cmpeqi	r5,r5,2047
    b374:	2800fc1e 	bne	r5,zero,b768 <__adddf3+0x6b0>
    b378:	10c00e48 	cmpgei	r3,r2,57
    b37c:	1800321e 	bne	r3,zero,b448 <__adddf3+0x390>
    b380:	100b883a 	mov	r5,r2
    b384:	003f7006 	br	b148 <__adddf3+0x90>
    b388:	80800044 	addi	r2,r16,1
    b38c:	1081ff8c 	andi	r2,r2,2046
    b390:	1000ab1e 	bne	r2,zero,b640 <__adddf3+0x588>
    b394:	8b0ab03a 	or	r5,r17,r12
    b398:	5b44b03a 	or	r2,r11,r13
    b39c:	8000e71e 	bne	r16,zero,b73c <__adddf3+0x684>
    b3a0:	28014126 	beq	r5,zero,b8a8 <__adddf3+0x7f0>
    b3a4:	10010626 	beq	r2,zero,b7c0 <__adddf3+0x708>
    b3a8:	6365c83a 	sub	r18,r12,r13
    b3ac:	6485803a 	cmpltu	r2,r12,r18
    b3b0:	8ac7c83a 	sub	r3,r17,r11
    b3b4:	1887c83a 	sub	r3,r3,r2
    b3b8:	1880202c 	andhi	r2,r3,128
    b3bc:	10017326 	beq	r2,zero,b98c <__adddf3+0x8d4>
    b3c0:	6b25c83a 	sub	r18,r13,r12
    b3c4:	5c57c83a 	sub	r11,r11,r17
    b3c8:	6c9b803a 	cmpltu	r13,r13,r18
    b3cc:	5b63c83a 	sub	r17,r11,r13
    b3d0:	3827883a 	mov	r19,r7
    b3d4:	5029883a 	mov	r20,r10
    b3d8:	003f8506 	br	b1f0 <__adddf3+0x138>
    b3dc:	8081ffe0 	cmpeqi	r2,r16,2047
    b3e0:	1000631e 	bne	r2,zero,b570 <__adddf3+0x4b8>
    b3e4:	28800e48 	cmpgei	r2,r5,57
    b3e8:	1000aa26 	beq	r2,zero,b694 <__adddf3+0x5dc>
    b3ec:	04800044 	movi	r18,1
    b3f0:	9325883a 	add	r18,r18,r12
    b3f4:	9305803a 	cmpltu	r2,r18,r12
    b3f8:	88a3883a 	add	r17,r17,r2
    b3fc:	8880202c 	andhi	r2,r17,128
    b400:	10001a26 	beq	r2,zero,b46c <__adddf3+0x3b4>
    b404:	84000044 	addi	r16,r16,1
    b408:	8081ffe0 	cmpeqi	r2,r16,2047
    b40c:	10000a1e 	bne	r2,zero,b438 <__adddf3+0x380>
    b410:	00bfe034 	movhi	r2,65408
    b414:	10bfffc4 	addi	r2,r2,-1
    b418:	9006d07a 	srli	r3,r18,1
    b41c:	8884703a 	and	r2,r17,r2
    b420:	100897fa 	slli	r4,r2,31
    b424:	9480004c 	andi	r18,r18,1
    b428:	1c86b03a 	or	r3,r3,r18
    b42c:	1022d07a 	srli	r17,r2,1
    b430:	20e4b03a 	or	r18,r4,r3
    b434:	003f6e06 	br	b1f0 <__adddf3+0x138>
    b438:	00c1ffc4 	movi	r3,2047
    b43c:	0009883a 	mov	r4,zero
    b440:	0005883a 	mov	r2,zero
    b444:	003f8206 	br	b250 <__adddf3+0x198>
    b448:	04800044 	movi	r18,1
    b44c:	003f4a06 	br	b178 <__adddf3+0xc0>
    b450:	6365883a 	add	r18,r12,r13
    b454:	8ad7883a 	add	r11,r17,r11
    b458:	9305803a 	cmpltu	r2,r18,r12
    b45c:	58a3883a 	add	r17,r11,r2
    b460:	8880202c 	andhi	r2,r17,128
    b464:	1001061e 	bne	r2,zero,b880 <__adddf3+0x7c8>
    b468:	04000044 	movi	r16,1
    b46c:	908001cc 	andi	r2,r18,7
    b470:	103f611e 	bne	r2,zero,b1f8 <__adddf3+0x140>
    b474:	00006906 	br	b61c <__adddf3+0x564>
    b478:	28005626 	beq	r5,zero,b5d4 <__adddf3+0x51c>
    b47c:	140bc83a 	sub	r5,r2,r16
    b480:	80008626 	beq	r16,zero,b69c <__adddf3+0x5e4>
    b484:	10c1ffe0 	cmpeqi	r3,r2,2047
    b488:	1801101e 	bne	r3,zero,b8cc <__adddf3+0x814>
    b48c:	28c00e48 	cmpgei	r3,r5,57
    b490:	1800da1e 	bne	r3,zero,b7fc <__adddf3+0x744>
    b494:	8c402034 	orhi	r17,r17,128
    b498:	28c00808 	cmpgei	r3,r5,32
    b49c:	1801241e 	bne	r3,zero,b930 <__adddf3+0x878>
    b4a0:	00c00804 	movi	r3,32
    b4a4:	1947c83a 	sub	r3,r3,r5
    b4a8:	88e4983a 	sll	r18,r17,r3
    b4ac:	6148d83a 	srl	r4,r12,r5
    b4b0:	60c6983a 	sll	r3,r12,r3
    b4b4:	894ad83a 	srl	r5,r17,r5
    b4b8:	9124b03a 	or	r18,r18,r4
    b4bc:	1806c03a 	cmpne	r3,r3,zero
    b4c0:	90e4b03a 	or	r18,r18,r3
    b4c4:	5957883a 	add	r11,r11,r5
    b4c8:	9365883a 	add	r18,r18,r13
    b4cc:	935b803a 	cmpltu	r13,r18,r13
    b4d0:	6ae3883a 	add	r17,r13,r11
    b4d4:	1021883a 	mov	r16,r2
    b4d8:	003fc806 	br	b3fc <__adddf3+0x344>
    b4dc:	9009883a 	mov	r4,r18
    b4e0:	000d8f00 	call	d8f0 <__clzsi2>
    b4e4:	11000604 	addi	r4,r2,24
    b4e8:	20c00808 	cmpgei	r3,r4,32
    b4ec:	183f2e26 	beq	r3,zero,b1a8 <__adddf3+0xf0>
    b4f0:	10bffe04 	addi	r2,r2,-8
    b4f4:	9084983a 	sll	r2,r18,r2
    b4f8:	24007216 	blt	r4,r16,b6c4 <__adddf3+0x60c>
    b4fc:	2425c83a 	sub	r18,r4,r16
    b500:	91000044 	addi	r4,r18,1
    b504:	20c00808 	cmpgei	r3,r4,32
    b508:	18012426 	beq	r3,zero,b99c <__adddf3+0x8e4>
    b50c:	94bff844 	addi	r18,r18,-31
    b510:	20c00820 	cmpeqi	r3,r4,32
    b514:	14a4d83a 	srl	r18,r2,r18
    b518:	1800051e 	bne	r3,zero,b530 <__adddf3+0x478>
    b51c:	00c01004 	movi	r3,64
    b520:	1907c83a 	sub	r3,r3,r4
    b524:	10c4983a 	sll	r2,r2,r3
    b528:	1004c03a 	cmpne	r2,r2,zero
    b52c:	90a4b03a 	or	r18,r18,r2
    b530:	908001cc 	andi	r2,r18,7
    b534:	0021883a 	mov	r16,zero
    b538:	103f2f1e 	bne	r2,zero,b1f8 <__adddf3+0x140>
    b53c:	00003706 	br	b61c <__adddf3+0x564>
    b540:	9004d0fa 	srli	r2,r18,3
    b544:	880a977a 	slli	r5,r17,29
    b548:	8101ffe0 	cmpeqi	r4,r16,2047
    b54c:	8806d0fa 	srli	r3,r17,3
    b550:	2884b03a 	or	r2,r5,r2
    b554:	20000c1e 	bne	r4,zero,b588 <__adddf3+0x4d0>
    b558:	01000434 	movhi	r4,16
    b55c:	213fffc4 	addi	r4,r4,-1
    b560:	1908703a 	and	r4,r3,r4
    b564:	80c1ffcc 	andi	r3,r16,2047
    b568:	003f3906 	br	b250 <__adddf3+0x198>
    b56c:	1000b31e 	bne	r2,zero,b83c <__adddf3+0x784>
    b570:	880a977a 	slli	r5,r17,29
    b574:	00880034 	movhi	r2,8192
    b578:	10bfffc4 	addi	r2,r2,-1
    b57c:	8806d0fa 	srli	r3,r17,3
    b580:	2084703a 	and	r2,r4,r2
    b584:	1144b03a 	or	r2,r2,r5
    b588:	10c8b03a 	or	r4,r2,r3
    b58c:	20010726 	beq	r4,zero,b9ac <__adddf3+0x8f4>
    b590:	01400434 	movhi	r5,16
    b594:	19000234 	orhi	r4,r3,8
    b598:	297fffc4 	addi	r5,r5,-1
    b59c:	2148703a 	and	r4,r4,r5
    b5a0:	00c1ffc4 	movi	r3,2047
    b5a4:	003f2a06 	br	b250 <__adddf3+0x198>
    b5a8:	6819883a 	mov	r12,r13
    b5ac:	5823883a 	mov	r17,r11
    b5b0:	3827883a 	mov	r19,r7
    b5b4:	6004d0fa 	srli	r2,r12,3
    b5b8:	2821883a 	mov	r16,r5
    b5bc:	003fe106 	br	b544 <__adddf3+0x48c>
    b5c0:	047fe034 	movhi	r17,65408
    b5c4:	8c7fffc4 	addi	r17,r17,-1
    b5c8:	8121c83a 	sub	r16,r16,r4
    b5cc:	1462703a 	and	r17,r2,r17
    b5d0:	003f0706 	br	b1f0 <__adddf3+0x138>
    b5d4:	80c00044 	addi	r3,r16,1
    b5d8:	1881ff8c 	andi	r2,r3,2046
    b5dc:	1000421e 	bne	r2,zero,b6e8 <__adddf3+0x630>
    b5e0:	8b04b03a 	or	r2,r17,r12
    b5e4:	8000921e 	bne	r16,zero,b830 <__adddf3+0x778>
    b5e8:	1000c226 	beq	r2,zero,b8f4 <__adddf3+0x83c>
    b5ec:	5b44b03a 	or	r2,r11,r13
    b5f0:	10007326 	beq	r2,zero,b7c0 <__adddf3+0x708>
    b5f4:	6365883a 	add	r18,r12,r13
    b5f8:	9305803a 	cmpltu	r2,r18,r12
    b5fc:	8ad7883a 	add	r11,r17,r11
    b600:	58a3883a 	add	r17,r11,r2
    b604:	8880202c 	andhi	r2,r17,128
    b608:	10000426 	beq	r2,zero,b61c <__adddf3+0x564>
    b60c:	00bfe034 	movhi	r2,65408
    b610:	10bfffc4 	addi	r2,r2,-1
    b614:	88a2703a 	and	r17,r17,r2
    b618:	04000044 	movi	r16,1
    b61c:	800b883a 	mov	r5,r16
    b620:	9019883a 	mov	r12,r18
    b624:	003fe306 	br	b5b4 <__adddf3+0x4fc>
    b628:	10c1ffe0 	cmpeqi	r3,r2,2047
    b62c:	18006b1e 	bne	r3,zero,b7dc <__adddf3+0x724>
    b630:	28c00e48 	cmpgei	r3,r5,57
    b634:	18002a1e 	bne	r3,zero,b6e0 <__adddf3+0x628>
    b638:	8c402034 	orhi	r17,r17,128
    b63c:	003f1d06 	br	b2b4 <__adddf3+0x1fc>
    b640:	6365c83a 	sub	r18,r12,r13
    b644:	6485803a 	cmpltu	r2,r12,r18
    b648:	8ac7c83a 	sub	r3,r17,r11
    b64c:	1887c83a 	sub	r3,r3,r2
    b650:	1880202c 	andhi	r2,r3,128
    b654:	1000321e 	bne	r2,zero,b720 <__adddf3+0x668>
    b658:	90c4b03a 	or	r2,r18,r3
    b65c:	10004926 	beq	r2,zero,b784 <__adddf3+0x6cc>
    b660:	1823883a 	mov	r17,r3
    b664:	003ecc06 	br	b198 <__adddf3+0xe0>
    b668:	28bff804 	addi	r2,r5,-32
    b66c:	28c00820 	cmpeqi	r3,r5,32
    b670:	5884d83a 	srl	r2,r11,r2
    b674:	1800041e 	bne	r3,zero,b688 <__adddf3+0x5d0>
    b678:	00c01004 	movi	r3,64
    b67c:	1947c83a 	sub	r3,r3,r5
    b680:	58c6983a 	sll	r3,r11,r3
    b684:	68dab03a 	or	r13,r13,r3
    b688:	6824c03a 	cmpne	r18,r13,zero
    b68c:	90a4b03a 	or	r18,r18,r2
    b690:	003eb906 	br	b178 <__adddf3+0xc0>
    b694:	5ac02034 	orhi	r11,r11,128
    b698:	003f2406 	br	b32c <__adddf3+0x274>
    b69c:	8b06b03a 	or	r3,r17,r12
    b6a0:	18009126 	beq	r3,zero,b8e8 <__adddf3+0x830>
    b6a4:	28ffffc4 	addi	r3,r5,-1
    b6a8:	1800ac26 	beq	r3,zero,b95c <__adddf3+0x8a4>
    b6ac:	2941ffe0 	cmpeqi	r5,r5,2047
    b6b0:	2800861e 	bne	r5,zero,b8cc <__adddf3+0x814>
    b6b4:	19000e48 	cmpgei	r4,r3,57
    b6b8:	2000501e 	bne	r4,zero,b7fc <__adddf3+0x744>
    b6bc:	180b883a 	mov	r5,r3
    b6c0:	003f7506 	br	b498 <__adddf3+0x3e0>
    b6c4:	00ffe034 	movhi	r3,65408
    b6c8:	18ffffc4 	addi	r3,r3,-1
    b6cc:	10c6703a 	and	r3,r2,r3
    b6d0:	1804977a 	slli	r2,r3,29
    b6d4:	8121c83a 	sub	r16,r16,r4
    b6d8:	1806d0fa 	srli	r3,r3,3
    b6dc:	003f9e06 	br	b558 <__adddf3+0x4a0>
    b6e0:	04800044 	movi	r18,1
    b6e4:	003eff06 	br	b2e4 <__adddf3+0x22c>
    b6e8:	1881ffe0 	cmpeqi	r2,r3,2047
    b6ec:	103f521e 	bne	r2,zero,b438 <__adddf3+0x380>
    b6f0:	6349883a 	add	r4,r12,r13
    b6f4:	8ad7883a 	add	r11,r17,r11
    b6f8:	2305803a 	cmpltu	r2,r4,r12
    b6fc:	5885883a 	add	r2,r11,r2
    b700:	2008d07a 	srli	r4,r4,1
    b704:	102497fa 	slli	r18,r2,31
    b708:	1022d07a 	srli	r17,r2,1
    b70c:	208001cc 	andi	r2,r4,7
    b710:	9124b03a 	or	r18,r18,r4
    b714:	1821883a 	mov	r16,r3
    b718:	103eb71e 	bne	r2,zero,b1f8 <__adddf3+0x140>
    b71c:	003fbf06 	br	b61c <__adddf3+0x564>
    b720:	6b25c83a 	sub	r18,r13,r12
    b724:	5c57c83a 	sub	r11,r11,r17
    b728:	6c9b803a 	cmpltu	r13,r13,r18
    b72c:	5b63c83a 	sub	r17,r11,r13
    b730:	3827883a 	mov	r19,r7
    b734:	5029883a 	mov	r20,r10
    b738:	003e9706 	br	b198 <__adddf3+0xe0>
    b73c:	283f8b1e 	bne	r5,zero,b56c <__adddf3+0x4b4>
    b740:	1000261e 	bne	r2,zero,b7dc <__adddf3+0x724>
    b744:	00bfffc4 	movi	r2,-1
    b748:	0027883a 	mov	r19,zero
    b74c:	003f9006 	br	b590 <__adddf3+0x4d8>
    b750:	6365c83a 	sub	r18,r12,r13
    b754:	8ad7c83a 	sub	r11,r17,r11
    b758:	6485803a 	cmpltu	r2,r12,r18
    b75c:	58a3c83a 	sub	r17,r11,r2
    b760:	04000044 	movi	r16,1
    b764:	003e8706 	br	b184 <__adddf3+0xcc>
    b768:	8804977a 	slli	r2,r17,29
    b76c:	00c80034 	movhi	r3,8192
    b770:	18ffffc4 	addi	r3,r3,-1
    b774:	20c8703a 	and	r4,r4,r3
    b778:	2084b03a 	or	r2,r4,r2
    b77c:	8806d0fa 	srli	r3,r17,3
    b780:	003f8106 	br	b588 <__adddf3+0x4d0>
    b784:	0027883a 	mov	r19,zero
    b788:	0007883a 	mov	r3,zero
    b78c:	0009883a 	mov	r4,zero
    b790:	003eaf06 	br	b250 <__adddf3+0x198>
    b794:	28bff804 	addi	r2,r5,-32
    b798:	28c00820 	cmpeqi	r3,r5,32
    b79c:	5884d83a 	srl	r2,r11,r2
    b7a0:	1800041e 	bne	r3,zero,b7b4 <__adddf3+0x6fc>
    b7a4:	00c01004 	movi	r3,64
    b7a8:	1947c83a 	sub	r3,r3,r5
    b7ac:	58c6983a 	sll	r3,r11,r3
    b7b0:	68dab03a 	or	r13,r13,r3
    b7b4:	6824c03a 	cmpne	r18,r13,zero
    b7b8:	90a4b03a 	or	r18,r18,r2
    b7bc:	003f0c06 	br	b3f0 <__adddf3+0x338>
    b7c0:	880a977a 	slli	r5,r17,29
    b7c4:	00880034 	movhi	r2,8192
    b7c8:	10bfffc4 	addi	r2,r2,-1
    b7cc:	2084703a 	and	r2,r4,r2
    b7d0:	8806d0fa 	srli	r3,r17,3
    b7d4:	1144b03a 	or	r2,r2,r5
    b7d8:	003f5f06 	br	b558 <__adddf3+0x4a0>
    b7dc:	5804977a 	slli	r2,r11,29
    b7e0:	00c80034 	movhi	r3,8192
    b7e4:	18ffffc4 	addi	r3,r3,-1
    b7e8:	30c8703a 	and	r4,r6,r3
    b7ec:	1104b03a 	or	r2,r2,r4
    b7f0:	5806d0fa 	srli	r3,r11,3
    b7f4:	3827883a 	mov	r19,r7
    b7f8:	003f6306 	br	b588 <__adddf3+0x4d0>
    b7fc:	04800044 	movi	r18,1
    b800:	003f3106 	br	b4c8 <__adddf3+0x410>
    b804:	28fff804 	addi	r3,r5,-32
    b808:	29000820 	cmpeqi	r4,r5,32
    b80c:	88c6d83a 	srl	r3,r17,r3
    b810:	2000041e 	bne	r4,zero,b824 <__adddf3+0x76c>
    b814:	01001004 	movi	r4,64
    b818:	2149c83a 	sub	r4,r4,r5
    b81c:	8908983a 	sll	r4,r17,r4
    b820:	6118b03a 	or	r12,r12,r4
    b824:	6024c03a 	cmpne	r18,r12,zero
    b828:	90e4b03a 	or	r18,r18,r3
    b82c:	003ead06 	br	b2e4 <__adddf3+0x22c>
    b830:	10004f26 	beq	r2,zero,b970 <__adddf3+0x8b8>
    b834:	5b5ab03a 	or	r13,r11,r13
    b838:	683f4d26 	beq	r13,zero,b570 <__adddf3+0x4b8>
    b83c:	8806d0fa 	srli	r3,r17,3
    b840:	01480034 	movhi	r5,8192
    b844:	8822977a 	slli	r17,r17,29
    b848:	297fffc4 	addi	r5,r5,-1
    b84c:	2144703a 	and	r2,r4,r5
    b850:	1900022c 	andhi	r4,r3,8
    b854:	1444b03a 	or	r2,r2,r17
    b858:	203f4b26 	beq	r4,zero,b588 <__adddf3+0x4d0>
    b85c:	5808d0fa 	srli	r4,r11,3
    b860:	2200022c 	andhi	r8,r4,8
    b864:	403f481e 	bne	r8,zero,b588 <__adddf3+0x4d0>
    b868:	5804977a 	slli	r2,r11,29
    b86c:	314a703a 	and	r5,r6,r5
    b870:	3827883a 	mov	r19,r7
    b874:	2884b03a 	or	r2,r5,r2
    b878:	2007883a 	mov	r3,r4
    b87c:	003f4206 	br	b588 <__adddf3+0x4d0>
    b880:	04000084 	movi	r16,2
    b884:	003ee206 	br	b410 <__adddf3+0x358>
    b888:	6b25c83a 	sub	r18,r13,r12
    b88c:	5c57c83a 	sub	r11,r11,r17
    b890:	6c9b803a 	cmpltu	r13,r13,r18
    b894:	5b63c83a 	sub	r17,r11,r13
    b898:	3827883a 	mov	r19,r7
    b89c:	5029883a 	mov	r20,r10
    b8a0:	04000044 	movi	r16,1
    b8a4:	003e3706 	br	b184 <__adddf3+0xcc>
    b8a8:	103fb626 	beq	r2,zero,b784 <__adddf3+0x6cc>
    b8ac:	5808977a 	slli	r4,r11,29
    b8b0:	00880034 	movhi	r2,8192
    b8b4:	10bfffc4 	addi	r2,r2,-1
    b8b8:	3084703a 	and	r2,r6,r2
    b8bc:	5806d0fa 	srli	r3,r11,3
    b8c0:	1104b03a 	or	r2,r2,r4
    b8c4:	3827883a 	mov	r19,r7
    b8c8:	003f2306 	br	b558 <__adddf3+0x4a0>
    b8cc:	5808977a 	slli	r4,r11,29
    b8d0:	00880034 	movhi	r2,8192
    b8d4:	10bfffc4 	addi	r2,r2,-1
    b8d8:	3084703a 	and	r2,r6,r2
    b8dc:	5806d0fa 	srli	r3,r11,3
    b8e0:	1104b03a 	or	r2,r2,r4
    b8e4:	003f2806 	br	b588 <__adddf3+0x4d0>
    b8e8:	6819883a 	mov	r12,r13
    b8ec:	5823883a 	mov	r17,r11
    b8f0:	003f3006 	br	b5b4 <__adddf3+0x4fc>
    b8f4:	5808977a 	slli	r4,r11,29
    b8f8:	00880034 	movhi	r2,8192
    b8fc:	10bfffc4 	addi	r2,r2,-1
    b900:	3084703a 	and	r2,r6,r2
    b904:	5806d0fa 	srli	r3,r11,3
    b908:	1104b03a 	or	r2,r2,r4
    b90c:	003f1206 	br	b558 <__adddf3+0x4a0>
    b910:	5808977a 	slli	r4,r11,29
    b914:	00880034 	movhi	r2,8192
    b918:	10bfffc4 	addi	r2,r2,-1
    b91c:	3084703a 	and	r2,r6,r2
    b920:	5806d0fa 	srli	r3,r11,3
    b924:	1104b03a 	or	r2,r2,r4
    b928:	3827883a 	mov	r19,r7
    b92c:	003f1606 	br	b588 <__adddf3+0x4d0>
    b930:	28fff804 	addi	r3,r5,-32
    b934:	29000820 	cmpeqi	r4,r5,32
    b938:	88c6d83a 	srl	r3,r17,r3
    b93c:	2000041e 	bne	r4,zero,b950 <__adddf3+0x898>
    b940:	01001004 	movi	r4,64
    b944:	2149c83a 	sub	r4,r4,r5
    b948:	8908983a 	sll	r4,r17,r4
    b94c:	6118b03a 	or	r12,r12,r4
    b950:	6024c03a 	cmpne	r18,r12,zero
    b954:	90e4b03a 	or	r18,r18,r3
    b958:	003edb06 	br	b4c8 <__adddf3+0x410>
    b95c:	6365883a 	add	r18,r12,r13
    b960:	8ad7883a 	add	r11,r17,r11
    b964:	935b803a 	cmpltu	r13,r18,r13
    b968:	5b63883a 	add	r17,r11,r13
    b96c:	003ebc06 	br	b460 <__adddf3+0x3a8>
    b970:	5804977a 	slli	r2,r11,29
    b974:	00c80034 	movhi	r3,8192
    b978:	18ffffc4 	addi	r3,r3,-1
    b97c:	30cc703a 	and	r6,r6,r3
    b980:	1184b03a 	or	r2,r2,r6
    b984:	5806d0fa 	srli	r3,r11,3
    b988:	003eff06 	br	b588 <__adddf3+0x4d0>
    b98c:	90c4b03a 	or	r2,r18,r3
    b990:	103f7c26 	beq	r2,zero,b784 <__adddf3+0x6cc>
    b994:	1823883a 	mov	r17,r3
    b998:	003f2006 	br	b61c <__adddf3+0x564>
    b99c:	00c00804 	movi	r3,32
    b9a0:	1907c83a 	sub	r3,r3,r4
    b9a4:	000b883a 	mov	r5,zero
    b9a8:	003e0c06 	br	b1dc <__adddf3+0x124>
    b9ac:	0005883a 	mov	r2,zero
    b9b0:	00c1ffc4 	movi	r3,2047
    b9b4:	0009883a 	mov	r4,zero
    b9b8:	003e2506 	br	b250 <__adddf3+0x198>

0000b9bc <__divdf3>:
    b9bc:	2806d53a 	srli	r3,r5,20
    b9c0:	defff004 	addi	sp,sp,-64
    b9c4:	00800434 	movhi	r2,16
    b9c8:	dd800c15 	stw	r22,48(sp)
    b9cc:	dd400b15 	stw	r21,44(sp)
    b9d0:	dd000a15 	stw	r20,40(sp)
    b9d4:	dc800815 	stw	r18,32(sp)
    b9d8:	dc000615 	stw	r16,24(sp)
    b9dc:	10bfffc4 	addi	r2,r2,-1
    b9e0:	dfc00f15 	stw	ra,60(sp)
    b9e4:	df000e15 	stw	fp,56(sp)
    b9e8:	ddc00d15 	stw	r23,52(sp)
    b9ec:	dcc00915 	stw	r19,36(sp)
    b9f0:	dc400715 	stw	r17,28(sp)
    b9f4:	18c1ffcc 	andi	r3,r3,2047
    b9f8:	282cd7fa 	srli	r22,r5,31
    b9fc:	302b883a 	mov	r21,r6
    ba00:	3821883a 	mov	r16,r7
    ba04:	2029883a 	mov	r20,r4
    ba08:	28a4703a 	and	r18,r5,r2
    ba0c:	18013426 	beq	r3,zero,bee0 <__divdf3+0x524>
    ba10:	1881ffe0 	cmpeqi	r2,r3,2047
    ba14:	1001451e 	bne	r2,zero,bf2c <__divdf3+0x570>
    ba18:	900a90fa 	slli	r5,r18,3
    ba1c:	2022d77a 	srli	r17,r4,29
    ba20:	202890fa 	slli	r20,r4,3
    ba24:	1f3f0044 	addi	fp,r3,-1023
    ba28:	8962b03a 	or	r17,r17,r5
    ba2c:	8c402034 	orhi	r17,r17,128
    ba30:	0027883a 	mov	r19,zero
    ba34:	0025883a 	mov	r18,zero
    ba38:	8004d53a 	srli	r2,r16,20
    ba3c:	01000434 	movhi	r4,16
    ba40:	213fffc4 	addi	r4,r4,-1
    ba44:	1081ffcc 	andi	r2,r2,2047
    ba48:	802ed7fa 	srli	r23,r16,31
    ba4c:	8120703a 	and	r16,r16,r4
    ba50:	10011226 	beq	r2,zero,be9c <__divdf3+0x4e0>
    ba54:	1101ffe0 	cmpeqi	r4,r2,2047
    ba58:	20013b1e 	bne	r4,zero,bf48 <__divdf3+0x58c>
    ba5c:	a808d77a 	srli	r4,r21,29
    ba60:	802090fa 	slli	r16,r16,3
    ba64:	a80e90fa 	slli	r7,r21,3
    ba68:	10bf0044 	addi	r2,r2,-1023
    ba6c:	2420b03a 	or	r16,r4,r16
    ba70:	84002034 	orhi	r16,r16,128
    ba74:	e0b9c83a 	sub	fp,fp,r2
    ba78:	0009883a 	mov	r4,zero
    ba7c:	98800428 	cmpgeui	r2,r19,16
    ba80:	b5eaf03a 	xor	r21,r22,r23
    ba84:	1000391e 	bne	r2,zero,bb6c <__divdf3+0x1b0>
    ba88:	982690ba 	slli	r19,r19,2
    ba8c:	00800074 	movhi	r2,1
    ba90:	9885883a 	add	r2,r19,r2
    ba94:	10aea717 	ldw	r2,-17764(r2)
    ba98:	1000683a 	jmp	r2
    ba9c:	0000bb6c 	andhi	zero,zero,749
    baa0:	0000bb54 	movui	zero,749
    baa4:	0000bb04 	movi	zero,748
    baa8:	0000bb64 	muli	zero,zero,749
    baac:	0000bb04 	movi	zero,748
    bab0:	0000bfac 	andhi	zero,zero,766
    bab4:	0000bb04 	movi	zero,748
    bab8:	0000bb64 	muli	zero,zero,749
    babc:	0000bb54 	movui	zero,749
    bac0:	0000bb54 	movui	zero,749
    bac4:	0000bfac 	andhi	zero,zero,766
    bac8:	0000bb64 	muli	zero,zero,749
    bacc:	0000badc 	xori	zero,zero,747
    bad0:	0000badc 	xori	zero,zero,747
    bad4:	0000badc 	xori	zero,zero,747
    bad8:	0000c03c 	xorhi	zero,zero,768
    badc:	b02b883a 	mov	r21,r22
    bae0:	8821883a 	mov	r16,r17
    bae4:	a00f883a 	mov	r7,r20
    bae8:	9009883a 	mov	r4,r18
    baec:	208000a0 	cmpeqi	r2,r4,2
    baf0:	1000181e 	bne	r2,zero,bb54 <__divdf3+0x198>
    baf4:	208000e0 	cmpeqi	r2,r4,3
    baf8:	1001df1e 	bne	r2,zero,c278 <__divdf3+0x8bc>
    bafc:	21000060 	cmpeqi	r4,r4,1
    bb00:	2000d326 	beq	r4,zero,be50 <__divdf3+0x494>
    bb04:	0009883a 	mov	r4,zero
    bb08:	0023883a 	mov	r17,zero
    bb0c:	0029883a 	mov	r20,zero
    bb10:	2006953a 	slli	r3,r4,20
    bb14:	a80c97fa 	slli	r6,r21,31
    bb18:	a005883a 	mov	r2,r20
    bb1c:	1c46b03a 	or	r3,r3,r17
    bb20:	1986b03a 	or	r3,r3,r6
    bb24:	dfc00f17 	ldw	ra,60(sp)
    bb28:	df000e17 	ldw	fp,56(sp)
    bb2c:	ddc00d17 	ldw	r23,52(sp)
    bb30:	dd800c17 	ldw	r22,48(sp)
    bb34:	dd400b17 	ldw	r21,44(sp)
    bb38:	dd000a17 	ldw	r20,40(sp)
    bb3c:	dcc00917 	ldw	r19,36(sp)
    bb40:	dc800817 	ldw	r18,32(sp)
    bb44:	dc400717 	ldw	r17,28(sp)
    bb48:	dc000617 	ldw	r16,24(sp)
    bb4c:	dec01004 	addi	sp,sp,64
    bb50:	f800283a 	ret
    bb54:	0101ffc4 	movi	r4,2047
    bb58:	0023883a 	mov	r17,zero
    bb5c:	0029883a 	mov	r20,zero
    bb60:	003feb06 	br	bb10 <__divdf3+0x154>
    bb64:	b82b883a 	mov	r21,r23
    bb68:	003fe006 	br	baec <__divdf3+0x130>
    bb6c:	84414d36 	bltu	r16,r17,c0a4 <__divdf3+0x6e8>
    bb70:	84414b26 	beq	r16,r17,c0a0 <__divdf3+0x6e4>
    bb74:	a025883a 	mov	r18,r20
    bb78:	e73fffc4 	addi	fp,fp,-1
    bb7c:	0029883a 	mov	r20,zero
    bb80:	8020923a 	slli	r16,r16,8
    bb84:	3826d63a 	srli	r19,r7,24
    bb88:	8809883a 	mov	r4,r17
    bb8c:	802ed43a 	srli	r23,r16,16
    bb90:	9c26b03a 	or	r19,r19,r16
    bb94:	9dbfffcc 	andi	r22,r19,65535
    bb98:	b80b883a 	mov	r5,r23
    bb9c:	d9c00115 	stw	r7,4(sp)
    bba0:	dd800015 	stw	r22,0(sp)
    bba4:	000afd00 	call	afd0 <__udivsi3>
    bba8:	b009883a 	mov	r4,r22
    bbac:	100b883a 	mov	r5,r2
    bbb0:	1021883a 	mov	r16,r2
    bbb4:	000b0900 	call	b090 <__mulsi3>
    bbb8:	8809883a 	mov	r4,r17
    bbbc:	b80b883a 	mov	r5,r23
    bbc0:	102d883a 	mov	r22,r2
    bbc4:	000b0340 	call	b034 <__umodsi3>
    bbc8:	1004943a 	slli	r2,r2,16
    bbcc:	9008d43a 	srli	r4,r18,16
    bbd0:	d9c00117 	ldw	r7,4(sp)
    bbd4:	2088b03a 	or	r4,r4,r2
    bbd8:	3822923a 	slli	r17,r7,8
    bbdc:	2580042e 	bgeu	r4,r22,bbf0 <__divdf3+0x234>
    bbe0:	24c9883a 	add	r4,r4,r19
    bbe4:	80bfffc4 	addi	r2,r16,-1
    bbe8:	24c1602e 	bgeu	r4,r19,c16c <__divdf3+0x7b0>
    bbec:	1021883a 	mov	r16,r2
    bbf0:	25adc83a 	sub	r22,r4,r22
    bbf4:	b80b883a 	mov	r5,r23
    bbf8:	b009883a 	mov	r4,r22
    bbfc:	000afd00 	call	afd0 <__udivsi3>
    bc00:	d9000017 	ldw	r4,0(sp)
    bc04:	100b883a 	mov	r5,r2
    bc08:	d8800215 	stw	r2,8(sp)
    bc0c:	000b0900 	call	b090 <__mulsi3>
    bc10:	b80b883a 	mov	r5,r23
    bc14:	b009883a 	mov	r4,r22
    bc18:	d8800115 	stw	r2,4(sp)
    bc1c:	000b0340 	call	b034 <__umodsi3>
    bc20:	1004943a 	slli	r2,r2,16
    bc24:	da400117 	ldw	r9,4(sp)
    bc28:	94bfffcc 	andi	r18,r18,65535
    bc2c:	908eb03a 	or	r7,r18,r2
    bc30:	da000217 	ldw	r8,8(sp)
    bc34:	3a40042e 	bgeu	r7,r9,bc48 <__divdf3+0x28c>
    bc38:	3ccf883a 	add	r7,r7,r19
    bc3c:	40bfffc4 	addi	r2,r8,-1
    bc40:	3cc1462e 	bgeu	r7,r19,c15c <__divdf3+0x7a0>
    bc44:	1011883a 	mov	r8,r2
    bc48:	8020943a 	slli	r16,r16,16
    bc4c:	88bfffcc 	andi	r2,r17,65535
    bc50:	100b883a 	mov	r5,r2
    bc54:	8220b03a 	or	r16,r16,r8
    bc58:	82bfffcc 	andi	r10,r16,65535
    bc5c:	3a51c83a 	sub	r8,r7,r9
    bc60:	5009883a 	mov	r4,r10
    bc64:	da000415 	stw	r8,16(sp)
    bc68:	da800515 	stw	r10,20(sp)
    bc6c:	8024d43a 	srli	r18,r16,16
    bc70:	d8800115 	stw	r2,4(sp)
    bc74:	000b0900 	call	b090 <__mulsi3>
    bc78:	d9400117 	ldw	r5,4(sp)
    bc7c:	882cd43a 	srli	r22,r17,16
    bc80:	9009883a 	mov	r4,r18
    bc84:	d8800315 	stw	r2,12(sp)
    bc88:	000b0900 	call	b090 <__mulsi3>
    bc8c:	9009883a 	mov	r4,r18
    bc90:	b00b883a 	mov	r5,r22
    bc94:	d8800215 	stw	r2,8(sp)
    bc98:	000b0900 	call	b090 <__mulsi3>
    bc9c:	da800517 	ldw	r10,20(sp)
    bca0:	b009883a 	mov	r4,r22
    bca4:	1025883a 	mov	r18,r2
    bca8:	500b883a 	mov	r5,r10
    bcac:	000b0900 	call	b090 <__mulsi3>
    bcb0:	da400317 	ldw	r9,12(sp)
    bcb4:	d9c00217 	ldw	r7,8(sp)
    bcb8:	da000417 	ldw	r8,16(sp)
    bcbc:	4808d43a 	srli	r4,r9,16
    bcc0:	11c5883a 	add	r2,r2,r7
    bcc4:	2089883a 	add	r4,r4,r2
    bcc8:	21c0022e 	bgeu	r4,r7,bcd4 <__divdf3+0x318>
    bccc:	00800074 	movhi	r2,1
    bcd0:	90a5883a 	add	r18,r18,r2
    bcd4:	200ad43a 	srli	r5,r4,16
    bcd8:	200e943a 	slli	r7,r4,16
    bcdc:	4a7fffcc 	andi	r9,r9,65535
    bce0:	2c85883a 	add	r2,r5,r18
    bce4:	3a4f883a 	add	r7,r7,r9
    bce8:	40800236 	bltu	r8,r2,bcf4 <__divdf3+0x338>
    bcec:	40800a1e 	bne	r8,r2,bd18 <__divdf3+0x35c>
    bcf0:	a1c0092e 	bgeu	r20,r7,bd18 <__divdf3+0x35c>
    bcf4:	a469883a 	add	r20,r20,r17
    bcf8:	a449803a 	cmpltu	r4,r20,r17
    bcfc:	24c9883a 	add	r4,r4,r19
    bd00:	4111883a 	add	r8,r8,r4
    bd04:	813fffc4 	addi	r4,r16,-1
    bd08:	9a01112e 	bgeu	r19,r8,c150 <__divdf3+0x794>
    bd0c:	40814236 	bltu	r8,r2,c218 <__divdf3+0x85c>
    bd10:	12014026 	beq	r2,r8,c214 <__divdf3+0x858>
    bd14:	2021883a 	mov	r16,r4
    bd18:	a1e5c83a 	sub	r18,r20,r7
    bd1c:	4085c83a 	sub	r2,r8,r2
    bd20:	a4a9803a 	cmpltu	r20,r20,r18
    bd24:	1529c83a 	sub	r20,r2,r20
    bd28:	9d012926 	beq	r19,r20,c1d0 <__divdf3+0x814>
    bd2c:	a009883a 	mov	r4,r20
    bd30:	b80b883a 	mov	r5,r23
    bd34:	000afd00 	call	afd0 <__udivsi3>
    bd38:	d9000017 	ldw	r4,0(sp)
    bd3c:	100b883a 	mov	r5,r2
    bd40:	d8800215 	stw	r2,8(sp)
    bd44:	000b0900 	call	b090 <__mulsi3>
    bd48:	a009883a 	mov	r4,r20
    bd4c:	b80b883a 	mov	r5,r23
    bd50:	1029883a 	mov	r20,r2
    bd54:	000b0340 	call	b034 <__umodsi3>
    bd58:	1004943a 	slli	r2,r2,16
    bd5c:	9008d43a 	srli	r4,r18,16
    bd60:	2088b03a 	or	r4,r4,r2
    bd64:	2500f136 	bltu	r4,r20,c12c <__divdf3+0x770>
    bd68:	2529c83a 	sub	r20,r4,r20
    bd6c:	a009883a 	mov	r4,r20
    bd70:	b80b883a 	mov	r5,r23
    bd74:	000afd00 	call	afd0 <__udivsi3>
    bd78:	d9000017 	ldw	r4,0(sp)
    bd7c:	100b883a 	mov	r5,r2
    bd80:	d8800315 	stw	r2,12(sp)
    bd84:	000b0900 	call	b090 <__mulsi3>
    bd88:	a009883a 	mov	r4,r20
    bd8c:	b80b883a 	mov	r5,r23
    bd90:	1029883a 	mov	r20,r2
    bd94:	000b0340 	call	b034 <__umodsi3>
    bd98:	1004943a 	slli	r2,r2,16
    bd9c:	91ffffcc 	andi	r7,r18,65535
    bda0:	da400317 	ldw	r9,12(sp)
    bda4:	3890b03a 	or	r8,r7,r2
    bda8:	4500d936 	bltu	r8,r20,c110 <__divdf3+0x754>
    bdac:	d8800217 	ldw	r2,8(sp)
    bdb0:	ddc00117 	ldw	r23,4(sp)
    bdb4:	4529c83a 	sub	r20,r8,r20
    bdb8:	1024943a 	slli	r18,r2,16
    bdbc:	b809883a 	mov	r4,r23
    bdc0:	924eb03a 	or	r7,r18,r9
    bdc4:	3824d43a 	srli	r18,r7,16
    bdc8:	3a7fffcc 	andi	r9,r7,65535
    bdcc:	480b883a 	mov	r5,r9
    bdd0:	d9c00215 	stw	r7,8(sp)
    bdd4:	da400115 	stw	r9,4(sp)
    bdd8:	000b0900 	call	b090 <__mulsi3>
    bddc:	b80b883a 	mov	r5,r23
    bde0:	9009883a 	mov	r4,r18
    bde4:	102f883a 	mov	r23,r2
    bde8:	000b0900 	call	b090 <__mulsi3>
    bdec:	900b883a 	mov	r5,r18
    bdf0:	b009883a 	mov	r4,r22
    bdf4:	d8800015 	stw	r2,0(sp)
    bdf8:	000b0900 	call	b090 <__mulsi3>
    bdfc:	da400117 	ldw	r9,4(sp)
    be00:	b009883a 	mov	r4,r22
    be04:	1025883a 	mov	r18,r2
    be08:	480b883a 	mov	r5,r9
    be0c:	000b0900 	call	b090 <__mulsi3>
    be10:	d8c00017 	ldw	r3,0(sp)
    be14:	b808d43a 	srli	r4,r23,16
    be18:	d9c00217 	ldw	r7,8(sp)
    be1c:	10cb883a 	add	r5,r2,r3
    be20:	2149883a 	add	r4,r4,r5
    be24:	20c0022e 	bgeu	r4,r3,be30 <__divdf3+0x474>
    be28:	00800074 	movhi	r2,1
    be2c:	90a5883a 	add	r18,r18,r2
    be30:	200ad43a 	srli	r5,r4,16
    be34:	2008943a 	slli	r4,r4,16
    be38:	ba3fffcc 	andi	r8,r23,65535
    be3c:	2c8b883a 	add	r5,r5,r18
    be40:	2209883a 	add	r4,r4,r8
    be44:	a1408f36 	bltu	r20,r5,c084 <__divdf3+0x6c8>
    be48:	a1408d26 	beq	r20,r5,c080 <__divdf3+0x6c4>
    be4c:	39c00054 	ori	r7,r7,1
    be50:	e100ffc4 	addi	r4,fp,1023
    be54:	01005c0e 	bge	zero,r4,bfc8 <__divdf3+0x60c>
    be58:	388001cc 	andi	r2,r7,7
    be5c:	1000e41e 	bne	r2,zero,c1f0 <__divdf3+0x834>
    be60:	8080402c 	andhi	r2,r16,256
    be64:	10000426 	beq	r2,zero,be78 <__divdf3+0x4bc>
    be68:	00bfc034 	movhi	r2,65280
    be6c:	10bfffc4 	addi	r2,r2,-1
    be70:	80a0703a 	and	r16,r16,r2
    be74:	e1010004 	addi	r4,fp,1024
    be78:	2081ffc8 	cmpgei	r2,r4,2047
    be7c:	103f351e 	bne	r2,zero,bb54 <__divdf3+0x198>
    be80:	380ed0fa 	srli	r7,r7,3
    be84:	8024977a 	slli	r18,r16,29
    be88:	8022927a 	slli	r17,r16,9
    be8c:	2101ffcc 	andi	r4,r4,2047
    be90:	91e8b03a 	or	r20,r18,r7
    be94:	8822d33a 	srli	r17,r17,12
    be98:	003f1d06 	br	bb10 <__divdf3+0x154>
    be9c:	854eb03a 	or	r7,r16,r21
    bea0:	38003e26 	beq	r7,zero,bf9c <__divdf3+0x5e0>
    bea4:	80008f26 	beq	r16,zero,c0e4 <__divdf3+0x728>
    bea8:	8009883a 	mov	r4,r16
    beac:	000d8f00 	call	d8f0 <__clzsi2>
    beb0:	117ffd44 	addi	r5,r2,-11
    beb4:	01000744 	movi	r4,29
    beb8:	11fffe04 	addi	r7,r2,-8
    bebc:	2149c83a 	sub	r4,r4,r5
    bec0:	81e0983a 	sll	r16,r16,r7
    bec4:	a908d83a 	srl	r4,r21,r4
    bec8:	a9ce983a 	sll	r7,r21,r7
    becc:	2420b03a 	or	r16,r4,r16
    bed0:	1705883a 	add	r2,r2,fp
    bed4:	1700fcc4 	addi	fp,r2,1011
    bed8:	0009883a 	mov	r4,zero
    bedc:	003ee706 	br	ba7c <__divdf3+0xc0>
    bee0:	24a2b03a 	or	r17,r4,r18
    bee4:	2027883a 	mov	r19,r4
    bee8:	88002726 	beq	r17,zero,bf88 <__divdf3+0x5cc>
    beec:	90007326 	beq	r18,zero,c0bc <__divdf3+0x700>
    bef0:	9009883a 	mov	r4,r18
    bef4:	000d8f00 	call	d8f0 <__clzsi2>
    bef8:	10fffd44 	addi	r3,r2,-11
    befc:	04400744 	movi	r17,29
    bf00:	153ffe04 	addi	r20,r2,-8
    bf04:	88e3c83a 	sub	r17,r17,r3
    bf08:	950a983a 	sll	r5,r18,r20
    bf0c:	9c62d83a 	srl	r17,r19,r17
    bf10:	9d28983a 	sll	r20,r19,r20
    bf14:	8962b03a 	or	r17,r17,r5
    bf18:	00ff0344 	movi	r3,-1011
    bf1c:	18b9c83a 	sub	fp,r3,r2
    bf20:	0027883a 	mov	r19,zero
    bf24:	0025883a 	mov	r18,zero
    bf28:	003ec306 	br	ba38 <__divdf3+0x7c>
    bf2c:	24a2b03a 	or	r17,r4,r18
    bf30:	8800101e 	bne	r17,zero,bf74 <__divdf3+0x5b8>
    bf34:	0029883a 	mov	r20,zero
    bf38:	04c00204 	movi	r19,8
    bf3c:	0701ffc4 	movi	fp,2047
    bf40:	04800084 	movi	r18,2
    bf44:	003ebc06 	br	ba38 <__divdf3+0x7c>
    bf48:	854eb03a 	or	r7,r16,r21
    bf4c:	e73e0044 	addi	fp,fp,-2047
    bf50:	3800041e 	bne	r7,zero,bf64 <__divdf3+0x5a8>
    bf54:	9cc00094 	ori	r19,r19,2
    bf58:	0021883a 	mov	r16,zero
    bf5c:	01000084 	movi	r4,2
    bf60:	003ec606 	br	ba7c <__divdf3+0xc0>
    bf64:	9cc000d4 	ori	r19,r19,3
    bf68:	a80f883a 	mov	r7,r21
    bf6c:	010000c4 	movi	r4,3
    bf70:	003ec206 	br	ba7c <__divdf3+0xc0>
    bf74:	9023883a 	mov	r17,r18
    bf78:	04c00304 	movi	r19,12
    bf7c:	0701ffc4 	movi	fp,2047
    bf80:	048000c4 	movi	r18,3
    bf84:	003eac06 	br	ba38 <__divdf3+0x7c>
    bf88:	0029883a 	mov	r20,zero
    bf8c:	04c00104 	movi	r19,4
    bf90:	0039883a 	mov	fp,zero
    bf94:	04800044 	movi	r18,1
    bf98:	003ea706 	br	ba38 <__divdf3+0x7c>
    bf9c:	9cc00054 	ori	r19,r19,1
    bfa0:	0021883a 	mov	r16,zero
    bfa4:	01000044 	movi	r4,1
    bfa8:	003eb406 	br	ba7c <__divdf3+0xc0>
    bfac:	04400434 	movhi	r17,16
    bfb0:	002b883a 	mov	r21,zero
    bfb4:	8c7fffc4 	addi	r17,r17,-1
    bfb8:	053fffc4 	movi	r20,-1
    bfbc:	0101ffc4 	movi	r4,2047
    bfc0:	003ed306 	br	bb10 <__divdf3+0x154>
    bfc4:	01ffffc4 	movi	r7,-1
    bfc8:	00800044 	movi	r2,1
    bfcc:	1105c83a 	sub	r2,r2,r4
    bfd0:	11400e48 	cmpgei	r5,r2,57
    bfd4:	283ecb1e 	bne	r5,zero,bb04 <__divdf3+0x148>
    bfd8:	11400808 	cmpgei	r5,r2,32
    bfdc:	2800671e 	bne	r5,zero,c17c <__divdf3+0x7c0>
    bfe0:	e0c10784 	addi	r3,fp,1054
    bfe4:	80e4983a 	sll	r18,r16,r3
    bfe8:	3888d83a 	srl	r4,r7,r2
    bfec:	38c6983a 	sll	r3,r7,r3
    bff0:	80a0d83a 	srl	r16,r16,r2
    bff4:	9124b03a 	or	r18,r18,r4
    bff8:	1806c03a 	cmpne	r3,r3,zero
    bffc:	90e4b03a 	or	r18,r18,r3
    c000:	908001cc 	andi	r2,r18,7
    c004:	10000726 	beq	r2,zero,c024 <__divdf3+0x668>
    c008:	908003cc 	andi	r2,r18,15
    c00c:	10800120 	cmpeqi	r2,r2,4
    c010:	1000041e 	bne	r2,zero,c024 <__divdf3+0x668>
    c014:	90800104 	addi	r2,r18,4
    c018:	14a5803a 	cmpltu	r18,r2,r18
    c01c:	84a1883a 	add	r16,r16,r18
    c020:	1025883a 	mov	r18,r2
    c024:	8080202c 	andhi	r2,r16,128
    c028:	10008f26 	beq	r2,zero,c268 <__divdf3+0x8ac>
    c02c:	01000044 	movi	r4,1
    c030:	0023883a 	mov	r17,zero
    c034:	0029883a 	mov	r20,zero
    c038:	003eb506 	br	bb10 <__divdf3+0x154>
    c03c:	8880022c 	andhi	r2,r17,8
    c040:	10000926 	beq	r2,zero,c068 <__divdf3+0x6ac>
    c044:	8080022c 	andhi	r2,r16,8
    c048:	1000071e 	bne	r2,zero,c068 <__divdf3+0x6ac>
    c04c:	00800434 	movhi	r2,16
    c050:	84400234 	orhi	r17,r16,8
    c054:	10bfffc4 	addi	r2,r2,-1
    c058:	88a2703a 	and	r17,r17,r2
    c05c:	b82b883a 	mov	r21,r23
    c060:	3829883a 	mov	r20,r7
    c064:	003fd506 	br	bfbc <__divdf3+0x600>
    c068:	00800434 	movhi	r2,16
    c06c:	8c400234 	orhi	r17,r17,8
    c070:	10bfffc4 	addi	r2,r2,-1
    c074:	88a2703a 	and	r17,r17,r2
    c078:	b02b883a 	mov	r21,r22
    c07c:	003fcf06 	br	bfbc <__divdf3+0x600>
    c080:	203f7326 	beq	r4,zero,be50 <__divdf3+0x494>
    c084:	9d11883a 	add	r8,r19,r20
    c088:	38bfffc4 	addi	r2,r7,-1
    c08c:	44c04c36 	bltu	r8,r19,c1c0 <__divdf3+0x804>
    c090:	41406736 	bltu	r8,r5,c230 <__divdf3+0x874>
    c094:	41407e26 	beq	r8,r5,c290 <__divdf3+0x8d4>
    c098:	100f883a 	mov	r7,r2
    c09c:	003f6b06 	br	be4c <__divdf3+0x490>
    c0a0:	a1feb436 	bltu	r20,r7,bb74 <__divdf3+0x1b8>
    c0a4:	880897fa 	slli	r4,r17,31
    c0a8:	a004d07a 	srli	r2,r20,1
    c0ac:	8822d07a 	srli	r17,r17,1
    c0b0:	a02897fa 	slli	r20,r20,31
    c0b4:	20a4b03a 	or	r18,r4,r2
    c0b8:	003eb106 	br	bb80 <__divdf3+0x1c4>
    c0bc:	000d8f00 	call	d8f0 <__clzsi2>
    c0c0:	10c00544 	addi	r3,r2,21
    c0c4:	19000748 	cmpgei	r4,r3,29
    c0c8:	1023883a 	mov	r17,r2
    c0cc:	10800804 	addi	r2,r2,32
    c0d0:	203f8a26 	beq	r4,zero,befc <__divdf3+0x540>
    c0d4:	8c7ffe04 	addi	r17,r17,-8
    c0d8:	a462983a 	sll	r17,r20,r17
    c0dc:	0029883a 	mov	r20,zero
    c0e0:	003f8d06 	br	bf18 <__divdf3+0x55c>
    c0e4:	a809883a 	mov	r4,r21
    c0e8:	000d8f00 	call	d8f0 <__clzsi2>
    c0ec:	11400544 	addi	r5,r2,21
    c0f0:	29800748 	cmpgei	r6,r5,29
    c0f4:	1009883a 	mov	r4,r2
    c0f8:	10800804 	addi	r2,r2,32
    c0fc:	303f6d26 	beq	r6,zero,beb4 <__divdf3+0x4f8>
    c100:	213ffe04 	addi	r4,r4,-8
    c104:	a920983a 	sll	r16,r21,r4
    c108:	000f883a 	mov	r7,zero
    c10c:	003f7006 	br	bed0 <__divdf3+0x514>
    c110:	44d1883a 	add	r8,r8,r19
    c114:	48bfffc4 	addi	r2,r9,-1
    c118:	44c03c36 	bltu	r8,r19,c20c <__divdf3+0x850>
    c11c:	45003b2e 	bgeu	r8,r20,c20c <__divdf3+0x850>
    c120:	4a7fff84 	addi	r9,r9,-2
    c124:	44d1883a 	add	r8,r8,r19
    c128:	003f2006 	br	bdac <__divdf3+0x3f0>
    c12c:	d8c00217 	ldw	r3,8(sp)
    c130:	24c9883a 	add	r4,r4,r19
    c134:	18bfffc4 	addi	r2,r3,-1
    c138:	24c03236 	bltu	r4,r19,c204 <__divdf3+0x848>
    c13c:	2500312e 	bgeu	r4,r20,c204 <__divdf3+0x848>
    c140:	18bfff84 	addi	r2,r3,-2
    c144:	d8800215 	stw	r2,8(sp)
    c148:	24c9883a 	add	r4,r4,r19
    c14c:	003f0606 	br	bd68 <__divdf3+0x3ac>
    c150:	9a3ef01e 	bne	r19,r8,bd14 <__divdf3+0x358>
    c154:	a47eef36 	bltu	r20,r17,bd14 <__divdf3+0x358>
    c158:	003eec06 	br	bd0c <__divdf3+0x350>
    c15c:	3a7eb92e 	bgeu	r7,r9,bc44 <__divdf3+0x288>
    c160:	423fff84 	addi	r8,r8,-2
    c164:	3ccf883a 	add	r7,r7,r19
    c168:	003eb706 	br	bc48 <__divdf3+0x28c>
    c16c:	25be9f2e 	bgeu	r4,r22,bbec <__divdf3+0x230>
    c170:	843fff84 	addi	r16,r16,-2
    c174:	24c9883a 	add	r4,r4,r19
    c178:	003e9d06 	br	bbf0 <__divdf3+0x234>
    c17c:	017ff844 	movi	r5,-31
    c180:	2909c83a 	sub	r4,r5,r4
    c184:	10800820 	cmpeqi	r2,r2,32
    c188:	8108d83a 	srl	r4,r16,r4
    c18c:	1000031e 	bne	r2,zero,c19c <__divdf3+0x7e0>
    c190:	e0c10f84 	addi	r3,fp,1086
    c194:	80c6983a 	sll	r3,r16,r3
    c198:	38ceb03a 	or	r7,r7,r3
    c19c:	3824c03a 	cmpne	r18,r7,zero
    c1a0:	9124b03a 	or	r18,r18,r4
    c1a4:	940001cc 	andi	r16,r18,7
    c1a8:	8000291e 	bne	r16,zero,c250 <__divdf3+0x894>
    c1ac:	0023883a 	mov	r17,zero
    c1b0:	9024d0fa 	srli	r18,r18,3
    c1b4:	0009883a 	mov	r4,zero
    c1b8:	9428b03a 	or	r20,r18,r16
    c1bc:	003e5406 	br	bb10 <__divdf3+0x154>
    c1c0:	100f883a 	mov	r7,r2
    c1c4:	417f211e 	bne	r8,r5,be4c <__divdf3+0x490>
    c1c8:	247f201e 	bne	r4,r17,be4c <__divdf3+0x490>
    c1cc:	003f2006 	br	be50 <__divdf3+0x494>
    c1d0:	e0bf0088 	cmpgei	r2,fp,-1022
    c1d4:	e100ffc4 	addi	r4,fp,1023
    c1d8:	103f7a26 	beq	r2,zero,bfc4 <__divdf3+0x608>
    c1dc:	00bfffc4 	movi	r2,-1
    c1e0:	11c00104 	addi	r7,r2,4
    c1e4:	3885803a 	cmpltu	r2,r7,r2
    c1e8:	80a1883a 	add	r16,r16,r2
    c1ec:	003f1c06 	br	be60 <__divdf3+0x4a4>
    c1f0:	388003cc 	andi	r2,r7,15
    c1f4:	10800120 	cmpeqi	r2,r2,4
    c1f8:	103f191e 	bne	r2,zero,be60 <__divdf3+0x4a4>
    c1fc:	3805883a 	mov	r2,r7
    c200:	003ff706 	br	c1e0 <__divdf3+0x824>
    c204:	d8800215 	stw	r2,8(sp)
    c208:	003ed706 	br	bd68 <__divdf3+0x3ac>
    c20c:	1013883a 	mov	r9,r2
    c210:	003ee606 	br	bdac <__divdf3+0x3f0>
    c214:	a1febf2e 	bgeu	r20,r7,bd14 <__divdf3+0x358>
    c218:	a469883a 	add	r20,r20,r17
    c21c:	a449803a 	cmpltu	r4,r20,r17
    c220:	24c9883a 	add	r4,r4,r19
    c224:	843fff84 	addi	r16,r16,-2
    c228:	4111883a 	add	r8,r8,r4
    c22c:	003eba06 	br	bd18 <__divdf3+0x35c>
    c230:	8c45883a 	add	r2,r17,r17
    c234:	1463803a 	cmpltu	r17,r2,r17
    c238:	8ce3883a 	add	r17,r17,r19
    c23c:	4451883a 	add	r8,r8,r17
    c240:	39ffff84 	addi	r7,r7,-2
    c244:	1023883a 	mov	r17,r2
    c248:	417fdf26 	beq	r8,r5,c1c8 <__divdf3+0x80c>
    c24c:	003eff06 	br	be4c <__divdf3+0x490>
    c250:	908003cc 	andi	r2,r18,15
    c254:	10800120 	cmpeqi	r2,r2,4
    c258:	1000111e 	bne	r2,zero,c2a0 <__divdf3+0x8e4>
    c25c:	90800104 	addi	r2,r18,4
    c260:	14a1803a 	cmpltu	r16,r2,r18
    c264:	1025883a 	mov	r18,r2
    c268:	8022927a 	slli	r17,r16,9
    c26c:	8020977a 	slli	r16,r16,29
    c270:	8822d33a 	srli	r17,r17,12
    c274:	003fce06 	br	c1b0 <__divdf3+0x7f4>
    c278:	00800434 	movhi	r2,16
    c27c:	84400234 	orhi	r17,r16,8
    c280:	10bfffc4 	addi	r2,r2,-1
    c284:	88a2703a 	and	r17,r17,r2
    c288:	3829883a 	mov	r20,r7
    c28c:	003f4b06 	br	bfbc <__divdf3+0x600>
    c290:	893fe736 	bltu	r17,r4,c230 <__divdf3+0x874>
    c294:	100f883a 	mov	r7,r2
    c298:	247eec1e 	bne	r4,r17,be4c <__divdf3+0x490>
    c29c:	003eec06 	br	be50 <__divdf3+0x494>
    c2a0:	0021883a 	mov	r16,zero
    c2a4:	003ff006 	br	c268 <__divdf3+0x8ac>

0000c2a8 <__eqdf2>:
    c2a8:	2810d53a 	srli	r8,r5,20
    c2ac:	3804d53a 	srli	r2,r7,20
    c2b0:	00c00434 	movhi	r3,16
    c2b4:	4201ffcc 	andi	r8,r8,2047
    c2b8:	18ffffc4 	addi	r3,r3,-1
    c2bc:	4241ffe0 	cmpeqi	r9,r8,2047
    c2c0:	2816d7fa 	srli	r11,r5,31
    c2c4:	3814d7fa 	srli	r10,r7,31
    c2c8:	28ca703a 	and	r5,r5,r3
    c2cc:	38ce703a 	and	r7,r7,r3
    c2d0:	1081ffcc 	andi	r2,r2,2047
    c2d4:	4800061e 	bne	r9,zero,c2f0 <__eqdf2+0x48>
    c2d8:	10c1ffe0 	cmpeqi	r3,r2,2047
    c2dc:	1800061e 	bne	r3,zero,c2f8 <__eqdf2+0x50>
    c2e0:	4080051e 	bne	r8,r2,c2f8 <__eqdf2+0x50>
    c2e4:	00800044 	movi	r2,1
    c2e8:	29c00b26 	beq	r5,r7,c318 <__eqdf2+0x70>
    c2ec:	f800283a 	ret
    c2f0:	1081ffd8 	cmpnei	r2,r2,2047
    c2f4:	10000226 	beq	r2,zero,c300 <__eqdf2+0x58>
    c2f8:	00800044 	movi	r2,1
    c2fc:	f800283a 	ret
    c300:	29cab03a 	or	r5,r5,r7
    c304:	2984b03a 	or	r2,r5,r6
    c308:	1104b03a 	or	r2,r2,r4
    c30c:	103ffa1e 	bne	r2,zero,c2f8 <__eqdf2+0x50>
    c310:	5a84c03a 	cmpne	r2,r11,r10
    c314:	f800283a 	ret
    c318:	21800126 	beq	r4,r6,c320 <__eqdf2+0x78>
    c31c:	f800283a 	ret
    c320:	5a800426 	beq	r11,r10,c334 <__eqdf2+0x8c>
    c324:	403ffd1e 	bne	r8,zero,c31c <__eqdf2+0x74>
    c328:	290ab03a 	or	r5,r5,r4
    c32c:	2804c03a 	cmpne	r2,r5,zero
    c330:	f800283a 	ret
    c334:	0005883a 	mov	r2,zero
    c338:	003ff806 	br	c31c <__eqdf2+0x74>

0000c33c <__gedf2>:
    c33c:	2810d53a 	srli	r8,r5,20
    c340:	3812d53a 	srli	r9,r7,20
    c344:	00c00434 	movhi	r3,16
    c348:	4201ffcc 	andi	r8,r8,2047
    c34c:	18ffffc4 	addi	r3,r3,-1
    c350:	4281ffd8 	cmpnei	r10,r8,2047
    c354:	2816d7fa 	srli	r11,r5,31
    c358:	3804d7fa 	srli	r2,r7,31
    c35c:	28ca703a 	and	r5,r5,r3
    c360:	38ce703a 	and	r7,r7,r3
    c364:	48c1ffcc 	andi	r3,r9,2047
    c368:	50001426 	beq	r10,zero,c3bc <__gedf2+0x80>
    c36c:	1a41ffd8 	cmpnei	r9,r3,2047
    c370:	48000926 	beq	r9,zero,c398 <__gedf2+0x5c>
    c374:	40001b1e 	bne	r8,zero,c3e4 <__gedf2+0xa8>
    c378:	2910b03a 	or	r8,r5,r4
    c37c:	1800161e 	bne	r3,zero,c3d8 <__gedf2+0x9c>
    c380:	3986b03a 	or	r3,r7,r6
    c384:	18002126 	beq	r3,zero,c40c <__gedf2+0xd0>
    c388:	4000291e 	bne	r8,zero,c430 <__gedf2+0xf4>
    c38c:	1000111e 	bne	r2,zero,c3d4 <__gedf2+0x98>
    c390:	00bfffc4 	movi	r2,-1
    c394:	f800283a 	ret
    c398:	398eb03a 	or	r7,r7,r6
    c39c:	3800221e 	bne	r7,zero,c428 <__gedf2+0xec>
    c3a0:	4000021e 	bne	r8,zero,c3ac <__gedf2+0x70>
    c3a4:	2908b03a 	or	r4,r5,r4
    c3a8:	203ff826 	beq	r4,zero,c38c <__gedf2+0x50>
    c3ac:	5880071e 	bne	r11,r2,c3cc <__gedf2+0x90>
    c3b0:	583ff726 	beq	r11,zero,c390 <__gedf2+0x54>
    c3b4:	5805883a 	mov	r2,r11
    c3b8:	f800283a 	ret
    c3bc:	290ab03a 	or	r5,r5,r4
    c3c0:	2800191e 	bne	r5,zero,c428 <__gedf2+0xec>
    c3c4:	1901ffe0 	cmpeqi	r4,r3,2047
    c3c8:	2000131e 	bne	r4,zero,c418 <__gedf2+0xdc>
    c3cc:	00800044 	movi	r2,1
    c3d0:	583fef1e 	bne	r11,zero,c390 <__gedf2+0x54>
    c3d4:	f800283a 	ret
    c3d8:	403ff41e 	bne	r8,zero,c3ac <__gedf2+0x70>
    c3dc:	103ffd1e 	bne	r2,zero,c3d4 <__gedf2+0x98>
    c3e0:	003feb06 	br	c390 <__gedf2+0x54>
    c3e4:	183ff926 	beq	r3,zero,c3cc <__gedf2+0x90>
    c3e8:	58bff81e 	bne	r11,r2,c3cc <__gedf2+0x90>
    c3ec:	1a3ff716 	blt	r3,r8,c3cc <__gedf2+0x90>
    c3f0:	40ffef16 	blt	r8,r3,c3b0 <__gedf2+0x74>
    c3f4:	397ff536 	bltu	r7,r5,c3cc <__gedf2+0x90>
    c3f8:	29ffed1e 	bne	r5,r7,c3b0 <__gedf2+0x74>
    c3fc:	313ff336 	bltu	r6,r4,c3cc <__gedf2+0x90>
    c400:	21bfeb36 	bltu	r4,r6,c3b0 <__gedf2+0x74>
    c404:	0005883a 	mov	r2,zero
    c408:	f800283a 	ret
    c40c:	0005883a 	mov	r2,zero
    c410:	403fee1e 	bne	r8,zero,c3cc <__gedf2+0x90>
    c414:	f800283a 	ret
    c418:	398eb03a 	or	r7,r7,r6
    c41c:	3800021e 	bne	r7,zero,c428 <__gedf2+0xec>
    c420:	58bff826 	beq	r11,r2,c404 <__gedf2+0xc8>
    c424:	003fe906 	br	c3cc <__gedf2+0x90>
    c428:	00bfff84 	movi	r2,-2
    c42c:	f800283a 	ret
    c430:	58bff026 	beq	r11,r2,c3f4 <__gedf2+0xb8>
    c434:	003fe506 	br	c3cc <__gedf2+0x90>

0000c438 <__ledf2>:
    c438:	2810d53a 	srli	r8,r5,20
    c43c:	3812d53a 	srli	r9,r7,20
    c440:	00c00434 	movhi	r3,16
    c444:	4201ffcc 	andi	r8,r8,2047
    c448:	18ffffc4 	addi	r3,r3,-1
    c44c:	4281ffd8 	cmpnei	r10,r8,2047
    c450:	2816d7fa 	srli	r11,r5,31
    c454:	3804d7fa 	srli	r2,r7,31
    c458:	28ca703a 	and	r5,r5,r3
    c45c:	38ce703a 	and	r7,r7,r3
    c460:	48c1ffcc 	andi	r3,r9,2047
    c464:	50001426 	beq	r10,zero,c4b8 <__ledf2+0x80>
    c468:	1a41ffd8 	cmpnei	r9,r3,2047
    c46c:	48000926 	beq	r9,zero,c494 <__ledf2+0x5c>
    c470:	4000191e 	bne	r8,zero,c4d8 <__ledf2+0xa0>
    c474:	2910b03a 	or	r8,r5,r4
    c478:	1800221e 	bne	r3,zero,c504 <__ledf2+0xcc>
    c47c:	3986b03a 	or	r3,r7,r6
    c480:	18002326 	beq	r3,zero,c510 <__ledf2+0xd8>
    c484:	4000281e 	bne	r8,zero,c528 <__ledf2+0xf0>
    c488:	10000a1e 	bne	r2,zero,c4b4 <__ledf2+0x7c>
    c48c:	00bfffc4 	movi	r2,-1
    c490:	f800283a 	ret
    c494:	398eb03a 	or	r7,r7,r6
    c498:	38000d1e 	bne	r7,zero,c4d0 <__ledf2+0x98>
    c49c:	4000021e 	bne	r8,zero,c4a8 <__ledf2+0x70>
    c4a0:	290ab03a 	or	r5,r5,r4
    c4a4:	283ff826 	beq	r5,zero,c488 <__ledf2+0x50>
    c4a8:	58801326 	beq	r11,r2,c4f8 <__ledf2+0xc0>
    c4ac:	00800044 	movi	r2,1
    c4b0:	583ff61e 	bne	r11,zero,c48c <__ledf2+0x54>
    c4b4:	f800283a 	ret
    c4b8:	290ab03a 	or	r5,r5,r4
    c4bc:	2800041e 	bne	r5,zero,c4d0 <__ledf2+0x98>
    c4c0:	1901ffe0 	cmpeqi	r4,r3,2047
    c4c4:	203ff926 	beq	r4,zero,c4ac <__ledf2+0x74>
    c4c8:	398eb03a 	or	r7,r7,r6
    c4cc:	38001326 	beq	r7,zero,c51c <__ledf2+0xe4>
    c4d0:	00800084 	movi	r2,2
    c4d4:	f800283a 	ret
    c4d8:	183ff426 	beq	r3,zero,c4ac <__ledf2+0x74>
    c4dc:	58bff31e 	bne	r11,r2,c4ac <__ledf2+0x74>
    c4e0:	1a3ff216 	blt	r3,r8,c4ac <__ledf2+0x74>
    c4e4:	40c00416 	blt	r8,r3,c4f8 <__ledf2+0xc0>
    c4e8:	397ff036 	bltu	r7,r5,c4ac <__ledf2+0x74>
    c4ec:	29c0021e 	bne	r5,r7,c4f8 <__ledf2+0xc0>
    c4f0:	313fee36 	bltu	r6,r4,c4ac <__ledf2+0x74>
    c4f4:	21800a2e 	bgeu	r4,r6,c520 <__ledf2+0xe8>
    c4f8:	583fe426 	beq	r11,zero,c48c <__ledf2+0x54>
    c4fc:	5805883a 	mov	r2,r11
    c500:	f800283a 	ret
    c504:	403fe81e 	bne	r8,zero,c4a8 <__ledf2+0x70>
    c508:	103fea1e 	bne	r2,zero,c4b4 <__ledf2+0x7c>
    c50c:	003fdf06 	br	c48c <__ledf2+0x54>
    c510:	0005883a 	mov	r2,zero
    c514:	403fe726 	beq	r8,zero,c4b4 <__ledf2+0x7c>
    c518:	003fe406 	br	c4ac <__ledf2+0x74>
    c51c:	58bfe31e 	bne	r11,r2,c4ac <__ledf2+0x74>
    c520:	0005883a 	mov	r2,zero
    c524:	f800283a 	ret
    c528:	58bfef26 	beq	r11,r2,c4e8 <__ledf2+0xb0>
    c52c:	003fdf06 	br	c4ac <__ledf2+0x74>

0000c530 <__muldf3>:
    c530:	deffef04 	addi	sp,sp,-68
    c534:	2804d53a 	srli	r2,r5,20
    c538:	ddc00e15 	stw	r23,56(sp)
    c53c:	282ed7fa 	srli	r23,r5,31
    c540:	00c00434 	movhi	r3,16
    c544:	df000f15 	stw	fp,60(sp)
    c548:	dc400815 	stw	r17,32(sp)
    c54c:	dc000715 	stw	r16,28(sp)
    c550:	18ffffc4 	addi	r3,r3,-1
    c554:	dfc01015 	stw	ra,64(sp)
    c558:	dd800d15 	stw	r22,52(sp)
    c55c:	dd400c15 	stw	r21,48(sp)
    c560:	dd000b15 	stw	r20,44(sp)
    c564:	dcc00a15 	stw	r19,40(sp)
    c568:	dc800915 	stw	r18,36(sp)
    c56c:	1081ffcc 	andi	r2,r2,2047
    c570:	2021883a 	mov	r16,r4
    c574:	3039883a 	mov	fp,r6
    c578:	28e2703a 	and	r17,r5,r3
    c57c:	b811883a 	mov	r8,r23
    c580:	10009226 	beq	r2,zero,c7cc <__muldf3+0x29c>
    c584:	10c1ffe0 	cmpeqi	r3,r2,2047
    c588:	1800a71e 	bne	r3,zero,c828 <__muldf3+0x2f8>
    c58c:	882290fa 	slli	r17,r17,3
    c590:	2006d77a 	srli	r3,r4,29
    c594:	202690fa 	slli	r19,r4,3
    c598:	157f0044 	addi	r21,r2,-1023
    c59c:	1c62b03a 	or	r17,r3,r17
    c5a0:	8c402034 	orhi	r17,r17,128
    c5a4:	0029883a 	mov	r20,zero
    c5a8:	000d883a 	mov	r6,zero
    c5ac:	3804d53a 	srli	r2,r7,20
    c5b0:	04000434 	movhi	r16,16
    c5b4:	843fffc4 	addi	r16,r16,-1
    c5b8:	1081ffcc 	andi	r2,r2,2047
    c5bc:	380ad7fa 	srli	r5,r7,31
    c5c0:	e025883a 	mov	r18,fp
    c5c4:	3c20703a 	and	r16,r7,r16
    c5c8:	10006526 	beq	r2,zero,c760 <__muldf3+0x230>
    c5cc:	10c1ffe0 	cmpeqi	r3,r2,2047
    c5d0:	1800291e 	bne	r3,zero,c678 <__muldf3+0x148>
    c5d4:	e006d77a 	srli	r3,fp,29
    c5d8:	802090fa 	slli	r16,r16,3
    c5dc:	10bf0044 	addi	r2,r2,-1023
    c5e0:	e02490fa 	slli	r18,fp,3
    c5e4:	1c20b03a 	or	r16,r3,r16
    c5e8:	1547883a 	add	r3,r2,r21
    c5ec:	a08002c8 	cmpgei	r2,r20,11
    c5f0:	84002034 	orhi	r16,r16,128
    c5f4:	0009883a 	mov	r4,zero
    c5f8:	1d400044 	addi	r21,r3,1
    c5fc:	10002c1e 	bne	r2,zero,c6b0 <__muldf3+0x180>
    c600:	2dd0f03a 	xor	r8,r5,r23
    c604:	a08000c8 	cmpgei	r2,r20,3
    c608:	1000251e 	bne	r2,zero,c6a0 <__muldf3+0x170>
    c60c:	a53fffc4 	addi	r20,r20,-1
    c610:	a50000a8 	cmpgeui	r20,r20,2
    c614:	a000ce1e 	bne	r20,zero,c950 <__muldf3+0x420>
    c618:	208000a0 	cmpeqi	r2,r4,2
    c61c:	1000891e 	bne	r2,zero,c844 <__muldf3+0x314>
    c620:	21000060 	cmpeqi	r4,r4,1
    c624:	20002b26 	beq	r4,zero,c6d4 <__muldf3+0x1a4>
    c628:	0009883a 	mov	r4,zero
    c62c:	0021883a 	mov	r16,zero
    c630:	0027883a 	mov	r19,zero
    c634:	2006953a 	slli	r3,r4,20
    c638:	401097fa 	slli	r8,r8,31
    c63c:	9805883a 	mov	r2,r19
    c640:	1c06b03a 	or	r3,r3,r16
    c644:	1a06b03a 	or	r3,r3,r8
    c648:	dfc01017 	ldw	ra,64(sp)
    c64c:	df000f17 	ldw	fp,60(sp)
    c650:	ddc00e17 	ldw	r23,56(sp)
    c654:	dd800d17 	ldw	r22,52(sp)
    c658:	dd400c17 	ldw	r21,48(sp)
    c65c:	dd000b17 	ldw	r20,44(sp)
    c660:	dcc00a17 	ldw	r19,40(sp)
    c664:	dc800917 	ldw	r18,36(sp)
    c668:	dc400817 	ldw	r17,32(sp)
    c66c:	dc000717 	ldw	r16,28(sp)
    c670:	dec01104 	addi	sp,sp,68
    c674:	f800283a 	ret
    c678:	8704b03a 	or	r2,r16,fp
    c67c:	a8c1ffc4 	addi	r3,r21,2047
    c680:	10007a26 	beq	r2,zero,c86c <__muldf3+0x33c>
    c684:	a50000d4 	ori	r20,r20,3
    c688:	a08002c8 	cmpgei	r2,r20,11
    c68c:	2deef03a 	xor	r23,r5,r23
    c690:	ad420004 	addi	r21,r21,2048
    c694:	10019c1e 	bne	r2,zero,cd08 <__muldf3+0x7d8>
    c698:	b811883a 	mov	r8,r23
    c69c:	010000c4 	movi	r4,3
    c6a0:	00800044 	movi	r2,1
    c6a4:	1504983a 	sll	r2,r2,r20
    c6a8:	11c14c0c 	andi	r7,r2,1328
    c6ac:	38002326 	beq	r7,zero,c73c <__muldf3+0x20c>
    c6b0:	308000a0 	cmpeqi	r2,r6,2
    c6b4:	1000631e 	bne	r2,zero,c844 <__muldf3+0x314>
    c6b8:	308000e0 	cmpeqi	r2,r6,3
    c6bc:	1001571e 	bne	r2,zero,cc1c <__muldf3+0x6ec>
    c6c0:	3009883a 	mov	r4,r6
    c6c4:	21000060 	cmpeqi	r4,r4,1
    c6c8:	8821883a 	mov	r16,r17
    c6cc:	9825883a 	mov	r18,r19
    c6d0:	203fd51e 	bne	r4,zero,c628 <__muldf3+0xf8>
    c6d4:	a900ffc4 	addi	r4,r21,1023
    c6d8:	0100800e 	bge	zero,r4,c8dc <__muldf3+0x3ac>
    c6dc:	908001cc 	andi	r2,r18,7
    c6e0:	10000726 	beq	r2,zero,c700 <__muldf3+0x1d0>
    c6e4:	908003cc 	andi	r2,r18,15
    c6e8:	10800120 	cmpeqi	r2,r2,4
    c6ec:	1000041e 	bne	r2,zero,c700 <__muldf3+0x1d0>
    c6f0:	90800104 	addi	r2,r18,4
    c6f4:	14a5803a 	cmpltu	r18,r2,r18
    c6f8:	84a1883a 	add	r16,r16,r18
    c6fc:	1025883a 	mov	r18,r2
    c700:	8080402c 	andhi	r2,r16,256
    c704:	10000426 	beq	r2,zero,c718 <__muldf3+0x1e8>
    c708:	00bfc034 	movhi	r2,65280
    c70c:	10bfffc4 	addi	r2,r2,-1
    c710:	80a0703a 	and	r16,r16,r2
    c714:	a9010004 	addi	r4,r21,1024
    c718:	2081ffc8 	cmpgei	r2,r4,2047
    c71c:	1000491e 	bne	r2,zero,c844 <__muldf3+0x314>
    c720:	8026977a 	slli	r19,r16,29
    c724:	9024d0fa 	srli	r18,r18,3
    c728:	8020927a 	slli	r16,r16,9
    c72c:	2101ffcc 	andi	r4,r4,2047
    c730:	9ca6b03a 	or	r19,r19,r18
    c734:	8020d33a 	srli	r16,r16,12
    c738:	003fbe06 	br	c634 <__muldf3+0x104>
    c73c:	1180900c 	andi	r6,r2,576
    c740:	3000441e 	bne	r6,zero,c854 <__muldf3+0x324>
    c744:	1080220c 	andi	r2,r2,136
    c748:	10008126 	beq	r2,zero,c950 <__muldf3+0x420>
    c74c:	2811883a 	mov	r8,r5
    c750:	8023883a 	mov	r17,r16
    c754:	9027883a 	mov	r19,r18
    c758:	200d883a 	mov	r6,r4
    c75c:	003fd406 	br	c6b0 <__muldf3+0x180>
    c760:	8704b03a 	or	r2,r16,fp
    c764:	10005426 	beq	r2,zero,c8b8 <__muldf3+0x388>
    c768:	d9400215 	stw	r5,8(sp)
    c76c:	da000115 	stw	r8,4(sp)
    c770:	d9800015 	stw	r6,0(sp)
    c774:	80013926 	beq	r16,zero,cc5c <__muldf3+0x72c>
    c778:	8009883a 	mov	r4,r16
    c77c:	000d8f00 	call	d8f0 <__clzsi2>
    c780:	d9800017 	ldw	r6,0(sp)
    c784:	da000117 	ldw	r8,4(sp)
    c788:	d9400217 	ldw	r5,8(sp)
    c78c:	1007883a 	mov	r3,r2
    c790:	113ffd44 	addi	r4,r2,-11
    c794:	00800744 	movi	r2,29
    c798:	1cbffe04 	addi	r18,r3,-8
    c79c:	1105c83a 	sub	r2,r2,r4
    c7a0:	84a0983a 	sll	r16,r16,r18
    c7a4:	e084d83a 	srl	r2,fp,r2
    c7a8:	e4a4983a 	sll	r18,fp,r18
    c7ac:	1420b03a 	or	r16,r2,r16
    c7b0:	a8c7c83a 	sub	r3,r21,r3
    c7b4:	18ff0344 	addi	r3,r3,-1011
    c7b8:	a08002c8 	cmpgei	r2,r20,11
    c7bc:	0009883a 	mov	r4,zero
    c7c0:	1d400044 	addi	r21,r3,1
    c7c4:	103f8e26 	beq	r2,zero,c600 <__muldf3+0xd0>
    c7c8:	003fb906 	br	c6b0 <__muldf3+0x180>
    c7cc:	2466b03a 	or	r19,r4,r17
    c7d0:	98003426 	beq	r19,zero,c8a4 <__muldf3+0x374>
    c7d4:	d9c00115 	stw	r7,4(sp)
    c7d8:	da000015 	stw	r8,0(sp)
    c7dc:	88011426 	beq	r17,zero,cc30 <__muldf3+0x700>
    c7e0:	8809883a 	mov	r4,r17
    c7e4:	000d8f00 	call	d8f0 <__clzsi2>
    c7e8:	da000017 	ldw	r8,0(sp)
    c7ec:	d9c00117 	ldw	r7,4(sp)
    c7f0:	1009883a 	mov	r4,r2
    c7f4:	117ffd44 	addi	r5,r2,-11
    c7f8:	00c00744 	movi	r3,29
    c7fc:	24fffe04 	addi	r19,r4,-8
    c800:	1947c83a 	sub	r3,r3,r5
    c804:	8ce2983a 	sll	r17,r17,r19
    c808:	80c6d83a 	srl	r3,r16,r3
    c80c:	84e6983a 	sll	r19,r16,r19
    c810:	1c62b03a 	or	r17,r3,r17
    c814:	00bf0344 	movi	r2,-1011
    c818:	112bc83a 	sub	r21,r2,r4
    c81c:	0029883a 	mov	r20,zero
    c820:	000d883a 	mov	r6,zero
    c824:	003f6106 	br	c5ac <__muldf3+0x7c>
    c828:	2466b03a 	or	r19,r4,r17
    c82c:	9800181e 	bne	r19,zero,c890 <__muldf3+0x360>
    c830:	0023883a 	mov	r17,zero
    c834:	05000204 	movi	r20,8
    c838:	0541ffc4 	movi	r21,2047
    c83c:	01800084 	movi	r6,2
    c840:	003f5a06 	br	c5ac <__muldf3+0x7c>
    c844:	0101ffc4 	movi	r4,2047
    c848:	0021883a 	mov	r16,zero
    c84c:	0027883a 	mov	r19,zero
    c850:	003f7806 	br	c634 <__muldf3+0x104>
    c854:	04000434 	movhi	r16,16
    c858:	0011883a 	mov	r8,zero
    c85c:	843fffc4 	addi	r16,r16,-1
    c860:	04ffffc4 	movi	r19,-1
    c864:	0101ffc4 	movi	r4,2047
    c868:	003f7206 	br	c634 <__muldf3+0x104>
    c86c:	a5000094 	ori	r20,r20,2
    c870:	a08002c8 	cmpgei	r2,r20,11
    c874:	ad420004 	addi	r21,r21,2048
    c878:	103f8d1e 	bne	r2,zero,c6b0 <__muldf3+0x180>
    c87c:	2dd0f03a 	xor	r8,r5,r23
    c880:	0025883a 	mov	r18,zero
    c884:	0021883a 	mov	r16,zero
    c888:	01000084 	movi	r4,2
    c88c:	003f5d06 	br	c604 <__muldf3+0xd4>
    c890:	2027883a 	mov	r19,r4
    c894:	05000304 	movi	r20,12
    c898:	0541ffc4 	movi	r21,2047
    c89c:	018000c4 	movi	r6,3
    c8a0:	003f4206 	br	c5ac <__muldf3+0x7c>
    c8a4:	0023883a 	mov	r17,zero
    c8a8:	05000104 	movi	r20,4
    c8ac:	002b883a 	mov	r21,zero
    c8b0:	01800044 	movi	r6,1
    c8b4:	003f3d06 	br	c5ac <__muldf3+0x7c>
    c8b8:	a5000054 	ori	r20,r20,1
    c8bc:	a807883a 	mov	r3,r21
    c8c0:	a08002c8 	cmpgei	r2,r20,11
    c8c4:	0021883a 	mov	r16,zero
    c8c8:	0025883a 	mov	r18,zero
    c8cc:	01000044 	movi	r4,1
    c8d0:	1d400044 	addi	r21,r3,1
    c8d4:	103f4a26 	beq	r2,zero,c600 <__muldf3+0xd0>
    c8d8:	003f7506 	br	c6b0 <__muldf3+0x180>
    c8dc:	00c00044 	movi	r3,1
    c8e0:	1907c83a 	sub	r3,r3,r4
    c8e4:	18800e48 	cmpgei	r2,r3,57
    c8e8:	103f4f1e 	bne	r2,zero,c628 <__muldf3+0xf8>
    c8ec:	18800808 	cmpgei	r2,r3,32
    c8f0:	1000ea1e 	bne	r2,zero,cc9c <__muldf3+0x76c>
    c8f4:	ad410784 	addi	r21,r21,1054
    c8f8:	90c4d83a 	srl	r2,r18,r3
    c8fc:	8566983a 	sll	r19,r16,r21
    c900:	9552983a 	sll	r9,r18,r21
    c904:	80c6d83a 	srl	r3,r16,r3
    c908:	98a6b03a 	or	r19,r19,r2
    c90c:	4812c03a 	cmpne	r9,r9,zero
    c910:	9a66b03a 	or	r19,r19,r9
    c914:	988001cc 	andi	r2,r19,7
    c918:	10000726 	beq	r2,zero,c938 <__muldf3+0x408>
    c91c:	988003cc 	andi	r2,r19,15
    c920:	10800120 	cmpeqi	r2,r2,4
    c924:	1000041e 	bne	r2,zero,c938 <__muldf3+0x408>
    c928:	98800104 	addi	r2,r19,4
    c92c:	14e7803a 	cmpltu	r19,r2,r19
    c930:	1cc7883a 	add	r3,r3,r19
    c934:	1027883a 	mov	r19,r2
    c938:	1880202c 	andhi	r2,r3,128
    c93c:	1000ee26 	beq	r2,zero,ccf8 <__muldf3+0x7c8>
    c940:	01000044 	movi	r4,1
    c944:	0021883a 	mov	r16,zero
    c948:	0027883a 	mov	r19,zero
    c94c:	003f3906 	br	c634 <__muldf3+0x104>
    c950:	9828d43a 	srli	r20,r19,16
    c954:	973fffcc 	andi	fp,r18,65535
    c958:	9cffffcc 	andi	r19,r19,65535
    c95c:	980b883a 	mov	r5,r19
    c960:	e009883a 	mov	r4,fp
    c964:	d8c00215 	stw	r3,8(sp)
    c968:	da000115 	stw	r8,4(sp)
    c96c:	9024d43a 	srli	r18,r18,16
    c970:	000b0900 	call	b090 <__mulsi3>
    c974:	e00b883a 	mov	r5,fp
    c978:	a009883a 	mov	r4,r20
    c97c:	102d883a 	mov	r22,r2
    c980:	000b0900 	call	b090 <__mulsi3>
    c984:	900b883a 	mov	r5,r18
    c988:	a009883a 	mov	r4,r20
    c98c:	102f883a 	mov	r23,r2
    c990:	000b0900 	call	b090 <__mulsi3>
    c994:	980b883a 	mov	r5,r19
    c998:	9009883a 	mov	r4,r18
    c99c:	d8800015 	stw	r2,0(sp)
    c9a0:	000b0900 	call	b090 <__mulsi3>
    c9a4:	b00cd43a 	srli	r6,r22,16
    c9a8:	15c5883a 	add	r2,r2,r23
    c9ac:	da000117 	ldw	r8,4(sp)
    c9b0:	308d883a 	add	r6,r6,r2
    c9b4:	d8c00217 	ldw	r3,8(sp)
    c9b8:	35c0042e 	bgeu	r6,r23,c9cc <__muldf3+0x49c>
    c9bc:	d9000017 	ldw	r4,0(sp)
    c9c0:	00800074 	movhi	r2,1
    c9c4:	2085883a 	add	r2,r4,r2
    c9c8:	d8800015 	stw	r2,0(sp)
    c9cc:	3004943a 	slli	r2,r6,16
    c9d0:	d8c00615 	stw	r3,24(sp)
    c9d4:	3006d43a 	srli	r3,r6,16
    c9d8:	85ffffcc 	andi	r23,r16,65535
    c9dc:	b5bfffcc 	andi	r22,r22,65535
    c9e0:	980b883a 	mov	r5,r19
    c9e4:	b809883a 	mov	r4,r23
    c9e8:	1585883a 	add	r2,r2,r22
    c9ec:	da000515 	stw	r8,20(sp)
    c9f0:	d8c00115 	stw	r3,4(sp)
    c9f4:	8020d43a 	srli	r16,r16,16
    c9f8:	d8800215 	stw	r2,8(sp)
    c9fc:	000b0900 	call	b090 <__mulsi3>
    ca00:	a009883a 	mov	r4,r20
    ca04:	b80b883a 	mov	r5,r23
    ca08:	d8800415 	stw	r2,16(sp)
    ca0c:	000b0900 	call	b090 <__mulsi3>
    ca10:	a009883a 	mov	r4,r20
    ca14:	800b883a 	mov	r5,r16
    ca18:	1029883a 	mov	r20,r2
    ca1c:	000b0900 	call	b090 <__mulsi3>
    ca20:	980b883a 	mov	r5,r19
    ca24:	8009883a 	mov	r4,r16
    ca28:	d8800315 	stw	r2,12(sp)
    ca2c:	000b0900 	call	b090 <__mulsi3>
    ca30:	d9800417 	ldw	r6,16(sp)
    ca34:	1505883a 	add	r2,r2,r20
    ca38:	d9c00317 	ldw	r7,12(sp)
    ca3c:	3026d43a 	srli	r19,r6,16
    ca40:	da000517 	ldw	r8,20(sp)
    ca44:	d8c00617 	ldw	r3,24(sp)
    ca48:	98a7883a 	add	r19,r19,r2
    ca4c:	9d00022e 	bgeu	r19,r20,ca58 <__muldf3+0x528>
    ca50:	00800074 	movhi	r2,1
    ca54:	388f883a 	add	r7,r7,r2
    ca58:	9828d43a 	srli	r20,r19,16
    ca5c:	9826943a 	slli	r19,r19,16
    ca60:	882cd43a 	srli	r22,r17,16
    ca64:	8c7fffcc 	andi	r17,r17,65535
    ca68:	31bfffcc 	andi	r6,r6,65535
    ca6c:	e009883a 	mov	r4,fp
    ca70:	880b883a 	mov	r5,r17
    ca74:	99a7883a 	add	r19,r19,r6
    ca78:	d8c00615 	stw	r3,24(sp)
    ca7c:	da000515 	stw	r8,20(sp)
    ca80:	a1e9883a 	add	r20,r20,r7
    ca84:	000b0900 	call	b090 <__mulsi3>
    ca88:	e00b883a 	mov	r5,fp
    ca8c:	b009883a 	mov	r4,r22
    ca90:	d8800415 	stw	r2,16(sp)
    ca94:	000b0900 	call	b090 <__mulsi3>
    ca98:	b00b883a 	mov	r5,r22
    ca9c:	9009883a 	mov	r4,r18
    caa0:	d8800315 	stw	r2,12(sp)
    caa4:	000b0900 	call	b090 <__mulsi3>
    caa8:	9009883a 	mov	r4,r18
    caac:	880b883a 	mov	r5,r17
    cab0:	1039883a 	mov	fp,r2
    cab4:	000b0900 	call	b090 <__mulsi3>
    cab8:	d9c00417 	ldw	r7,16(sp)
    cabc:	dac00317 	ldw	r11,12(sp)
    cac0:	da000517 	ldw	r8,20(sp)
    cac4:	380cd43a 	srli	r6,r7,16
    cac8:	12c9883a 	add	r4,r2,r11
    cacc:	d8800117 	ldw	r2,4(sp)
    cad0:	310d883a 	add	r6,r6,r4
    cad4:	d8c00617 	ldw	r3,24(sp)
    cad8:	14d5883a 	add	r10,r2,r19
    cadc:	32c0022e 	bgeu	r6,r11,cae8 <__muldf3+0x5b8>
    cae0:	00800074 	movhi	r2,1
    cae4:	e0b9883a 	add	fp,fp,r2
    cae8:	3024d43a 	srli	r18,r6,16
    caec:	300c943a 	slli	r6,r6,16
    caf0:	39ffffcc 	andi	r7,r7,65535
    caf4:	880b883a 	mov	r5,r17
    caf8:	b809883a 	mov	r4,r23
    cafc:	d8c00415 	stw	r3,16(sp)
    cb00:	da000315 	stw	r8,12(sp)
    cb04:	da800115 	stw	r10,4(sp)
    cb08:	9725883a 	add	r18,r18,fp
    cb0c:	31f9883a 	add	fp,r6,r7
    cb10:	000b0900 	call	b090 <__mulsi3>
    cb14:	b80b883a 	mov	r5,r23
    cb18:	b009883a 	mov	r4,r22
    cb1c:	102f883a 	mov	r23,r2
    cb20:	000b0900 	call	b090 <__mulsi3>
    cb24:	b00b883a 	mov	r5,r22
    cb28:	8009883a 	mov	r4,r16
    cb2c:	102d883a 	mov	r22,r2
    cb30:	000b0900 	call	b090 <__mulsi3>
    cb34:	880b883a 	mov	r5,r17
    cb38:	8009883a 	mov	r4,r16
    cb3c:	1023883a 	mov	r17,r2
    cb40:	000b0900 	call	b090 <__mulsi3>
    cb44:	b80ed43a 	srli	r7,r23,16
    cb48:	1585883a 	add	r2,r2,r22
    cb4c:	da800117 	ldw	r10,4(sp)
    cb50:	388f883a 	add	r7,r7,r2
    cb54:	da000317 	ldw	r8,12(sp)
    cb58:	d8c00417 	ldw	r3,16(sp)
    cb5c:	3d80022e 	bgeu	r7,r22,cb68 <__muldf3+0x638>
    cb60:	00800074 	movhi	r2,1
    cb64:	88a3883a 	add	r17,r17,r2
    cb68:	3808943a 	slli	r4,r7,16
    cb6c:	d8800017 	ldw	r2,0(sp)
    cb70:	bdffffcc 	andi	r23,r23,65535
    cb74:	25c9883a 	add	r4,r4,r23
    cb78:	508b883a 	add	r5,r10,r2
    cb7c:	2ce7803a 	cmpltu	r19,r5,r19
    cb80:	2509883a 	add	r4,r4,r20
    cb84:	2f0b883a 	add	r5,r5,fp
    cb88:	24d7883a 	add	r11,r4,r19
    cb8c:	5c85883a 	add	r2,r11,r18
    cb90:	2f0d803a 	cmpltu	r6,r5,fp
    cb94:	380ed43a 	srli	r7,r7,16
    cb98:	1195883a 	add	r10,r2,r6
    cb9c:	2521803a 	cmpltu	r16,r4,r20
    cba0:	5cd7803a 	cmpltu	r11,r11,r19
    cba4:	1485803a 	cmpltu	r2,r2,r18
    cba8:	518d803a 	cmpltu	r6,r10,r6
    cbac:	82e0b03a 	or	r16,r16,r11
    cbb0:	1184b03a 	or	r2,r2,r6
    cbb4:	81e1883a 	add	r16,r16,r7
    cbb8:	2824927a 	slli	r18,r5,9
    cbbc:	d9000217 	ldw	r4,8(sp)
    cbc0:	80a1883a 	add	r16,r16,r2
    cbc4:	8461883a 	add	r16,r16,r17
    cbc8:	8020927a 	slli	r16,r16,9
    cbcc:	280ad5fa 	srli	r5,r5,23
    cbd0:	9124b03a 	or	r18,r18,r4
    cbd4:	500cd5fa 	srli	r6,r10,23
    cbd8:	5004927a 	slli	r2,r10,9
    cbdc:	9024c03a 	cmpne	r18,r18,zero
    cbe0:	9164b03a 	or	r18,r18,r5
    cbe4:	8100402c 	andhi	r4,r16,256
    cbe8:	90a4b03a 	or	r18,r18,r2
    cbec:	81a0b03a 	or	r16,r16,r6
    cbf0:	20002826 	beq	r4,zero,cc94 <__muldf3+0x764>
    cbf4:	9006d07a 	srli	r3,r18,1
    cbf8:	800497fa 	slli	r2,r16,31
    cbfc:	9480004c 	andi	r18,r18,1
    cc00:	1c86b03a 	or	r3,r3,r18
    cc04:	8020d07a 	srli	r16,r16,1
    cc08:	18a4b03a 	or	r18,r3,r2
    cc0c:	003eb106 	br	c6d4 <__muldf3+0x1a4>
    cc10:	2811883a 	mov	r8,r5
    cc14:	8023883a 	mov	r17,r16
    cc18:	e027883a 	mov	r19,fp
    cc1c:	00800434 	movhi	r2,16
    cc20:	8c000234 	orhi	r16,r17,8
    cc24:	10bfffc4 	addi	r2,r2,-1
    cc28:	80a0703a 	and	r16,r16,r2
    cc2c:	003f0d06 	br	c864 <__muldf3+0x334>
    cc30:	000d8f00 	call	d8f0 <__clzsi2>
    cc34:	11400544 	addi	r5,r2,21
    cc38:	28c00748 	cmpgei	r3,r5,29
    cc3c:	da000017 	ldw	r8,0(sp)
    cc40:	d9c00117 	ldw	r7,4(sp)
    cc44:	11000804 	addi	r4,r2,32
    cc48:	183eeb26 	beq	r3,zero,c7f8 <__muldf3+0x2c8>
    cc4c:	10bffe04 	addi	r2,r2,-8
    cc50:	80a2983a 	sll	r17,r16,r2
    cc54:	0027883a 	mov	r19,zero
    cc58:	003eee06 	br	c814 <__muldf3+0x2e4>
    cc5c:	e009883a 	mov	r4,fp
    cc60:	000d8f00 	call	d8f0 <__clzsi2>
    cc64:	11000544 	addi	r4,r2,21
    cc68:	21c00748 	cmpgei	r7,r4,29
    cc6c:	d9800017 	ldw	r6,0(sp)
    cc70:	da000117 	ldw	r8,4(sp)
    cc74:	d9400217 	ldw	r5,8(sp)
    cc78:	10c00804 	addi	r3,r2,32
    cc7c:	383ec526 	beq	r7,zero,c794 <__muldf3+0x264>
    cc80:	10bffe04 	addi	r2,r2,-8
    cc84:	e084983a 	sll	r2,fp,r2
    cc88:	0025883a 	mov	r18,zero
    cc8c:	1021883a 	mov	r16,r2
    cc90:	003ec706 	br	c7b0 <__muldf3+0x280>
    cc94:	182b883a 	mov	r21,r3
    cc98:	003e8e06 	br	c6d4 <__muldf3+0x1a4>
    cc9c:	00bff844 	movi	r2,-31
    cca0:	1109c83a 	sub	r4,r2,r4
    cca4:	18c00820 	cmpeqi	r3,r3,32
    cca8:	8108d83a 	srl	r4,r16,r4
    ccac:	1800031e 	bne	r3,zero,ccbc <__muldf3+0x78c>
    ccb0:	aa410f84 	addi	r9,r21,1086
    ccb4:	8252983a 	sll	r9,r16,r9
    ccb8:	9264b03a 	or	r18,r18,r9
    ccbc:	9026c03a 	cmpne	r19,r18,zero
    ccc0:	9926b03a 	or	r19,r19,r4
    ccc4:	98c001cc 	andi	r3,r19,7
    ccc8:	1800051e 	bne	r3,zero,cce0 <__muldf3+0x7b0>
    cccc:	0021883a 	mov	r16,zero
    ccd0:	9826d0fa 	srli	r19,r19,3
    ccd4:	0009883a 	mov	r4,zero
    ccd8:	98e6b03a 	or	r19,r19,r3
    ccdc:	003e5506 	br	c634 <__muldf3+0x104>
    cce0:	988003cc 	andi	r2,r19,15
    cce4:	10800120 	cmpeqi	r2,r2,4
    cce8:	1000111e 	bne	r2,zero,cd30 <__muldf3+0x800>
    ccec:	98800104 	addi	r2,r19,4
    ccf0:	14c7803a 	cmpltu	r3,r2,r19
    ccf4:	1027883a 	mov	r19,r2
    ccf8:	1820927a 	slli	r16,r3,9
    ccfc:	1806977a 	slli	r3,r3,29
    cd00:	8020d33a 	srli	r16,r16,12
    cd04:	003ff206 	br	ccd0 <__muldf3+0x7a0>
    cd08:	a50003e0 	cmpeqi	r20,r20,15
    cd0c:	a03fc026 	beq	r20,zero,cc10 <__muldf3+0x6e0>
    cd10:	8880022c 	andhi	r2,r17,8
    cd14:	103fc126 	beq	r2,zero,cc1c <__muldf3+0x6ec>
    cd18:	39c0022c 	andhi	r7,r7,8
    cd1c:	383fbf1e 	bne	r7,zero,cc1c <__muldf3+0x6ec>
    cd20:	84000234 	orhi	r16,r16,8
    cd24:	2811883a 	mov	r8,r5
    cd28:	e027883a 	mov	r19,fp
    cd2c:	003ecd06 	br	c864 <__muldf3+0x334>
    cd30:	0007883a 	mov	r3,zero
    cd34:	003ff006 	br	ccf8 <__muldf3+0x7c8>

0000cd38 <__subdf3>:
    cd38:	00800434 	movhi	r2,16
    cd3c:	3806d53a 	srli	r3,r7,20
    cd40:	10bfffc4 	addi	r2,r2,-1
    cd44:	defffa04 	addi	sp,sp,-24
    cd48:	2890703a 	and	r8,r5,r2
    cd4c:	3884703a 	and	r2,r7,r2
    cd50:	2812d7fa 	srli	r9,r5,31
    cd54:	401090fa 	slli	r8,r8,3
    cd58:	280ad53a 	srli	r5,r5,20
    cd5c:	100490fa 	slli	r2,r2,3
    cd60:	3016d77a 	srli	r11,r6,29
    cd64:	dc400115 	stw	r17,4(sp)
    cd68:	2022d77a 	srli	r17,r4,29
    cd6c:	18c1ffcc 	andi	r3,r3,2047
    cd70:	dd000415 	stw	r20,16(sp)
    cd74:	dcc00315 	stw	r19,12(sp)
    cd78:	dc000015 	stw	r16,0(sp)
    cd7c:	dfc00515 	stw	ra,20(sp)
    cd80:	dc800215 	stw	r18,8(sp)
    cd84:	1a81ffd8 	cmpnei	r10,r3,2047
    cd88:	2c01ffcc 	andi	r16,r5,2047
    cd8c:	380ed7fa 	srli	r7,r7,31
    cd90:	201890fa 	slli	r12,r4,3
    cd94:	301a90fa 	slli	r13,r6,3
    cd98:	4829883a 	mov	r20,r9
    cd9c:	4cc03fcc 	andi	r19,r9,255
    cda0:	8a22b03a 	or	r17,r17,r8
    cda4:	588ab03a 	or	r5,r11,r2
    cda8:	50007126 	beq	r10,zero,cf70 <__subdf3+0x238>
    cdac:	39c0005c 	xori	r7,r7,1
    cdb0:	3813883a 	mov	r9,r7
    cdb4:	3a803fcc 	andi	r10,r7,255
    cdb8:	80d1c83a 	sub	r8,r16,r3
    cdbc:	99c05526 	beq	r19,r7,cf14 <__subdf3+0x1dc>
    cdc0:	0202320e 	bge	zero,r8,d68c <__subdf3+0x954>
    cdc4:	18008426 	beq	r3,zero,cfd8 <__subdf3+0x2a0>
    cdc8:	8081ffe0 	cmpeqi	r2,r16,2047
    cdcc:	10011b1e 	bne	r2,zero,d23c <__subdf3+0x504>
    cdd0:	40800e48 	cmpgei	r2,r8,57
    cdd4:	1000881e 	bne	r2,zero,cff8 <__subdf3+0x2c0>
    cdd8:	29402034 	orhi	r5,r5,128
    cddc:	40800808 	cmpgei	r2,r8,32
    cde0:	1001451e 	bne	r2,zero,d2f8 <__subdf3+0x5c0>
    cde4:	00800804 	movi	r2,32
    cde8:	1205c83a 	sub	r2,r2,r8
    cdec:	28a4983a 	sll	r18,r5,r2
    cdf0:	6a06d83a 	srl	r3,r13,r8
    cdf4:	6884983a 	sll	r2,r13,r2
    cdf8:	2a10d83a 	srl	r8,r5,r8
    cdfc:	90e4b03a 	or	r18,r18,r3
    ce00:	1004c03a 	cmpne	r2,r2,zero
    ce04:	90a4b03a 	or	r18,r18,r2
    ce08:	8a23c83a 	sub	r17,r17,r8
    ce0c:	64a5c83a 	sub	r18,r12,r18
    ce10:	6485803a 	cmpltu	r2,r12,r18
    ce14:	88a3c83a 	sub	r17,r17,r2
    ce18:	8880202c 	andhi	r2,r17,128
    ce1c:	1000ae26 	beq	r2,zero,d0d8 <__subdf3+0x3a0>
    ce20:	00802034 	movhi	r2,128
    ce24:	10bfffc4 	addi	r2,r2,-1
    ce28:	88a2703a 	and	r17,r17,r2
    ce2c:	8800de26 	beq	r17,zero,d1a8 <__subdf3+0x470>
    ce30:	8809883a 	mov	r4,r17
    ce34:	000d8f00 	call	d8f0 <__clzsi2>
    ce38:	10fffe04 	addi	r3,r2,-8
    ce3c:	01000804 	movi	r4,32
    ce40:	20c5c83a 	sub	r2,r4,r3
    ce44:	9084d83a 	srl	r2,r18,r2
    ce48:	88e2983a 	sll	r17,r17,r3
    ce4c:	90e4983a 	sll	r18,r18,r3
    ce50:	1444b03a 	or	r2,r2,r17
    ce54:	1c010516 	blt	r3,r16,d26c <__subdf3+0x534>
    ce58:	1c07c83a 	sub	r3,r3,r16
    ce5c:	18c00044 	addi	r3,r3,1
    ce60:	20c9c83a 	sub	r4,r4,r3
    ce64:	910a983a 	sll	r5,r18,r4
    ce68:	90e2d83a 	srl	r17,r18,r3
    ce6c:	280ac03a 	cmpne	r5,r5,zero
    ce70:	1108983a 	sll	r4,r2,r4
    ce74:	894ab03a 	or	r5,r17,r5
    ce78:	10e2d83a 	srl	r17,r2,r3
    ce7c:	0021883a 	mov	r16,zero
    ce80:	2164b03a 	or	r18,r4,r5
    ce84:	908001cc 	andi	r2,r18,7
    ce88:	10000726 	beq	r2,zero,cea8 <__subdf3+0x170>
    ce8c:	908003cc 	andi	r2,r18,15
    ce90:	10800120 	cmpeqi	r2,r2,4
    ce94:	1000041e 	bne	r2,zero,cea8 <__subdf3+0x170>
    ce98:	90800104 	addi	r2,r18,4
    ce9c:	14a5803a 	cmpltu	r18,r2,r18
    cea0:	8ca3883a 	add	r17,r17,r18
    cea4:	1025883a 	mov	r18,r2
    cea8:	8880202c 	andhi	r2,r17,128
    ceac:	1000d726 	beq	r2,zero,d20c <__subdf3+0x4d4>
    ceb0:	8081ffa0 	cmpeqi	r2,r16,2046
    ceb4:	84000044 	addi	r16,r16,1
    ceb8:	10007c1e 	bne	r2,zero,d0ac <__subdf3+0x374>
    cebc:	013fe034 	movhi	r4,65408
    cec0:	213fffc4 	addi	r4,r4,-1
    cec4:	8908703a 	and	r4,r17,r4
    cec8:	2004977a 	slli	r2,r4,29
    cecc:	2008927a 	slli	r4,r4,9
    ced0:	9024d0fa 	srli	r18,r18,3
    ced4:	80c1ffcc 	andi	r3,r16,2047
    ced8:	2008d33a 	srli	r4,r4,12
    cedc:	1484b03a 	or	r2,r2,r18
    cee0:	9d00004c 	andi	r20,r19,1
    cee4:	1806953a 	slli	r3,r3,20
    cee8:	a02897fa 	slli	r20,r20,31
    ceec:	1906b03a 	or	r3,r3,r4
    cef0:	1d06b03a 	or	r3,r3,r20
    cef4:	dfc00517 	ldw	ra,20(sp)
    cef8:	dd000417 	ldw	r20,16(sp)
    cefc:	dcc00317 	ldw	r19,12(sp)
    cf00:	dc800217 	ldw	r18,8(sp)
    cf04:	dc400117 	ldw	r17,4(sp)
    cf08:	dc000017 	ldw	r16,0(sp)
    cf0c:	dec00604 	addi	sp,sp,24
    cf10:	f800283a 	ret
    cf14:	0201e60e 	bge	zero,r8,d6b0 <__subdf3+0x978>
    cf18:	18004d1e 	bne	r3,zero,d050 <__subdf3+0x318>
    cf1c:	2b44b03a 	or	r2,r5,r13
    cf20:	1000d026 	beq	r2,zero,d264 <__subdf3+0x52c>
    cf24:	823fffc4 	addi	r8,r16,-1
    cf28:	40006426 	beq	r8,zero,d0bc <__subdf3+0x384>
    cf2c:	8081ffe0 	cmpeqi	r2,r16,2047
    cf30:	10018e1e 	bne	r2,zero,d56c <__subdf3+0x834>
    cf34:	40800e48 	cmpgei	r2,r8,57
    cf38:	1000491e 	bne	r2,zero,d060 <__subdf3+0x328>
    cf3c:	40800808 	cmpgei	r2,r8,32
    cf40:	1001431e 	bne	r2,zero,d450 <__subdf3+0x718>
    cf44:	00800804 	movi	r2,32
    cf48:	1205c83a 	sub	r2,r2,r8
    cf4c:	28a4983a 	sll	r18,r5,r2
    cf50:	6a06d83a 	srl	r3,r13,r8
    cf54:	6884983a 	sll	r2,r13,r2
    cf58:	2a10d83a 	srl	r8,r5,r8
    cf5c:	90e4b03a 	or	r18,r18,r3
    cf60:	1004c03a 	cmpne	r2,r2,zero
    cf64:	90a4b03a 	or	r18,r18,r2
    cf68:	8a23883a 	add	r17,r17,r8
    cf6c:	00003d06 	br	d064 <__subdf3+0x32c>
    cf70:	2b44b03a 	or	r2,r5,r13
    cf74:	823e0044 	addi	r8,r16,-2047
    cf78:	1000211e 	bne	r2,zero,d000 <__subdf3+0x2c8>
    cf7c:	39c0005c 	xori	r7,r7,1
    cf80:	3813883a 	mov	r9,r7
    cf84:	3a803fcc 	andi	r10,r7,255
    cf88:	99c06b26 	beq	r19,r7,d138 <__subdf3+0x400>
    cf8c:	40005526 	beq	r8,zero,d0e4 <__subdf3+0x3ac>
    cf90:	8000201e 	bne	r16,zero,d014 <__subdf3+0x2dc>
    cf94:	0401ffc4 	movi	r16,2047
    cf98:	8b04b03a 	or	r2,r17,r12
    cf9c:	1000ae26 	beq	r2,zero,d258 <__subdf3+0x520>
    cfa0:	80bfffc4 	addi	r2,r16,-1
    cfa4:	10015e26 	beq	r2,zero,d520 <__subdf3+0x7e8>
    cfa8:	8401ffe0 	cmpeqi	r16,r16,2047
    cfac:	8001801e 	bne	r16,zero,d5b0 <__subdf3+0x878>
    cfb0:	11000e48 	cmpgei	r4,r2,57
    cfb4:	5027883a 	mov	r19,r10
    cfb8:	4829883a 	mov	r20,r9
    cfbc:	20011326 	beq	r4,zero,d40c <__subdf3+0x6d4>
    cfc0:	04800044 	movi	r18,1
    cfc4:	6ca5c83a 	sub	r18,r13,r18
    cfc8:	6c9b803a 	cmpltu	r13,r13,r18
    cfcc:	2b63c83a 	sub	r17,r5,r13
    cfd0:	1821883a 	mov	r16,r3
    cfd4:	003f9006 	br	ce18 <__subdf3+0xe0>
    cfd8:	2b44b03a 	or	r2,r5,r13
    cfdc:	1000a126 	beq	r2,zero,d264 <__subdf3+0x52c>
    cfe0:	823fffc4 	addi	r8,r16,-1
    cfe4:	4000fe26 	beq	r8,zero,d3e0 <__subdf3+0x6a8>
    cfe8:	8081ffe0 	cmpeqi	r2,r16,2047
    cfec:	1000931e 	bne	r2,zero,d23c <__subdf3+0x504>
    cff0:	40800e48 	cmpgei	r2,r8,57
    cff4:	103f7926 	beq	r2,zero,cddc <__subdf3+0xa4>
    cff8:	04800044 	movi	r18,1
    cffc:	003f8306 	br	ce0c <__subdf3+0xd4>
    d000:	3a803fcc 	andi	r10,r7,255
    d004:	99c04c26 	beq	r19,r7,d138 <__subdf3+0x400>
    d008:	40003626 	beq	r8,zero,d0e4 <__subdf3+0x3ac>
    d00c:	3813883a 	mov	r9,r7
    d010:	803fe026 	beq	r16,zero,cf94 <__subdf3+0x25c>
    d014:	2804977a 	slli	r2,r5,29
    d018:	00c80034 	movhi	r3,8192
    d01c:	18ffffc4 	addi	r3,r3,-1
    d020:	280ad0fa 	srli	r5,r5,3
    d024:	30c6703a 	and	r3,r6,r3
    d028:	10c4b03a 	or	r2,r2,r3
    d02c:	4829883a 	mov	r20,r9
    d030:	1146b03a 	or	r3,r2,r5
    d034:	18019126 	beq	r3,zero,d67c <__subdf3+0x944>
    d038:	00c00434 	movhi	r3,16
    d03c:	18ffffc4 	addi	r3,r3,-1
    d040:	29000234 	orhi	r4,r5,8
    d044:	20c8703a 	and	r4,r4,r3
    d048:	00c1ffc4 	movi	r3,2047
    d04c:	003fa506 	br	cee4 <__subdf3+0x1ac>
    d050:	8081ffe0 	cmpeqi	r2,r16,2047
    d054:	1000791e 	bne	r2,zero,d23c <__subdf3+0x504>
    d058:	40800e48 	cmpgei	r2,r8,57
    d05c:	1000b126 	beq	r2,zero,d324 <__subdf3+0x5ec>
    d060:	04800044 	movi	r18,1
    d064:	9325883a 	add	r18,r18,r12
    d068:	9305803a 	cmpltu	r2,r18,r12
    d06c:	88a3883a 	add	r17,r17,r2
    d070:	8880202c 	andhi	r2,r17,128
    d074:	10001826 	beq	r2,zero,d0d8 <__subdf3+0x3a0>
    d078:	84000044 	addi	r16,r16,1
    d07c:	8081ffe0 	cmpeqi	r2,r16,2047
    d080:	10000a1e 	bne	r2,zero,d0ac <__subdf3+0x374>
    d084:	00bfe034 	movhi	r2,65408
    d088:	10bfffc4 	addi	r2,r2,-1
    d08c:	9006d07a 	srli	r3,r18,1
    d090:	8884703a 	and	r2,r17,r2
    d094:	100897fa 	slli	r4,r2,31
    d098:	9480004c 	andi	r18,r18,1
    d09c:	1c86b03a 	or	r3,r3,r18
    d0a0:	1022d07a 	srli	r17,r2,1
    d0a4:	20e4b03a 	or	r18,r4,r3
    d0a8:	003f7606 	br	ce84 <__subdf3+0x14c>
    d0ac:	00c1ffc4 	movi	r3,2047
    d0b0:	0009883a 	mov	r4,zero
    d0b4:	0005883a 	mov	r2,zero
    d0b8:	003f8a06 	br	cee4 <__subdf3+0x1ac>
    d0bc:	6365883a 	add	r18,r12,r13
    d0c0:	894b883a 	add	r5,r17,r5
    d0c4:	9305803a 	cmpltu	r2,r18,r12
    d0c8:	28a3883a 	add	r17,r5,r2
    d0cc:	8880202c 	andhi	r2,r17,128
    d0d0:	1001241e 	bne	r2,zero,d564 <__subdf3+0x82c>
    d0d4:	04000044 	movi	r16,1
    d0d8:	908001cc 	andi	r2,r18,7
    d0dc:	103f6b1e 	bne	r2,zero,ce8c <__subdf3+0x154>
    d0e0:	00007906 	br	d2c8 <__subdf3+0x590>
    d0e4:	80800044 	addi	r2,r16,1
    d0e8:	1081ff8c 	andi	r2,r2,2046
    d0ec:	1000781e 	bne	r2,zero,d2d0 <__subdf3+0x598>
    d0f0:	2b44b03a 	or	r2,r5,r13
    d0f4:	8b06b03a 	or	r3,r17,r12
    d0f8:	8000af1e 	bne	r16,zero,d3b8 <__subdf3+0x680>
    d0fc:	18011026 	beq	r3,zero,d540 <__subdf3+0x808>
    d100:	1000de26 	beq	r2,zero,d47c <__subdf3+0x744>
    d104:	6365c83a 	sub	r18,r12,r13
    d108:	6485803a 	cmpltu	r2,r12,r18
    d10c:	8947c83a 	sub	r3,r17,r5
    d110:	1887c83a 	sub	r3,r3,r2
    d114:	1880202c 	andhi	r2,r3,128
    d118:	10014426 	beq	r2,zero,d62c <__subdf3+0x8f4>
    d11c:	6b25c83a 	sub	r18,r13,r12
    d120:	2c4bc83a 	sub	r5,r5,r17
    d124:	6c9b803a 	cmpltu	r13,r13,r18
    d128:	2b63c83a 	sub	r17,r5,r13
    d12c:	5029883a 	mov	r20,r10
    d130:	5027883a 	mov	r19,r10
    d134:	003f5306 	br	ce84 <__subdf3+0x14c>
    d138:	40005126 	beq	r8,zero,d280 <__subdf3+0x548>
    d13c:	80007b1e 	bne	r16,zero,d32c <__subdf3+0x5f4>
    d140:	0401ffc4 	movi	r16,2047
    d144:	8b04b03a 	or	r2,r17,r12
    d148:	10010f26 	beq	r2,zero,d588 <__subdf3+0x850>
    d14c:	80bfffc4 	addi	r2,r16,-1
    d150:	10012a26 	beq	r2,zero,d5fc <__subdf3+0x8c4>
    d154:	8401ffe0 	cmpeqi	r16,r16,2047
    d158:	80013d1e 	bne	r16,zero,d650 <__subdf3+0x918>
    d15c:	11000e48 	cmpgei	r4,r2,57
    d160:	2000cd1e 	bne	r4,zero,d498 <__subdf3+0x760>
    d164:	11000808 	cmpgei	r4,r2,32
    d168:	2001191e 	bne	r4,zero,d5d0 <__subdf3+0x898>
    d16c:	01000804 	movi	r4,32
    d170:	2089c83a 	sub	r4,r4,r2
    d174:	8924983a 	sll	r18,r17,r4
    d178:	608cd83a 	srl	r6,r12,r2
    d17c:	6108983a 	sll	r4,r12,r4
    d180:	8884d83a 	srl	r2,r17,r2
    d184:	91a4b03a 	or	r18,r18,r6
    d188:	2008c03a 	cmpne	r4,r4,zero
    d18c:	9124b03a 	or	r18,r18,r4
    d190:	288b883a 	add	r5,r5,r2
    d194:	9365883a 	add	r18,r18,r13
    d198:	935b803a 	cmpltu	r13,r18,r13
    d19c:	6963883a 	add	r17,r13,r5
    d1a0:	1821883a 	mov	r16,r3
    d1a4:	003fb206 	br	d070 <__subdf3+0x338>
    d1a8:	9009883a 	mov	r4,r18
    d1ac:	000d8f00 	call	d8f0 <__clzsi2>
    d1b0:	10c00604 	addi	r3,r2,24
    d1b4:	19000808 	cmpgei	r4,r3,32
    d1b8:	203f2026 	beq	r4,zero,ce3c <__subdf3+0x104>
    d1bc:	10bffe04 	addi	r2,r2,-8
    d1c0:	9084983a 	sll	r2,r18,r2
    d1c4:	1c006016 	blt	r3,r16,d348 <__subdf3+0x610>
    d1c8:	1c25c83a 	sub	r18,r3,r16
    d1cc:	90c00044 	addi	r3,r18,1
    d1d0:	19000808 	cmpgei	r4,r3,32
    d1d4:	20012526 	beq	r4,zero,d66c <__subdf3+0x934>
    d1d8:	94bff844 	addi	r18,r18,-31
    d1dc:	19000820 	cmpeqi	r4,r3,32
    d1e0:	14a4d83a 	srl	r18,r2,r18
    d1e4:	2000051e 	bne	r4,zero,d1fc <__subdf3+0x4c4>
    d1e8:	01001004 	movi	r4,64
    d1ec:	20c7c83a 	sub	r3,r4,r3
    d1f0:	10c4983a 	sll	r2,r2,r3
    d1f4:	1004c03a 	cmpne	r2,r2,zero
    d1f8:	90a4b03a 	or	r18,r18,r2
    d1fc:	908001cc 	andi	r2,r18,7
    d200:	0021883a 	mov	r16,zero
    d204:	103f211e 	bne	r2,zero,ce8c <__subdf3+0x154>
    d208:	00002f06 	br	d2c8 <__subdf3+0x590>
    d20c:	9004d0fa 	srli	r2,r18,3
    d210:	8808977a 	slli	r4,r17,29
    d214:	80c1ffe0 	cmpeqi	r3,r16,2047
    d218:	880ad0fa 	srli	r5,r17,3
    d21c:	2084b03a 	or	r2,r4,r2
    d220:	183f831e 	bne	r3,zero,d030 <__subdf3+0x2f8>
    d224:	01000434 	movhi	r4,16
    d228:	213fffc4 	addi	r4,r4,-1
    d22c:	2908703a 	and	r4,r5,r4
    d230:	80c1ffcc 	andi	r3,r16,2047
    d234:	003f2b06 	br	cee4 <__subdf3+0x1ac>
    d238:	1000a71e 	bne	r2,zero,d4d8 <__subdf3+0x7a0>
    d23c:	8806977a 	slli	r3,r17,29
    d240:	00880034 	movhi	r2,8192
    d244:	10bfffc4 	addi	r2,r2,-1
    d248:	2084703a 	and	r2,r4,r2
    d24c:	880ad0fa 	srli	r5,r17,3
    d250:	10c4b03a 	or	r2,r2,r3
    d254:	003f7606 	br	d030 <__subdf3+0x2f8>
    d258:	6819883a 	mov	r12,r13
    d25c:	2823883a 	mov	r17,r5
    d260:	4829883a 	mov	r20,r9
    d264:	6004d0fa 	srli	r2,r12,3
    d268:	003fe906 	br	d210 <__subdf3+0x4d8>
    d26c:	047fe034 	movhi	r17,65408
    d270:	8c7fffc4 	addi	r17,r17,-1
    d274:	80e1c83a 	sub	r16,r16,r3
    d278:	1462703a 	and	r17,r2,r17
    d27c:	003f0106 	br	ce84 <__subdf3+0x14c>
    d280:	80c00044 	addi	r3,r16,1
    d284:	1881ff8c 	andi	r2,r3,2046
    d288:	1000361e 	bne	r2,zero,d364 <__subdf3+0x62c>
    d28c:	8b04b03a 	or	r2,r17,r12
    d290:	80008e1e 	bne	r16,zero,d4cc <__subdf3+0x794>
    d294:	1000bf26 	beq	r2,zero,d594 <__subdf3+0x85c>
    d298:	2b44b03a 	or	r2,r5,r13
    d29c:	10007726 	beq	r2,zero,d47c <__subdf3+0x744>
    d2a0:	6365883a 	add	r18,r12,r13
    d2a4:	9305803a 	cmpltu	r2,r18,r12
    d2a8:	894b883a 	add	r5,r17,r5
    d2ac:	28a3883a 	add	r17,r5,r2
    d2b0:	8880202c 	andhi	r2,r17,128
    d2b4:	10000426 	beq	r2,zero,d2c8 <__subdf3+0x590>
    d2b8:	00bfe034 	movhi	r2,65408
    d2bc:	10bfffc4 	addi	r2,r2,-1
    d2c0:	88a2703a 	and	r17,r17,r2
    d2c4:	04000044 	movi	r16,1
    d2c8:	9019883a 	mov	r12,r18
    d2cc:	003fe506 	br	d264 <__subdf3+0x52c>
    d2d0:	6365c83a 	sub	r18,r12,r13
    d2d4:	6485803a 	cmpltu	r2,r12,r18
    d2d8:	8947c83a 	sub	r3,r17,r5
    d2dc:	1887c83a 	sub	r3,r3,r2
    d2e0:	1880202c 	andhi	r2,r3,128
    d2e4:	10002d1e 	bne	r2,zero,d39c <__subdf3+0x664>
    d2e8:	90c4b03a 	or	r2,r18,r3
    d2ec:	10005426 	beq	r2,zero,d440 <__subdf3+0x708>
    d2f0:	1823883a 	mov	r17,r3
    d2f4:	003ecd06 	br	ce2c <__subdf3+0xf4>
    d2f8:	40bff804 	addi	r2,r8,-32
    d2fc:	40c00820 	cmpeqi	r3,r8,32
    d300:	2884d83a 	srl	r2,r5,r2
    d304:	1800041e 	bne	r3,zero,d318 <__subdf3+0x5e0>
    d308:	00c01004 	movi	r3,64
    d30c:	1a07c83a 	sub	r3,r3,r8
    d310:	28c6983a 	sll	r3,r5,r3
    d314:	68dab03a 	or	r13,r13,r3
    d318:	6824c03a 	cmpne	r18,r13,zero
    d31c:	90a4b03a 	or	r18,r18,r2
    d320:	003eba06 	br	ce0c <__subdf3+0xd4>
    d324:	29402034 	orhi	r5,r5,128
    d328:	003f0406 	br	cf3c <__subdf3+0x204>
    d32c:	2804977a 	slli	r2,r5,29
    d330:	00c80034 	movhi	r3,8192
    d334:	18ffffc4 	addi	r3,r3,-1
    d338:	30c6703a 	and	r3,r6,r3
    d33c:	280ad0fa 	srli	r5,r5,3
    d340:	10c4b03a 	or	r2,r2,r3
    d344:	003f3a06 	br	d030 <__subdf3+0x2f8>
    d348:	017fe034 	movhi	r5,65408
    d34c:	297fffc4 	addi	r5,r5,-1
    d350:	114a703a 	and	r5,r2,r5
    d354:	2804977a 	slli	r2,r5,29
    d358:	80e1c83a 	sub	r16,r16,r3
    d35c:	280ad0fa 	srli	r5,r5,3
    d360:	003fb006 	br	d224 <__subdf3+0x4ec>
    d364:	1881ffe0 	cmpeqi	r2,r3,2047
    d368:	103f501e 	bne	r2,zero,d0ac <__subdf3+0x374>
    d36c:	6349883a 	add	r4,r12,r13
    d370:	894b883a 	add	r5,r17,r5
    d374:	2305803a 	cmpltu	r2,r4,r12
    d378:	2885883a 	add	r2,r5,r2
    d37c:	2008d07a 	srli	r4,r4,1
    d380:	102497fa 	slli	r18,r2,31
    d384:	1022d07a 	srli	r17,r2,1
    d388:	208001cc 	andi	r2,r4,7
    d38c:	9124b03a 	or	r18,r18,r4
    d390:	1821883a 	mov	r16,r3
    d394:	103ebd1e 	bne	r2,zero,ce8c <__subdf3+0x154>
    d398:	003fcb06 	br	d2c8 <__subdf3+0x590>
    d39c:	6b25c83a 	sub	r18,r13,r12
    d3a0:	2c4bc83a 	sub	r5,r5,r17
    d3a4:	6c9b803a 	cmpltu	r13,r13,r18
    d3a8:	2b63c83a 	sub	r17,r5,r13
    d3ac:	5029883a 	mov	r20,r10
    d3b0:	5027883a 	mov	r19,r10
    d3b4:	003e9d06 	br	ce2c <__subdf3+0xf4>
    d3b8:	183f9f1e 	bne	r3,zero,d238 <__subdf3+0x500>
    d3bc:	10009f26 	beq	r2,zero,d63c <__subdf3+0x904>
    d3c0:	2804977a 	slli	r2,r5,29
    d3c4:	00c80034 	movhi	r3,8192
    d3c8:	18ffffc4 	addi	r3,r3,-1
    d3cc:	30c6703a 	and	r3,r6,r3
    d3d0:	280ad0fa 	srli	r5,r5,3
    d3d4:	5029883a 	mov	r20,r10
    d3d8:	10c4b03a 	or	r2,r2,r3
    d3dc:	003f1406 	br	d030 <__subdf3+0x2f8>
    d3e0:	6365c83a 	sub	r18,r12,r13
    d3e4:	894bc83a 	sub	r5,r17,r5
    d3e8:	6485803a 	cmpltu	r2,r12,r18
    d3ec:	28a3c83a 	sub	r17,r5,r2
    d3f0:	04000044 	movi	r16,1
    d3f4:	003e8806 	br	ce18 <__subdf3+0xe0>
    d3f8:	11000e48 	cmpgei	r4,r2,57
    d3fc:	2000a81e 	bne	r4,zero,d6a0 <__subdf3+0x968>
    d400:	8c402034 	orhi	r17,r17,128
    d404:	5027883a 	mov	r19,r10
    d408:	3829883a 	mov	r20,r7
    d40c:	11000808 	cmpgei	r4,r2,32
    d410:	2000231e 	bne	r4,zero,d4a0 <__subdf3+0x768>
    d414:	01000804 	movi	r4,32
    d418:	2089c83a 	sub	r4,r4,r2
    d41c:	8924983a 	sll	r18,r17,r4
    d420:	608cd83a 	srl	r6,r12,r2
    d424:	6108983a 	sll	r4,r12,r4
    d428:	8884d83a 	srl	r2,r17,r2
    d42c:	91a4b03a 	or	r18,r18,r6
    d430:	2008c03a 	cmpne	r4,r4,zero
    d434:	9124b03a 	or	r18,r18,r4
    d438:	288bc83a 	sub	r5,r5,r2
    d43c:	003ee106 	br	cfc4 <__subdf3+0x28c>
    d440:	0029883a 	mov	r20,zero
    d444:	0007883a 	mov	r3,zero
    d448:	0009883a 	mov	r4,zero
    d44c:	003ea506 	br	cee4 <__subdf3+0x1ac>
    d450:	40bff804 	addi	r2,r8,-32
    d454:	40c00820 	cmpeqi	r3,r8,32
    d458:	2884d83a 	srl	r2,r5,r2
    d45c:	1800041e 	bne	r3,zero,d470 <__subdf3+0x738>
    d460:	00c01004 	movi	r3,64
    d464:	1a07c83a 	sub	r3,r3,r8
    d468:	28c6983a 	sll	r3,r5,r3
    d46c:	68dab03a 	or	r13,r13,r3
    d470:	6824c03a 	cmpne	r18,r13,zero
    d474:	90a4b03a 	or	r18,r18,r2
    d478:	003efa06 	br	d064 <__subdf3+0x32c>
    d47c:	8806977a 	slli	r3,r17,29
    d480:	00880034 	movhi	r2,8192
    d484:	10bfffc4 	addi	r2,r2,-1
    d488:	2084703a 	and	r2,r4,r2
    d48c:	880ad0fa 	srli	r5,r17,3
    d490:	10c4b03a 	or	r2,r2,r3
    d494:	003f6306 	br	d224 <__subdf3+0x4ec>
    d498:	04800044 	movi	r18,1
    d49c:	003f3d06 	br	d194 <__subdf3+0x45c>
    d4a0:	113ff804 	addi	r4,r2,-32
    d4a4:	11800820 	cmpeqi	r6,r2,32
    d4a8:	8908d83a 	srl	r4,r17,r4
    d4ac:	3000041e 	bne	r6,zero,d4c0 <__subdf3+0x788>
    d4b0:	01801004 	movi	r6,64
    d4b4:	3085c83a 	sub	r2,r6,r2
    d4b8:	8884983a 	sll	r2,r17,r2
    d4bc:	6098b03a 	or	r12,r12,r2
    d4c0:	6024c03a 	cmpne	r18,r12,zero
    d4c4:	9124b03a 	or	r18,r18,r4
    d4c8:	003ebe06 	br	cfc4 <__subdf3+0x28c>
    d4cc:	10005026 	beq	r2,zero,d610 <__subdf3+0x8d8>
    d4d0:	2b5ab03a 	or	r13,r5,r13
    d4d4:	683f5926 	beq	r13,zero,d23c <__subdf3+0x504>
    d4d8:	880ed0fa 	srli	r7,r17,3
    d4dc:	00c80034 	movhi	r3,8192
    d4e0:	8822977a 	slli	r17,r17,29
    d4e4:	18ffffc4 	addi	r3,r3,-1
    d4e8:	20c4703a 	and	r2,r4,r3
    d4ec:	3900022c 	andhi	r4,r7,8
    d4f0:	1444b03a 	or	r2,r2,r17
    d4f4:	20000826 	beq	r4,zero,d518 <__subdf3+0x7e0>
    d4f8:	2808d0fa 	srli	r4,r5,3
    d4fc:	2200022c 	andhi	r8,r4,8
    d500:	4000051e 	bne	r8,zero,d518 <__subdf3+0x7e0>
    d504:	2804977a 	slli	r2,r5,29
    d508:	30c6703a 	and	r3,r6,r3
    d50c:	5029883a 	mov	r20,r10
    d510:	1884b03a 	or	r2,r3,r2
    d514:	200f883a 	mov	r7,r4
    d518:	380b883a 	mov	r5,r7
    d51c:	003ec406 	br	d030 <__subdf3+0x2f8>
    d520:	6b25c83a 	sub	r18,r13,r12
    d524:	2c4bc83a 	sub	r5,r5,r17
    d528:	6c9b803a 	cmpltu	r13,r13,r18
    d52c:	2b63c83a 	sub	r17,r5,r13
    d530:	4829883a 	mov	r20,r9
    d534:	5027883a 	mov	r19,r10
    d538:	04000044 	movi	r16,1
    d53c:	003e3606 	br	ce18 <__subdf3+0xe0>
    d540:	103fbf26 	beq	r2,zero,d440 <__subdf3+0x708>
    d544:	2806977a 	slli	r3,r5,29
    d548:	00880034 	movhi	r2,8192
    d54c:	10bfffc4 	addi	r2,r2,-1
    d550:	3084703a 	and	r2,r6,r2
    d554:	280ad0fa 	srli	r5,r5,3
    d558:	5029883a 	mov	r20,r10
    d55c:	10c4b03a 	or	r2,r2,r3
    d560:	003f3006 	br	d224 <__subdf3+0x4ec>
    d564:	04000084 	movi	r16,2
    d568:	003ec606 	br	d084 <__subdf3+0x34c>
    d56c:	8804977a 	slli	r2,r17,29
    d570:	00c80034 	movhi	r3,8192
    d574:	18ffffc4 	addi	r3,r3,-1
    d578:	20c8703a 	and	r4,r4,r3
    d57c:	880ad0fa 	srli	r5,r17,3
    d580:	1104b03a 	or	r2,r2,r4
    d584:	003eaa06 	br	d030 <__subdf3+0x2f8>
    d588:	6819883a 	mov	r12,r13
    d58c:	2823883a 	mov	r17,r5
    d590:	003f3406 	br	d264 <__subdf3+0x52c>
    d594:	2806977a 	slli	r3,r5,29
    d598:	00880034 	movhi	r2,8192
    d59c:	10bfffc4 	addi	r2,r2,-1
    d5a0:	3084703a 	and	r2,r6,r2
    d5a4:	280ad0fa 	srli	r5,r5,3
    d5a8:	10c4b03a 	or	r2,r2,r3
    d5ac:	003f1d06 	br	d224 <__subdf3+0x4ec>
    d5b0:	2806977a 	slli	r3,r5,29
    d5b4:	00880034 	movhi	r2,8192
    d5b8:	10bfffc4 	addi	r2,r2,-1
    d5bc:	3084703a 	and	r2,r6,r2
    d5c0:	280ad0fa 	srli	r5,r5,3
    d5c4:	10c4b03a 	or	r2,r2,r3
    d5c8:	4829883a 	mov	r20,r9
    d5cc:	003e9806 	br	d030 <__subdf3+0x2f8>
    d5d0:	113ff804 	addi	r4,r2,-32
    d5d4:	11800820 	cmpeqi	r6,r2,32
    d5d8:	8908d83a 	srl	r4,r17,r4
    d5dc:	3000041e 	bne	r6,zero,d5f0 <__subdf3+0x8b8>
    d5e0:	01801004 	movi	r6,64
    d5e4:	3085c83a 	sub	r2,r6,r2
    d5e8:	8884983a 	sll	r2,r17,r2
    d5ec:	6098b03a 	or	r12,r12,r2
    d5f0:	6024c03a 	cmpne	r18,r12,zero
    d5f4:	9124b03a 	or	r18,r18,r4
    d5f8:	003ee606 	br	d194 <__subdf3+0x45c>
    d5fc:	6365883a 	add	r18,r12,r13
    d600:	894b883a 	add	r5,r17,r5
    d604:	935b803a 	cmpltu	r13,r18,r13
    d608:	2b63883a 	add	r17,r5,r13
    d60c:	003eaf06 	br	d0cc <__subdf3+0x394>
    d610:	2804977a 	slli	r2,r5,29
    d614:	00c80034 	movhi	r3,8192
    d618:	18ffffc4 	addi	r3,r3,-1
    d61c:	30cc703a 	and	r6,r6,r3
    d620:	280ad0fa 	srli	r5,r5,3
    d624:	3084b03a 	or	r2,r6,r2
    d628:	003e8106 	br	d030 <__subdf3+0x2f8>
    d62c:	90c4b03a 	or	r2,r18,r3
    d630:	103f8326 	beq	r2,zero,d440 <__subdf3+0x708>
    d634:	1823883a 	mov	r17,r3
    d638:	003f2306 	br	d2c8 <__subdf3+0x590>
    d63c:	01400434 	movhi	r5,16
    d640:	297fffc4 	addi	r5,r5,-1
    d644:	00bfffc4 	movi	r2,-1
    d648:	0029883a 	mov	r20,zero
    d64c:	003e7a06 	br	d038 <__subdf3+0x300>
    d650:	2806977a 	slli	r3,r5,29
    d654:	00880034 	movhi	r2,8192
    d658:	10bfffc4 	addi	r2,r2,-1
    d65c:	3084703a 	and	r2,r6,r2
    d660:	280ad0fa 	srli	r5,r5,3
    d664:	10c4b03a 	or	r2,r2,r3
    d668:	003e7106 	br	d030 <__subdf3+0x2f8>
    d66c:	01000804 	movi	r4,32
    d670:	20c9c83a 	sub	r4,r4,r3
    d674:	000b883a 	mov	r5,zero
    d678:	003dfd06 	br	ce70 <__subdf3+0x138>
    d67c:	0005883a 	mov	r2,zero
    d680:	00c1ffc4 	movi	r3,2047
    d684:	0009883a 	mov	r4,zero
    d688:	003e1606 	br	cee4 <__subdf3+0x1ac>
    d68c:	403e9526 	beq	r8,zero,d0e4 <__subdf3+0x3ac>
    d690:	1c05c83a 	sub	r2,r3,r16
    d694:	803f581e 	bne	r16,zero,d3f8 <__subdf3+0x6c0>
    d698:	1021883a 	mov	r16,r2
    d69c:	003e3e06 	br	cf98 <__subdf3+0x260>
    d6a0:	5027883a 	mov	r19,r10
    d6a4:	3829883a 	mov	r20,r7
    d6a8:	04800044 	movi	r18,1
    d6ac:	003e4506 	br	cfc4 <__subdf3+0x28c>
    d6b0:	403ef326 	beq	r8,zero,d280 <__subdf3+0x548>
    d6b4:	1c05c83a 	sub	r2,r3,r16
    d6b8:	8000021e 	bne	r16,zero,d6c4 <__subdf3+0x98c>
    d6bc:	1021883a 	mov	r16,r2
    d6c0:	003ea006 	br	d144 <__subdf3+0x40c>
    d6c4:	11000e48 	cmpgei	r4,r2,57
    d6c8:	203f731e 	bne	r4,zero,d498 <__subdf3+0x760>
    d6cc:	8c402034 	orhi	r17,r17,128
    d6d0:	003ea406 	br	d164 <__subdf3+0x42c>

0000d6d4 <__unorddf2>:
    d6d4:	2804d53a 	srli	r2,r5,20
    d6d8:	3806d53a 	srli	r3,r7,20
    d6dc:	02000434 	movhi	r8,16
    d6e0:	1081ffcc 	andi	r2,r2,2047
    d6e4:	423fffc4 	addi	r8,r8,-1
    d6e8:	1081ffd8 	cmpnei	r2,r2,2047
    d6ec:	2a0a703a 	and	r5,r5,r8
    d6f0:	3a0e703a 	and	r7,r7,r8
    d6f4:	18c1ffcc 	andi	r3,r3,2047
    d6f8:	10000426 	beq	r2,zero,d70c <__unorddf2+0x38>
    d6fc:	18c1ffd8 	cmpnei	r3,r3,2047
    d700:	18000626 	beq	r3,zero,d71c <__unorddf2+0x48>
    d704:	0005883a 	mov	r2,zero
    d708:	f800283a 	ret
    d70c:	290ab03a 	or	r5,r5,r4
    d710:	283ffa26 	beq	r5,zero,d6fc <__unorddf2+0x28>
    d714:	00800044 	movi	r2,1
    d718:	f800283a 	ret
    d71c:	398eb03a 	or	r7,r7,r6
    d720:	3804c03a 	cmpne	r2,r7,zero
    d724:	f800283a 	ret

0000d728 <__fixdfsi>:
    d728:	2804d53a 	srli	r2,r5,20
    d72c:	00c00434 	movhi	r3,16
    d730:	18ffffc4 	addi	r3,r3,-1
    d734:	1081ffcc 	andi	r2,r2,2047
    d738:	1180ffd0 	cmplti	r6,r2,1023
    d73c:	280ed7fa 	srli	r7,r5,31
    d740:	28ca703a 	and	r5,r5,r3
    d744:	3000061e 	bne	r6,zero,d760 <__fixdfsi+0x38>
    d748:	10c10790 	cmplti	r3,r2,1054
    d74c:	1800061e 	bne	r3,zero,d768 <__fixdfsi+0x40>
    d750:	00a00034 	movhi	r2,32768
    d754:	10bfffc4 	addi	r2,r2,-1
    d758:	3885883a 	add	r2,r7,r2
    d75c:	f800283a 	ret
    d760:	0005883a 	mov	r2,zero
    d764:	f800283a 	ret
    d768:	00c10cc4 	movi	r3,1075
    d76c:	1887c83a 	sub	r3,r3,r2
    d770:	19800808 	cmpgei	r6,r3,32
    d774:	29400434 	orhi	r5,r5,16
    d778:	3000071e 	bne	r6,zero,d798 <__fixdfsi+0x70>
    d77c:	10befb44 	addi	r2,r2,-1043
    d780:	2884983a 	sll	r2,r5,r2
    d784:	20c8d83a 	srl	r4,r4,r3
    d788:	1104b03a 	or	r2,r2,r4
    d78c:	383ff526 	beq	r7,zero,d764 <__fixdfsi+0x3c>
    d790:	0085c83a 	sub	r2,zero,r2
    d794:	f800283a 	ret
    d798:	00c104c4 	movi	r3,1043
    d79c:	1885c83a 	sub	r2,r3,r2
    d7a0:	2884d83a 	srl	r2,r5,r2
    d7a4:	003ff906 	br	d78c <__fixdfsi+0x64>

0000d7a8 <__floatsidf>:
    d7a8:	defffd04 	addi	sp,sp,-12
    d7ac:	dfc00215 	stw	ra,8(sp)
    d7b0:	dc400115 	stw	r17,4(sp)
    d7b4:	dc000015 	stw	r16,0(sp)
    d7b8:	20001326 	beq	r4,zero,d808 <__floatsidf+0x60>
    d7bc:	2022d7fa 	srli	r17,r4,31
    d7c0:	2021883a 	mov	r16,r4
    d7c4:	20002416 	blt	r4,zero,d858 <__floatsidf+0xb0>
    d7c8:	8009883a 	mov	r4,r16
    d7cc:	000d8f00 	call	d8f0 <__clzsi2>
    d7d0:	01010784 	movi	r4,1054
    d7d4:	2089c83a 	sub	r4,r4,r2
    d7d8:	10c002c8 	cmpgei	r3,r2,11
    d7dc:	2101ffcc 	andi	r4,r4,2047
    d7e0:	1800161e 	bne	r3,zero,d83c <__floatsidf+0x94>
    d7e4:	014002c4 	movi	r5,11
    d7e8:	288bc83a 	sub	r5,r5,r2
    d7ec:	814ad83a 	srl	r5,r16,r5
    d7f0:	00c00434 	movhi	r3,16
    d7f4:	10800544 	addi	r2,r2,21
    d7f8:	18ffffc4 	addi	r3,r3,-1
    d7fc:	8084983a 	sll	r2,r16,r2
    d800:	28ca703a 	and	r5,r5,r3
    d804:	00000406 	br	d818 <__floatsidf+0x70>
    d808:	0023883a 	mov	r17,zero
    d80c:	0009883a 	mov	r4,zero
    d810:	000b883a 	mov	r5,zero
    d814:	0005883a 	mov	r2,zero
    d818:	2008953a 	slli	r4,r4,20
    d81c:	880697fa 	slli	r3,r17,31
    d820:	2148b03a 	or	r4,r4,r5
    d824:	20c6b03a 	or	r3,r4,r3
    d828:	dfc00217 	ldw	ra,8(sp)
    d82c:	dc400117 	ldw	r17,4(sp)
    d830:	dc000017 	ldw	r16,0(sp)
    d834:	dec00304 	addi	sp,sp,12
    d838:	f800283a 	ret
    d83c:	10bffd44 	addi	r2,r2,-11
    d840:	808a983a 	sll	r5,r16,r2
    d844:	00800434 	movhi	r2,16
    d848:	10bfffc4 	addi	r2,r2,-1
    d84c:	288a703a 	and	r5,r5,r2
    d850:	0005883a 	mov	r2,zero
    d854:	003ff006 	br	d818 <__floatsidf+0x70>
    d858:	0121c83a 	sub	r16,zero,r4
    d85c:	003fda06 	br	d7c8 <__floatsidf+0x20>

0000d860 <__floatunsidf>:
    d860:	defffe04 	addi	sp,sp,-8
    d864:	dc000015 	stw	r16,0(sp)
    d868:	dfc00115 	stw	ra,4(sp)
    d86c:	2021883a 	mov	r16,r4
    d870:	20000f26 	beq	r4,zero,d8b0 <__floatunsidf+0x50>
    d874:	000d8f00 	call	d8f0 <__clzsi2>
    d878:	00c10784 	movi	r3,1054
    d87c:	1887c83a 	sub	r3,r3,r2
    d880:	110002c8 	cmpgei	r4,r2,11
    d884:	18c1ffcc 	andi	r3,r3,2047
    d888:	2000121e 	bne	r4,zero,d8d4 <__floatunsidf+0x74>
    d88c:	010002c4 	movi	r4,11
    d890:	2089c83a 	sub	r4,r4,r2
    d894:	8108d83a 	srl	r4,r16,r4
    d898:	01400434 	movhi	r5,16
    d89c:	10800544 	addi	r2,r2,21
    d8a0:	297fffc4 	addi	r5,r5,-1
    d8a4:	80a0983a 	sll	r16,r16,r2
    d8a8:	214a703a 	and	r5,r4,r5
    d8ac:	00000206 	br	d8b8 <__floatunsidf+0x58>
    d8b0:	0007883a 	mov	r3,zero
    d8b4:	000b883a 	mov	r5,zero
    d8b8:	1806953a 	slli	r3,r3,20
    d8bc:	8005883a 	mov	r2,r16
    d8c0:	1946b03a 	or	r3,r3,r5
    d8c4:	dfc00117 	ldw	ra,4(sp)
    d8c8:	dc000017 	ldw	r16,0(sp)
    d8cc:	dec00204 	addi	sp,sp,8
    d8d0:	f800283a 	ret
    d8d4:	117ffd44 	addi	r5,r2,-11
    d8d8:	814a983a 	sll	r5,r16,r5
    d8dc:	00800434 	movhi	r2,16
    d8e0:	10bfffc4 	addi	r2,r2,-1
    d8e4:	288a703a 	and	r5,r5,r2
    d8e8:	0021883a 	mov	r16,zero
    d8ec:	003ff206 	br	d8b8 <__floatunsidf+0x58>

0000d8f0 <__clzsi2>:
    d8f0:	00bfffd4 	movui	r2,65535
    d8f4:	11000a36 	bltu	r2,r4,d920 <__clzsi2+0x30>
    d8f8:	20c04028 	cmpgeui	r3,r4,256
    d8fc:	180690fa 	slli	r3,r3,3
    d900:	00800804 	movi	r2,32
    d904:	10c5c83a 	sub	r2,r2,r3
    d908:	20c8d83a 	srl	r4,r4,r3
    d90c:	00c00074 	movhi	r3,1
    d910:	20c7883a 	add	r3,r4,r3
    d914:	18c2b003 	ldbu	r3,2752(r3)
    d918:	10c5c83a 	sub	r2,r2,r3
    d91c:	f800283a 	ret
    d920:	00804034 	movhi	r2,256
    d924:	2080032e 	bgeu	r4,r2,d934 <__clzsi2+0x44>
    d928:	00800404 	movi	r2,16
    d92c:	00c00404 	movi	r3,16
    d930:	003ff506 	br	d908 <__clzsi2+0x18>
    d934:	00800204 	movi	r2,8
    d938:	00c00604 	movi	r3,24
    d93c:	003ff206 	br	d908 <__clzsi2+0x18>

0000d940 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d940:	defffe04 	addi	sp,sp,-8
    d944:	dfc00115 	stw	ra,4(sp)
    d948:	df000015 	stw	fp,0(sp)
    d94c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d950:	d0a00917 	ldw	r2,-32732(gp)
    d954:	10000326 	beq	r2,zero,d964 <alt_get_errno+0x24>
    d958:	d0a00917 	ldw	r2,-32732(gp)
    d95c:	103ee83a 	callr	r2
    d960:	00000106 	br	d968 <alt_get_errno+0x28>
    d964:	d0a70704 	addi	r2,gp,-25572
}
    d968:	e037883a 	mov	sp,fp
    d96c:	dfc00117 	ldw	ra,4(sp)
    d970:	df000017 	ldw	fp,0(sp)
    d974:	dec00204 	addi	sp,sp,8
    d978:	f800283a 	ret

0000d97c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d97c:	defffb04 	addi	sp,sp,-20
    d980:	dfc00415 	stw	ra,16(sp)
    d984:	df000315 	stw	fp,12(sp)
    d988:	df000304 	addi	fp,sp,12
    d98c:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    d990:	e0bffd17 	ldw	r2,-12(fp)
    d994:	10000916 	blt	r2,zero,d9bc <close+0x40>
    d998:	e0fffd17 	ldw	r3,-12(fp)
    d99c:	1805883a 	mov	r2,r3
    d9a0:	1085883a 	add	r2,r2,r2
    d9a4:	10c5883a 	add	r2,r2,r3
    d9a8:	100490ba 	slli	r2,r2,2
    d9ac:	00c00074 	movhi	r3,1
    d9b0:	18c56d04 	addi	r3,r3,5556
    d9b4:	10c5883a 	add	r2,r2,r3
    d9b8:	00000106 	br	d9c0 <close+0x44>
    d9bc:	0005883a 	mov	r2,zero
    d9c0:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
    d9c4:	e0bfff17 	ldw	r2,-4(fp)
    d9c8:	10001926 	beq	r2,zero,da30 <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d9cc:	e0bfff17 	ldw	r2,-4(fp)
    d9d0:	10800017 	ldw	r2,0(r2)
    d9d4:	10800417 	ldw	r2,16(r2)
    d9d8:	10000626 	beq	r2,zero,d9f4 <close+0x78>
    d9dc:	e0bfff17 	ldw	r2,-4(fp)
    d9e0:	10800017 	ldw	r2,0(r2)
    d9e4:	10800417 	ldw	r2,16(r2)
    d9e8:	e13fff17 	ldw	r4,-4(fp)
    d9ec:	103ee83a 	callr	r2
    d9f0:	00000106 	br	d9f8 <close+0x7c>
    d9f4:	0005883a 	mov	r2,zero
    d9f8:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d9fc:	e13ffd17 	ldw	r4,-12(fp)
    da00:	000e2000 	call	e200 <alt_release_fd>
    if (rval < 0)
    da04:	e0bffe17 	ldw	r2,-8(fp)
    da08:	1000070e 	bge	r2,zero,da28 <close+0xac>
    {
      ALT_ERRNO = -rval;
    da0c:	000d9400 	call	d940 <alt_get_errno>
    da10:	1007883a 	mov	r3,r2
    da14:	e0bffe17 	ldw	r2,-8(fp)
    da18:	0085c83a 	sub	r2,zero,r2
    da1c:	18800015 	stw	r2,0(r3)
      return -1;
    da20:	00bfffc4 	movi	r2,-1
    da24:	00000706 	br	da44 <close+0xc8>
    }
    return 0;
    da28:	0005883a 	mov	r2,zero
    da2c:	00000506 	br	da44 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    da30:	000d9400 	call	d940 <alt_get_errno>
    da34:	1007883a 	mov	r3,r2
    da38:	00801444 	movi	r2,81
    da3c:	18800015 	stw	r2,0(r3)
    return -1;
    da40:	00bfffc4 	movi	r2,-1
  }
}
    da44:	e037883a 	mov	sp,fp
    da48:	dfc00117 	ldw	ra,4(sp)
    da4c:	df000017 	ldw	fp,0(sp)
    da50:	dec00204 	addi	sp,sp,8
    da54:	f800283a 	ret

0000da58 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    da58:	defffc04 	addi	sp,sp,-16
    da5c:	df000315 	stw	fp,12(sp)
    da60:	df000304 	addi	fp,sp,12
    da64:	e13fff15 	stw	r4,-4(fp)
    da68:	e17ffe15 	stw	r5,-8(fp)
    da6c:	e1bffd15 	stw	r6,-12(fp)
  return len;
    da70:	e0bffd17 	ldw	r2,-12(fp)
}
    da74:	e037883a 	mov	sp,fp
    da78:	df000017 	ldw	fp,0(sp)
    da7c:	dec00104 	addi	sp,sp,4
    da80:	f800283a 	ret

0000da84 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    da84:	defffd04 	addi	sp,sp,-12
    da88:	df000215 	stw	fp,8(sp)
    da8c:	df000204 	addi	fp,sp,8
    da90:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
    da94:	0001883a 	nop
    da98:	e0bffe17 	ldw	r2,-8(fp)
    da9c:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
    daa0:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    daa4:	10000226 	beq	r2,zero,dab0 <_exit+0x2c>
    ALT_SIM_FAIL();
    daa8:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
    daac:	00000106 	br	dab4 <_exit+0x30>
    ALT_SIM_PASS();
    dab0:	002af0b0 	cmpltui	zero,zero,43970
}
    dab4:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
    dab8:	0001883a 	nop
    dabc:	003ffe06 	br	dab8 <_exit+0x34>

0000dac0 <alt_get_errno>:
{
    dac0:	defffe04 	addi	sp,sp,-8
    dac4:	dfc00115 	stw	ra,4(sp)
    dac8:	df000015 	stw	fp,0(sp)
    dacc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    dad0:	d0a00917 	ldw	r2,-32732(gp)
    dad4:	10000326 	beq	r2,zero,dae4 <alt_get_errno+0x24>
    dad8:	d0a00917 	ldw	r2,-32732(gp)
    dadc:	103ee83a 	callr	r2
    dae0:	00000106 	br	dae8 <alt_get_errno+0x28>
    dae4:	d0a70704 	addi	r2,gp,-25572
}
    dae8:	e037883a 	mov	sp,fp
    daec:	dfc00117 	ldw	ra,4(sp)
    daf0:	df000017 	ldw	fp,0(sp)
    daf4:	dec00204 	addi	sp,sp,8
    daf8:	f800283a 	ret

0000dafc <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    dafc:	defffb04 	addi	sp,sp,-20
    db00:	dfc00415 	stw	ra,16(sp)
    db04:	df000315 	stw	fp,12(sp)
    db08:	df000304 	addi	fp,sp,12
    db0c:	e13ffe15 	stw	r4,-8(fp)
    db10:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    db14:	e0bffe17 	ldw	r2,-8(fp)
    db18:	10000916 	blt	r2,zero,db40 <fstat+0x44>
    db1c:	e0fffe17 	ldw	r3,-8(fp)
    db20:	1805883a 	mov	r2,r3
    db24:	1085883a 	add	r2,r2,r2
    db28:	10c5883a 	add	r2,r2,r3
    db2c:	100490ba 	slli	r2,r2,2
    db30:	00c00074 	movhi	r3,1
    db34:	18c56d04 	addi	r3,r3,5556
    db38:	10c5883a 	add	r2,r2,r3
    db3c:	00000106 	br	db44 <fstat+0x48>
    db40:	0005883a 	mov	r2,zero
    db44:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    db48:	e0bfff17 	ldw	r2,-4(fp)
    db4c:	10001026 	beq	r2,zero,db90 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    db50:	e0bfff17 	ldw	r2,-4(fp)
    db54:	10800017 	ldw	r2,0(r2)
    db58:	10800817 	ldw	r2,32(r2)
    db5c:	10000726 	beq	r2,zero,db7c <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
    db60:	e0bfff17 	ldw	r2,-4(fp)
    db64:	10800017 	ldw	r2,0(r2)
    db68:	10800817 	ldw	r2,32(r2)
    db6c:	e17ffd17 	ldw	r5,-12(fp)
    db70:	e13fff17 	ldw	r4,-4(fp)
    db74:	103ee83a 	callr	r2
    db78:	00000a06 	br	dba4 <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    db7c:	e0bffd17 	ldw	r2,-12(fp)
    db80:	00c80004 	movi	r3,8192
    db84:	10c00115 	stw	r3,4(r2)
      return 0;
    db88:	0005883a 	mov	r2,zero
    db8c:	00000506 	br	dba4 <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    db90:	000dac00 	call	dac0 <alt_get_errno>
    db94:	1007883a 	mov	r3,r2
    db98:	00801444 	movi	r2,81
    db9c:	18800015 	stw	r2,0(r3)
    return -1;
    dba0:	00bfffc4 	movi	r2,-1
  }
}
    dba4:	e037883a 	mov	sp,fp
    dba8:	dfc00117 	ldw	ra,4(sp)
    dbac:	df000017 	ldw	fp,0(sp)
    dbb0:	dec00204 	addi	sp,sp,8
    dbb4:	f800283a 	ret

0000dbb8 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
    dbb8:	deffff04 	addi	sp,sp,-4
    dbbc:	df000015 	stw	fp,0(sp)
    dbc0:	d839883a 	mov	fp,sp
  return 0;
    dbc4:	0005883a 	mov	r2,zero
}
    dbc8:	e037883a 	mov	sp,fp
    dbcc:	df000017 	ldw	fp,0(sp)
    dbd0:	dec00104 	addi	sp,sp,4
    dbd4:	f800283a 	ret

0000dbd8 <alt_get_errno>:
{
    dbd8:	defffe04 	addi	sp,sp,-8
    dbdc:	dfc00115 	stw	ra,4(sp)
    dbe0:	df000015 	stw	fp,0(sp)
    dbe4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    dbe8:	d0a00917 	ldw	r2,-32732(gp)
    dbec:	10000326 	beq	r2,zero,dbfc <alt_get_errno+0x24>
    dbf0:	d0a00917 	ldw	r2,-32732(gp)
    dbf4:	103ee83a 	callr	r2
    dbf8:	00000106 	br	dc00 <alt_get_errno+0x28>
    dbfc:	d0a70704 	addi	r2,gp,-25572
}
    dc00:	e037883a 	mov	sp,fp
    dc04:	dfc00117 	ldw	ra,4(sp)
    dc08:	df000017 	ldw	fp,0(sp)
    dc0c:	dec00204 	addi	sp,sp,8
    dc10:	f800283a 	ret

0000dc14 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    dc14:	deffea04 	addi	sp,sp,-88
    dc18:	dfc01515 	stw	ra,84(sp)
    dc1c:	df001415 	stw	fp,80(sp)
    dc20:	df001404 	addi	fp,sp,80
    dc24:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    dc28:	e0bfec17 	ldw	r2,-80(fp)
    dc2c:	10000916 	blt	r2,zero,dc54 <isatty+0x40>
    dc30:	e0ffec17 	ldw	r3,-80(fp)
    dc34:	1805883a 	mov	r2,r3
    dc38:	1085883a 	add	r2,r2,r2
    dc3c:	10c5883a 	add	r2,r2,r3
    dc40:	100490ba 	slli	r2,r2,2
    dc44:	00c00074 	movhi	r3,1
    dc48:	18c56d04 	addi	r3,r3,5556
    dc4c:	10c5883a 	add	r2,r2,r3
    dc50:	00000106 	br	dc58 <isatty+0x44>
    dc54:	0005883a 	mov	r2,zero
    dc58:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    dc5c:	e0bfff17 	ldw	r2,-4(fp)
    dc60:	10000e26 	beq	r2,zero,dc9c <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    dc64:	e0bfff17 	ldw	r2,-4(fp)
    dc68:	10800017 	ldw	r2,0(r2)
    dc6c:	10800817 	ldw	r2,32(r2)
    dc70:	1000021e 	bne	r2,zero,dc7c <isatty+0x68>
    {
      return 1;
    dc74:	00800044 	movi	r2,1
    dc78:	00000d06 	br	dcb0 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    dc7c:	e0bfed04 	addi	r2,fp,-76
    dc80:	100b883a 	mov	r5,r2
    dc84:	e13fec17 	ldw	r4,-80(fp)
    dc88:	000dafc0 	call	dafc <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    dc8c:	e0bfee17 	ldw	r2,-72(fp)
    dc90:	10880020 	cmpeqi	r2,r2,8192
    dc94:	10803fcc 	andi	r2,r2,255
    dc98:	00000506 	br	dcb0 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    dc9c:	000dbd80 	call	dbd8 <alt_get_errno>
    dca0:	1007883a 	mov	r3,r2
    dca4:	00801444 	movi	r2,81
    dca8:	18800015 	stw	r2,0(r3)
    return 0;
    dcac:	0005883a 	mov	r2,zero
  }
}
    dcb0:	e037883a 	mov	sp,fp
    dcb4:	dfc00117 	ldw	ra,4(sp)
    dcb8:	df000017 	ldw	fp,0(sp)
    dcbc:	dec00204 	addi	sp,sp,8
    dcc0:	f800283a 	ret

0000dcc4 <alt_get_errno>:
{
    dcc4:	defffe04 	addi	sp,sp,-8
    dcc8:	dfc00115 	stw	ra,4(sp)
    dccc:	df000015 	stw	fp,0(sp)
    dcd0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    dcd4:	d0a00917 	ldw	r2,-32732(gp)
    dcd8:	10000326 	beq	r2,zero,dce8 <alt_get_errno+0x24>
    dcdc:	d0a00917 	ldw	r2,-32732(gp)
    dce0:	103ee83a 	callr	r2
    dce4:	00000106 	br	dcec <alt_get_errno+0x28>
    dce8:	d0a70704 	addi	r2,gp,-25572
}
    dcec:	e037883a 	mov	sp,fp
    dcf0:	dfc00117 	ldw	ra,4(sp)
    dcf4:	df000017 	ldw	fp,0(sp)
    dcf8:	dec00204 	addi	sp,sp,8
    dcfc:	f800283a 	ret

0000dd00 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
    dd00:	defffb04 	addi	sp,sp,-20
    dd04:	dfc00415 	stw	ra,16(sp)
    dd08:	df000315 	stw	fp,12(sp)
    dd0c:	df000304 	addi	fp,sp,12
    dd10:	e13ffe15 	stw	r4,-8(fp)
    dd14:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
    dd18:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
    dd1c:	e0bffe17 	ldw	r2,-8(fp)
    dd20:	00801d16 	blt	zero,r2,dd98 <kill+0x98>
  {
    switch (sig)
    dd24:	e0bffd17 	ldw	r2,-12(fp)
    dd28:	10002026 	beq	r2,zero,ddac <kill+0xac>
    dd2c:	e0bffd17 	ldw	r2,-12(fp)
    dd30:	10001616 	blt	r2,zero,dd8c <kill+0x8c>
    dd34:	e0bffd17 	ldw	r2,-12(fp)
    dd38:	10800808 	cmpgei	r2,r2,32
    dd3c:	1000131e 	bne	r2,zero,dd8c <kill+0x8c>
    dd40:	e0bffd17 	ldw	r2,-12(fp)
    dd44:	108000d0 	cmplti	r2,r2,3
    dd48:	1000101e 	bne	r2,zero,dd8c <kill+0x8c>
    dd4c:	e0bffd17 	ldw	r2,-12(fp)
    dd50:	00c00044 	movi	r3,1
    dd54:	1886983a 	sll	r3,r3,r2
    dd58:	00b3e074 	movhi	r2,53121
    dd5c:	10bfde04 	addi	r2,r2,-136
    dd60:	1884703a 	and	r2,r3,r2
    dd64:	1004c03a 	cmpne	r2,r2,zero
    dd68:	10803fcc 	andi	r2,r2,255
    dd6c:	1000051e 	bne	r2,zero,dd84 <kill+0x84>
    dd70:	1880046c 	andhi	r2,r3,17
    dd74:	1004c03a 	cmpne	r2,r2,zero
    dd78:	10803fcc 	andi	r2,r2,255
    dd7c:	10000d1e 	bne	r2,zero,ddb4 <kill+0xb4>
    dd80:	00000206 	br	dd8c <kill+0x8c>
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
    dd84:	0009883a 	mov	r4,zero
    dd88:	000da840 	call	da84 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
    dd8c:	00800584 	movi	r2,22
    dd90:	e0bfff15 	stw	r2,-4(fp)
    dd94:	00000806 	br	ddb8 <kill+0xb8>
    }
  }

  else if (pid > 0)
    dd98:	e0bffe17 	ldw	r2,-8(fp)
    dd9c:	0080060e 	bge	zero,r2,ddb8 <kill+0xb8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
    dda0:	008000c4 	movi	r2,3
    dda4:	e0bfff15 	stw	r2,-4(fp)
    dda8:	00000306 	br	ddb8 <kill+0xb8>
      break;
    ddac:	0001883a 	nop
    ddb0:	00000106 	br	ddb8 <kill+0xb8>
      break;
    ddb4:	0001883a 	nop
  }

  if (status)
    ddb8:	e0bfff17 	ldw	r2,-4(fp)
    ddbc:	10000626 	beq	r2,zero,ddd8 <kill+0xd8>
  {
    ALT_ERRNO = status;
    ddc0:	000dcc40 	call	dcc4 <alt_get_errno>
    ddc4:	1007883a 	mov	r3,r2
    ddc8:	e0bfff17 	ldw	r2,-4(fp)
    ddcc:	18800015 	stw	r2,0(r3)
    return -1;
    ddd0:	00bfffc4 	movi	r2,-1
    ddd4:	00000106 	br	dddc <kill+0xdc>
  }

  return 0;
    ddd8:	0005883a 	mov	r2,zero
}
    dddc:	e037883a 	mov	sp,fp
    dde0:	dfc00117 	ldw	ra,4(sp)
    dde4:	df000017 	ldw	fp,0(sp)
    dde8:	dec00204 	addi	sp,sp,8
    ddec:	f800283a 	ret

0000ddf0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    ddf0:	defffc04 	addi	sp,sp,-16
    ddf4:	df000315 	stw	fp,12(sp)
    ddf8:	df000304 	addi	fp,sp,12
    ddfc:	e13fff15 	stw	r4,-4(fp)
    de00:	e17ffe15 	stw	r5,-8(fp)
    de04:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
    de08:	e0fffe17 	ldw	r3,-8(fp)
    de0c:	e0bfff17 	ldw	r2,-4(fp)
    de10:	18800c26 	beq	r3,r2,de44 <alt_load_section+0x54>
  {
    while( to != end )
    de14:	00000806 	br	de38 <alt_load_section+0x48>
    {
      *to++ = *from++;
    de18:	e0ffff17 	ldw	r3,-4(fp)
    de1c:	18800104 	addi	r2,r3,4
    de20:	e0bfff15 	stw	r2,-4(fp)
    de24:	e0bffe17 	ldw	r2,-8(fp)
    de28:	11000104 	addi	r4,r2,4
    de2c:	e13ffe15 	stw	r4,-8(fp)
    de30:	18c00017 	ldw	r3,0(r3)
    de34:	10c00015 	stw	r3,0(r2)
    while( to != end )
    de38:	e0fffe17 	ldw	r3,-8(fp)
    de3c:	e0bffd17 	ldw	r2,-12(fp)
    de40:	18bff51e 	bne	r3,r2,de18 <alt_load_section+0x28>
    }
  }
}
    de44:	0001883a 	nop
    de48:	e037883a 	mov	sp,fp
    de4c:	df000017 	ldw	fp,0(sp)
    de50:	dec00104 	addi	sp,sp,4
    de54:	f800283a 	ret

0000de58 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    de58:	defffe04 	addi	sp,sp,-8
    de5c:	dfc00115 	stw	ra,4(sp)
    de60:	df000015 	stw	fp,0(sp)
    de64:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    de68:	01800074 	movhi	r6,1
    de6c:	3189f304 	addi	r6,r6,10188
    de70:	01400074 	movhi	r5,1
    de74:	2942fd04 	addi	r5,r5,3060
    de78:	01000074 	movhi	r4,1
    de7c:	2109f304 	addi	r4,r4,10188
    de80:	000ddf00 	call	ddf0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    de84:	01800034 	movhi	r6,0
    de88:	31808904 	addi	r6,r6,548
    de8c:	01400034 	movhi	r5,0
    de90:	29400804 	addi	r5,r5,32
    de94:	01000034 	movhi	r4,0
    de98:	21000804 	addi	r4,r4,32
    de9c:	000ddf00 	call	ddf0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    dea0:	01800074 	movhi	r6,1
    dea4:	3182fd04 	addi	r6,r6,3060
    dea8:	01400074 	movhi	r5,1
    deac:	29415e04 	addi	r5,r5,1400
    deb0:	01000074 	movhi	r4,1
    deb4:	21015e04 	addi	r4,r4,1400
    deb8:	000ddf00 	call	ddf0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    debc:	000f6040 	call	f604 <alt_dcache_flush_all>
  alt_icache_flush_all();
    dec0:	000f7d00 	call	f7d0 <alt_icache_flush_all>
}
    dec4:	0001883a 	nop
    dec8:	e037883a 	mov	sp,fp
    decc:	dfc00117 	ldw	ra,4(sp)
    ded0:	df000017 	ldw	fp,0(sp)
    ded4:	dec00204 	addi	sp,sp,8
    ded8:	f800283a 	ret

0000dedc <alt_get_errno>:
{
    dedc:	defffe04 	addi	sp,sp,-8
    dee0:	dfc00115 	stw	ra,4(sp)
    dee4:	df000015 	stw	fp,0(sp)
    dee8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    deec:	d0a00917 	ldw	r2,-32732(gp)
    def0:	10000326 	beq	r2,zero,df00 <alt_get_errno+0x24>
    def4:	d0a00917 	ldw	r2,-32732(gp)
    def8:	103ee83a 	callr	r2
    defc:	00000106 	br	df04 <alt_get_errno+0x28>
    df00:	d0a70704 	addi	r2,gp,-25572
}
    df04:	e037883a 	mov	sp,fp
    df08:	dfc00117 	ldw	ra,4(sp)
    df0c:	df000017 	ldw	fp,0(sp)
    df10:	dec00204 	addi	sp,sp,8
    df14:	f800283a 	ret

0000df18 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    df18:	defff904 	addi	sp,sp,-28
    df1c:	dfc00615 	stw	ra,24(sp)
    df20:	df000515 	stw	fp,20(sp)
    df24:	df000504 	addi	fp,sp,20
    df28:	e13ffd15 	stw	r4,-12(fp)
    df2c:	e17ffc15 	stw	r5,-16(fp)
    df30:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    df34:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    df38:	e0bffd17 	ldw	r2,-12(fp)
    df3c:	10000916 	blt	r2,zero,df64 <lseek+0x4c>
    df40:	e0fffd17 	ldw	r3,-12(fp)
    df44:	1805883a 	mov	r2,r3
    df48:	1085883a 	add	r2,r2,r2
    df4c:	10c5883a 	add	r2,r2,r3
    df50:	100490ba 	slli	r2,r2,2
    df54:	00c00074 	movhi	r3,1
    df58:	18c56d04 	addi	r3,r3,5556
    df5c:	10c5883a 	add	r2,r2,r3
    df60:	00000106 	br	df68 <lseek+0x50>
    df64:	0005883a 	mov	r2,zero
    df68:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
    df6c:	e0bffe17 	ldw	r2,-8(fp)
    df70:	10001026 	beq	r2,zero,dfb4 <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    df74:	e0bffe17 	ldw	r2,-8(fp)
    df78:	10800017 	ldw	r2,0(r2)
    df7c:	10800717 	ldw	r2,28(r2)
    df80:	10000926 	beq	r2,zero,dfa8 <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    df84:	e0bffe17 	ldw	r2,-8(fp)
    df88:	10800017 	ldw	r2,0(r2)
    df8c:	10800717 	ldw	r2,28(r2)
    df90:	e1bffb17 	ldw	r6,-20(fp)
    df94:	e17ffc17 	ldw	r5,-16(fp)
    df98:	e13ffe17 	ldw	r4,-8(fp)
    df9c:	103ee83a 	callr	r2
    dfa0:	e0bfff15 	stw	r2,-4(fp)
    dfa4:	00000506 	br	dfbc <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    dfa8:	00bfde84 	movi	r2,-134
    dfac:	e0bfff15 	stw	r2,-4(fp)
    dfb0:	00000206 	br	dfbc <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
    dfb4:	00bfebc4 	movi	r2,-81
    dfb8:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
    dfbc:	e0bfff17 	ldw	r2,-4(fp)
    dfc0:	1000070e 	bge	r2,zero,dfe0 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
    dfc4:	000dedc0 	call	dedc <alt_get_errno>
    dfc8:	1007883a 	mov	r3,r2
    dfcc:	e0bfff17 	ldw	r2,-4(fp)
    dfd0:	0085c83a 	sub	r2,zero,r2
    dfd4:	18800015 	stw	r2,0(r3)
    rc = -1;
    dfd8:	00bfffc4 	movi	r2,-1
    dfdc:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
    dfe0:	e0bfff17 	ldw	r2,-4(fp)
}
    dfe4:	e037883a 	mov	sp,fp
    dfe8:	dfc00117 	ldw	ra,4(sp)
    dfec:	df000017 	ldw	fp,0(sp)
    dff0:	dec00204 	addi	sp,sp,8
    dff4:	f800283a 	ret

0000dff8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    dff8:	defffd04 	addi	sp,sp,-12
    dffc:	dfc00215 	stw	ra,8(sp)
    e000:	df000115 	stw	fp,4(sp)
    e004:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    e008:	0009883a 	mov	r4,zero
    e00c:	000e49c0 	call	e49c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    e010:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    e014:	000e4d80 	call	e4d8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    e018:	01800074 	movhi	r6,1
    e01c:	3182f304 	addi	r6,r6,3020
    e020:	01400074 	movhi	r5,1
    e024:	2942f304 	addi	r5,r5,3020
    e028:	01000074 	movhi	r4,1
    e02c:	2102f304 	addi	r4,r4,3020
    e030:	000fb5c0 	call	fb5c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    e034:	000f7080 	call	f708 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    e038:	01000074 	movhi	r4,1
    e03c:	213ddb04 	addi	r4,r4,-2196
    e040:	00103080 	call	10308 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    e044:	d0a70917 	ldw	r2,-25564(gp)
    e048:	d0e70a17 	ldw	r3,-25560(gp)
    e04c:	d1270b17 	ldw	r4,-25556(gp)
    e050:	200d883a 	mov	r6,r4
    e054:	180b883a 	mov	r5,r3
    e058:	1009883a 	mov	r4,r2
    e05c:	00002600 	call	260 <main>
    e060:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    e064:	01000044 	movi	r4,1
    e068:	000d97c0 	call	d97c <close>
  exit (result);
    e06c:	e13fff17 	ldw	r4,-4(fp)
    e070:	001031c0 	call	1031c <exit>

0000e074 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    e074:	defffe04 	addi	sp,sp,-8
    e078:	df000115 	stw	fp,4(sp)
    e07c:	df000104 	addi	fp,sp,4
    e080:	e13fff15 	stw	r4,-4(fp)
}
    e084:	0001883a 	nop
    e088:	e037883a 	mov	sp,fp
    e08c:	df000017 	ldw	fp,0(sp)
    e090:	dec00104 	addi	sp,sp,4
    e094:	f800283a 	ret

0000e098 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    e098:	defffe04 	addi	sp,sp,-8
    e09c:	df000115 	stw	fp,4(sp)
    e0a0:	df000104 	addi	fp,sp,4
    e0a4:	e13fff15 	stw	r4,-4(fp)
}
    e0a8:	0001883a 	nop
    e0ac:	e037883a 	mov	sp,fp
    e0b0:	df000017 	ldw	fp,0(sp)
    e0b4:	dec00104 	addi	sp,sp,4
    e0b8:	f800283a 	ret

0000e0bc <alt_get_errno>:
{
    e0bc:	defffe04 	addi	sp,sp,-8
    e0c0:	dfc00115 	stw	ra,4(sp)
    e0c4:	df000015 	stw	fp,0(sp)
    e0c8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e0cc:	d0a00917 	ldw	r2,-32732(gp)
    e0d0:	10000326 	beq	r2,zero,e0e0 <alt_get_errno+0x24>
    e0d4:	d0a00917 	ldw	r2,-32732(gp)
    e0d8:	103ee83a 	callr	r2
    e0dc:	00000106 	br	e0e4 <alt_get_errno+0x28>
    e0e0:	d0a70704 	addi	r2,gp,-25572
}
    e0e4:	e037883a 	mov	sp,fp
    e0e8:	dfc00117 	ldw	ra,4(sp)
    e0ec:	df000017 	ldw	fp,0(sp)
    e0f0:	dec00204 	addi	sp,sp,8
    e0f4:	f800283a 	ret

0000e0f8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    e0f8:	defff904 	addi	sp,sp,-28
    e0fc:	dfc00615 	stw	ra,24(sp)
    e100:	df000515 	stw	fp,20(sp)
    e104:	df000504 	addi	fp,sp,20
    e108:	e13ffd15 	stw	r4,-12(fp)
    e10c:	e17ffc15 	stw	r5,-16(fp)
    e110:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    e114:	e0bffd17 	ldw	r2,-12(fp)
    e118:	10000916 	blt	r2,zero,e140 <read+0x48>
    e11c:	e0fffd17 	ldw	r3,-12(fp)
    e120:	1805883a 	mov	r2,r3
    e124:	1085883a 	add	r2,r2,r2
    e128:	10c5883a 	add	r2,r2,r3
    e12c:	100490ba 	slli	r2,r2,2
    e130:	00c00074 	movhi	r3,1
    e134:	18c56d04 	addi	r3,r3,5556
    e138:	10c5883a 	add	r2,r2,r3
    e13c:	00000106 	br	e144 <read+0x4c>
    e140:	0005883a 	mov	r2,zero
    e144:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    e148:	e0bfff17 	ldw	r2,-4(fp)
    e14c:	10002226 	beq	r2,zero,e1d8 <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    e150:	e0bfff17 	ldw	r2,-4(fp)
    e154:	10800217 	ldw	r2,8(r2)
    e158:	108000cc 	andi	r2,r2,3
    e15c:	10800060 	cmpeqi	r2,r2,1
    e160:	1000181e 	bne	r2,zero,e1c4 <read+0xcc>
        (fd->dev->read))
    e164:	e0bfff17 	ldw	r2,-4(fp)
    e168:	10800017 	ldw	r2,0(r2)
    e16c:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    e170:	10001426 	beq	r2,zero,e1c4 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    e174:	e0bfff17 	ldw	r2,-4(fp)
    e178:	10800017 	ldw	r2,0(r2)
    e17c:	10800517 	ldw	r2,20(r2)
    e180:	e0fffb17 	ldw	r3,-20(fp)
    e184:	180d883a 	mov	r6,r3
    e188:	e17ffc17 	ldw	r5,-16(fp)
    e18c:	e13fff17 	ldw	r4,-4(fp)
    e190:	103ee83a 	callr	r2
    e194:	e0bffe15 	stw	r2,-8(fp)
    e198:	e0bffe17 	ldw	r2,-8(fp)
    e19c:	1000070e 	bge	r2,zero,e1bc <read+0xc4>
        {
          ALT_ERRNO = -rval;
    e1a0:	000e0bc0 	call	e0bc <alt_get_errno>
    e1a4:	1007883a 	mov	r3,r2
    e1a8:	e0bffe17 	ldw	r2,-8(fp)
    e1ac:	0085c83a 	sub	r2,zero,r2
    e1b0:	18800015 	stw	r2,0(r3)
          return -1;
    e1b4:	00bfffc4 	movi	r2,-1
    e1b8:	00000c06 	br	e1ec <read+0xf4>
        }
        return rval;
    e1bc:	e0bffe17 	ldw	r2,-8(fp)
    e1c0:	00000a06 	br	e1ec <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
    e1c4:	000e0bc0 	call	e0bc <alt_get_errno>
    e1c8:	1007883a 	mov	r3,r2
    e1cc:	00800344 	movi	r2,13
    e1d0:	18800015 	stw	r2,0(r3)
    e1d4:	00000406 	br	e1e8 <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    e1d8:	000e0bc0 	call	e0bc <alt_get_errno>
    e1dc:	1007883a 	mov	r3,r2
    e1e0:	00801444 	movi	r2,81
    e1e4:	18800015 	stw	r2,0(r3)
  }
  return -1;
    e1e8:	00bfffc4 	movi	r2,-1
}
    e1ec:	e037883a 	mov	sp,fp
    e1f0:	dfc00117 	ldw	ra,4(sp)
    e1f4:	df000017 	ldw	fp,0(sp)
    e1f8:	dec00204 	addi	sp,sp,8
    e1fc:	f800283a 	ret

0000e200 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    e200:	defffe04 	addi	sp,sp,-8
    e204:	df000115 	stw	fp,4(sp)
    e208:	df000104 	addi	fp,sp,4
    e20c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
    e210:	e0bfff17 	ldw	r2,-4(fp)
    e214:	108000d0 	cmplti	r2,r2,3
    e218:	1000101e 	bne	r2,zero,e25c <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
    e21c:	e0ffff17 	ldw	r3,-4(fp)
    e220:	1805883a 	mov	r2,r3
    e224:	1085883a 	add	r2,r2,r2
    e228:	10c5883a 	add	r2,r2,r3
    e22c:	100490ba 	slli	r2,r2,2
    e230:	00c00074 	movhi	r3,1
    e234:	10c7883a 	add	r3,r2,r3
    e238:	18056f15 	stw	zero,5564(r3)
    alt_fd_list[fd].dev      = 0;
    e23c:	e0ffff17 	ldw	r3,-4(fp)
    e240:	1805883a 	mov	r2,r3
    e244:	1085883a 	add	r2,r2,r2
    e248:	10c5883a 	add	r2,r2,r3
    e24c:	100490ba 	slli	r2,r2,2
    e250:	00c00074 	movhi	r3,1
    e254:	10c7883a 	add	r3,r2,r3
    e258:	18056d15 	stw	zero,5556(r3)
  }
}
    e25c:	0001883a 	nop
    e260:	e037883a 	mov	sp,fp
    e264:	df000017 	ldw	fp,0(sp)
    e268:	dec00104 	addi	sp,sp,4
    e26c:	f800283a 	ret

0000e270 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    e270:	defff904 	addi	sp,sp,-28
    e274:	df000615 	stw	fp,24(sp)
    e278:	df000604 	addi	fp,sp,24
    e27c:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
    e280:	0005303a 	rdctl	r2,status
    e284:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e288:	e0fffd17 	ldw	r3,-12(fp)
    e28c:	00bfff84 	movi	r2,-2
    e290:	1884703a 	and	r2,r3,r2
    e294:	1001703a 	wrctl	status,r2
  return context;
    e298:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    e29c:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    e2a0:	d0a00a17 	ldw	r2,-32728(gp)
    e2a4:	10c000c4 	addi	r3,r2,3
    e2a8:	00bfff04 	movi	r2,-4
    e2ac:	1884703a 	and	r2,r3,r2
    e2b0:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    e2b4:	d0e00a17 	ldw	r3,-32728(gp)
    e2b8:	e0bffa17 	ldw	r2,-24(fp)
    e2bc:	1887883a 	add	r3,r3,r2
    e2c0:	008000b4 	movhi	r2,2
    e2c4:	10960004 	addi	r2,r2,22528
    e2c8:	10c0072e 	bgeu	r2,r3,e2e8 <sbrk+0x78>
    e2cc:	e0bfff17 	ldw	r2,-4(fp)
    e2d0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    e2d4:	e0bffc17 	ldw	r2,-16(fp)
    e2d8:	1001703a 	wrctl	status,r2
}
    e2dc:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    e2e0:	00bfffc4 	movi	r2,-1
    e2e4:	00000c06 	br	e318 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
    e2e8:	d0a00a17 	ldw	r2,-32728(gp)
    e2ec:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
    e2f0:	d0e00a17 	ldw	r3,-32728(gp)
    e2f4:	e0bffa17 	ldw	r2,-24(fp)
    e2f8:	1885883a 	add	r2,r3,r2
    e2fc:	d0a00a15 	stw	r2,-32728(gp)
    e300:	e0bfff17 	ldw	r2,-4(fp)
    e304:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
    e308:	e0bffb17 	ldw	r2,-20(fp)
    e30c:	1001703a 	wrctl	status,r2
}
    e310:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    e314:	e0bffe17 	ldw	r2,-8(fp)
} 
    e318:	e037883a 	mov	sp,fp
    e31c:	df000017 	ldw	fp,0(sp)
    e320:	dec00104 	addi	sp,sp,4
    e324:	f800283a 	ret

0000e328 <alt_get_errno>:
{
    e328:	defffe04 	addi	sp,sp,-8
    e32c:	dfc00115 	stw	ra,4(sp)
    e330:	df000015 	stw	fp,0(sp)
    e334:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e338:	d0a00917 	ldw	r2,-32732(gp)
    e33c:	10000326 	beq	r2,zero,e34c <alt_get_errno+0x24>
    e340:	d0a00917 	ldw	r2,-32732(gp)
    e344:	103ee83a 	callr	r2
    e348:	00000106 	br	e350 <alt_get_errno+0x28>
    e34c:	d0a70704 	addi	r2,gp,-25572
}
    e350:	e037883a 	mov	sp,fp
    e354:	dfc00117 	ldw	ra,4(sp)
    e358:	df000017 	ldw	fp,0(sp)
    e35c:	dec00204 	addi	sp,sp,8
    e360:	f800283a 	ret

0000e364 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    e364:	defff904 	addi	sp,sp,-28
    e368:	dfc00615 	stw	ra,24(sp)
    e36c:	df000515 	stw	fp,20(sp)
    e370:	df000504 	addi	fp,sp,20
    e374:	e13ffd15 	stw	r4,-12(fp)
    e378:	e17ffc15 	stw	r5,-16(fp)
    e37c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    e380:	e0bffd17 	ldw	r2,-12(fp)
    e384:	10000916 	blt	r2,zero,e3ac <write+0x48>
    e388:	e0fffd17 	ldw	r3,-12(fp)
    e38c:	1805883a 	mov	r2,r3
    e390:	1085883a 	add	r2,r2,r2
    e394:	10c5883a 	add	r2,r2,r3
    e398:	100490ba 	slli	r2,r2,2
    e39c:	00c00074 	movhi	r3,1
    e3a0:	18c56d04 	addi	r3,r3,5556
    e3a4:	10c5883a 	add	r2,r2,r3
    e3a8:	00000106 	br	e3b0 <write+0x4c>
    e3ac:	0005883a 	mov	r2,zero
    e3b0:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    e3b4:	e0bfff17 	ldw	r2,-4(fp)
    e3b8:	10002126 	beq	r2,zero,e440 <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    e3bc:	e0bfff17 	ldw	r2,-4(fp)
    e3c0:	10800217 	ldw	r2,8(r2)
    e3c4:	108000cc 	andi	r2,r2,3
    e3c8:	10001826 	beq	r2,zero,e42c <write+0xc8>
    e3cc:	e0bfff17 	ldw	r2,-4(fp)
    e3d0:	10800017 	ldw	r2,0(r2)
    e3d4:	10800617 	ldw	r2,24(r2)
    e3d8:	10001426 	beq	r2,zero,e42c <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    e3dc:	e0bfff17 	ldw	r2,-4(fp)
    e3e0:	10800017 	ldw	r2,0(r2)
    e3e4:	10800617 	ldw	r2,24(r2)
    e3e8:	e0fffb17 	ldw	r3,-20(fp)
    e3ec:	180d883a 	mov	r6,r3
    e3f0:	e17ffc17 	ldw	r5,-16(fp)
    e3f4:	e13fff17 	ldw	r4,-4(fp)
    e3f8:	103ee83a 	callr	r2
    e3fc:	e0bffe15 	stw	r2,-8(fp)
    e400:	e0bffe17 	ldw	r2,-8(fp)
    e404:	1000070e 	bge	r2,zero,e424 <write+0xc0>
      {
        ALT_ERRNO = -rval;
    e408:	000e3280 	call	e328 <alt_get_errno>
    e40c:	1007883a 	mov	r3,r2
    e410:	e0bffe17 	ldw	r2,-8(fp)
    e414:	0085c83a 	sub	r2,zero,r2
    e418:	18800015 	stw	r2,0(r3)
        return -1;
    e41c:	00bfffc4 	movi	r2,-1
    e420:	00000c06 	br	e454 <write+0xf0>
      }
      return rval;
    e424:	e0bffe17 	ldw	r2,-8(fp)
    e428:	00000a06 	br	e454 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
    e42c:	000e3280 	call	e328 <alt_get_errno>
    e430:	1007883a 	mov	r3,r2
    e434:	00800344 	movi	r2,13
    e438:	18800015 	stw	r2,0(r3)
    e43c:	00000406 	br	e450 <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    e440:	000e3280 	call	e328 <alt_get_errno>
    e444:	1007883a 	mov	r3,r2
    e448:	00801444 	movi	r2,81
    e44c:	18800015 	stw	r2,0(r3)
  }
  return -1;
    e450:	00bfffc4 	movi	r2,-1
}
    e454:	e037883a 	mov	sp,fp
    e458:	dfc00117 	ldw	ra,4(sp)
    e45c:	df000017 	ldw	fp,0(sp)
    e460:	dec00204 	addi	sp,sp,8
    e464:	f800283a 	ret

0000e468 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    e468:	defffd04 	addi	sp,sp,-12
    e46c:	dfc00215 	stw	ra,8(sp)
    e470:	df000115 	stw	fp,4(sp)
    e474:	df000104 	addi	fp,sp,4
    e478:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    e47c:	d1600604 	addi	r5,gp,-32744
    e480:	e13fff17 	ldw	r4,-4(fp)
    e484:	000f6600 	call	f660 <alt_dev_llist_insert>
}
    e488:	e037883a 	mov	sp,fp
    e48c:	dfc00117 	ldw	ra,4(sp)
    e490:	df000017 	ldw	fp,0(sp)
    e494:	dec00204 	addi	sp,sp,8
    e498:	f800283a 	ret

0000e49c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    e49c:	defffd04 	addi	sp,sp,-12
    e4a0:	dfc00215 	stw	ra,8(sp)
    e4a4:	df000115 	stw	fp,4(sp)
    e4a8:	df000104 	addi	fp,sp,4
    e4ac:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
    e4b0:	00100200 	call	10020 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    e4b4:	00800044 	movi	r2,1
    e4b8:	1001703a 	wrctl	status,r2
}
    e4bc:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
    e4c0:	0001883a 	nop
    e4c4:	e037883a 	mov	sp,fp
    e4c8:	dfc00117 	ldw	ra,4(sp)
    e4cc:	df000017 	ldw	fp,0(sp)
    e4d0:	dec00204 	addi	sp,sp,8
    e4d4:	f800283a 	ret

0000e4d8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    e4d8:	defffe04 	addi	sp,sp,-8
    e4dc:	dfc00115 	stw	ra,4(sp)
    e4e0:	df000015 	stw	fp,0(sp)
    e4e4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_FIFO_INIT ( NIOSE_INPUT, niose_input);
    e4e8:	0001883a 	nop
    ALTERA_AVALON_FIFO_INIT ( NIOS_OUTPUT, nios_output);
    e4ec:	0001883a 	nop
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    e4f0:	01800044 	movi	r6,1
    e4f4:	000b883a 	mov	r5,zero
    e4f8:	01000074 	movhi	r4,1
    e4fc:	2105d704 	addi	r4,r4,5980
    e500:	000eb840 	call	eb84 <altera_avalon_jtag_uart_init>
    e504:	01000074 	movhi	r4,1
    e508:	2105cd04 	addi	r4,r4,5940
    e50c:	000e4680 	call	e468 <alt_dev_reg>
}
    e510:	0001883a 	nop
    e514:	e037883a 	mov	sp,fp
    e518:	dfc00117 	ldw	ra,4(sp)
    e51c:	df000017 	ldw	fp,0(sp)
    e520:	dec00204 	addi	sp,sp,8
    e524:	f800283a 	ret

0000e528 <altera_avalon_fifo_init>:



int altera_avalon_fifo_init(alt_u32 address, alt_u32 ienable,
                            alt_u32 emptymark, alt_u32 fullmark)
{
    e528:	defffa04 	addi	sp,sp,-24
    e52c:	dfc00515 	stw	ra,20(sp)
    e530:	df000415 	stw	fp,16(sp)
    e534:	df000404 	addi	fp,sp,16
    e538:	e13fff15 	stw	r4,-4(fp)
    e53c:	e17ffe15 	stw	r5,-8(fp)
    e540:	e1bffd15 	stw	r6,-12(fp)
    e544:	e1fffc15 	stw	r7,-16(fp)
    if(altera_avalon_fifo_clear_event(address, ALTERA_AVALON_FIFO_EVENT_ALL) != ALTERA_AVALON_FIFO_OK)
    e548:	01400fc4 	movi	r5,63
    e54c:	e13fff17 	ldw	r4,-4(fp)
    e550:	000e6f40 	call	e6f4 <altera_avalon_fifo_clear_event>
    e554:	10000226 	beq	r2,zero,e560 <altera_avalon_fifo_init+0x38>
    {
        return ALTERA_AVALON_FIFO_EVENT_CLEAR_ERROR;
    e558:	00bfffc4 	movi	r2,-1
    e55c:	00001306 	br	e5ac <altera_avalon_fifo_init+0x84>
    }

    if( altera_avalon_fifo_write_ienable(address, ienable) != ALTERA_AVALON_FIFO_OK)
    e560:	e17ffe17 	ldw	r5,-8(fp)
    e564:	e13fff17 	ldw	r4,-4(fp)
    e568:	000e7540 	call	e754 <altera_avalon_fifo_write_ienable>
    e56c:	10000226 	beq	r2,zero,e578 <altera_avalon_fifo_init+0x50>
    {
         return ALTERA_AVALON_FIFO_IENABLE_WRITE_ERROR;
    e570:	00bfff84 	movi	r2,-2
    e574:	00000d06 	br	e5ac <altera_avalon_fifo_init+0x84>
    }

    if( altera_avalon_fifo_write_almostfull(address, fullmark) != ALTERA_AVALON_FIFO_OK)
    e578:	e17ffc17 	ldw	r5,-16(fp)
    e57c:	e13fff17 	ldw	r4,-4(fp)
    e580:	000e7ac0 	call	e7ac <altera_avalon_fifo_write_almostfull>
    e584:	10000226 	beq	r2,zero,e590 <altera_avalon_fifo_init+0x68>
    {
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
    e588:	00bfff44 	movi	r2,-3
    e58c:	00000706 	br	e5ac <altera_avalon_fifo_init+0x84>
    }
  
    if( altera_avalon_fifo_write_almostempty(address, emptymark) != ALTERA_AVALON_FIFO_OK)
    e590:	e17ffd17 	ldw	r5,-12(fp)
    e594:	e13fff17 	ldw	r4,-4(fp)
    e598:	000e8040 	call	e804 <altera_avalon_fifo_write_almostempty>
    e59c:	10000226 	beq	r2,zero,e5a8 <altera_avalon_fifo_init+0x80>
    {
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
    e5a0:	00bfff44 	movi	r2,-3
    e5a4:	00000106 	br	e5ac <altera_avalon_fifo_init+0x84>
    }

    return ALTERA_AVALON_FIFO_OK;
    e5a8:	0005883a 	mov	r2,zero
}
    e5ac:	e037883a 	mov	sp,fp
    e5b0:	dfc00117 	ldw	ra,4(sp)
    e5b4:	df000017 	ldw	fp,0(sp)
    e5b8:	dec00204 	addi	sp,sp,8
    e5bc:	f800283a 	ret

0000e5c0 <altera_avalon_fifo_read_status>:

int altera_avalon_fifo_read_status(alt_u32 address, alt_u32 mask)
{
    e5c0:	defffd04 	addi	sp,sp,-12
    e5c4:	df000215 	stw	fp,8(sp)
    e5c8:	df000204 	addi	fp,sp,8
    e5cc:	e13fff15 	stw	r4,-4(fp)
    e5d0:	e17ffe15 	stw	r5,-8(fp)
    return (IORD_ALTERA_AVALON_FIFO_STATUS(address) & mask);
    e5d4:	e0bfff17 	ldw	r2,-4(fp)
    e5d8:	10800104 	addi	r2,r2,4
    e5dc:	10800037 	ldwio	r2,0(r2)
    e5e0:	1007883a 	mov	r3,r2
    e5e4:	e0bffe17 	ldw	r2,-8(fp)
    e5e8:	1884703a 	and	r2,r3,r2
}
    e5ec:	e037883a 	mov	sp,fp
    e5f0:	df000017 	ldw	fp,0(sp)
    e5f4:	dec00104 	addi	sp,sp,4
    e5f8:	f800283a 	ret

0000e5fc <altera_avalon_fifo_read_ienable>:

int altera_avalon_fifo_read_ienable(alt_u32 address, alt_u32 mask)
{
    e5fc:	defffd04 	addi	sp,sp,-12
    e600:	df000215 	stw	fp,8(sp)
    e604:	df000204 	addi	fp,sp,8
    e608:	e13fff15 	stw	r4,-4(fp)
    e60c:	e17ffe15 	stw	r5,-8(fp)
	
    return (IORD_ALTERA_AVALON_FIFO_IENABLE(address) & mask);
    e610:	e0bfff17 	ldw	r2,-4(fp)
    e614:	10800304 	addi	r2,r2,12
    e618:	10800037 	ldwio	r2,0(r2)
    e61c:	1007883a 	mov	r3,r2
    e620:	e0bffe17 	ldw	r2,-8(fp)
    e624:	1884703a 	and	r2,r3,r2
}
    e628:	e037883a 	mov	sp,fp
    e62c:	df000017 	ldw	fp,0(sp)
    e630:	dec00104 	addi	sp,sp,4
    e634:	f800283a 	ret

0000e638 <altera_avalon_fifo_read_almostfull>:

int altera_avalon_fifo_read_almostfull(alt_u32 address)
{
    e638:	defffe04 	addi	sp,sp,-8
    e63c:	df000115 	stw	fp,4(sp)
    e640:	df000104 	addi	fp,sp,4
    e644:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_ALMOSTFULL(address);
    e648:	e0bfff17 	ldw	r2,-4(fp)
    e64c:	10800404 	addi	r2,r2,16
    e650:	10800037 	ldwio	r2,0(r2)
}
    e654:	e037883a 	mov	sp,fp
    e658:	df000017 	ldw	fp,0(sp)
    e65c:	dec00104 	addi	sp,sp,4
    e660:	f800283a 	ret

0000e664 <altera_avalon_fifo_read_almostempty>:

int altera_avalon_fifo_read_almostempty(alt_u32 address)
{
    e664:	defffe04 	addi	sp,sp,-8
    e668:	df000115 	stw	fp,4(sp)
    e66c:	df000104 	addi	fp,sp,4
    e670:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_ALMOSTEMPTY(address);
    e674:	e0bfff17 	ldw	r2,-4(fp)
    e678:	10800504 	addi	r2,r2,20
    e67c:	10800037 	ldwio	r2,0(r2)
}
    e680:	e037883a 	mov	sp,fp
    e684:	df000017 	ldw	fp,0(sp)
    e688:	dec00104 	addi	sp,sp,4
    e68c:	f800283a 	ret

0000e690 <altera_avalon_fifo_read_event>:

int altera_avalon_fifo_read_event(alt_u32 address, alt_u32 mask)
{
    e690:	defffd04 	addi	sp,sp,-12
    e694:	df000215 	stw	fp,8(sp)
    e698:	df000204 	addi	fp,sp,8
    e69c:	e13fff15 	stw	r4,-4(fp)
    e6a0:	e17ffe15 	stw	r5,-8(fp)
    return (IORD_ALTERA_AVALON_FIFO_EVENT(address) & mask);
    e6a4:	e0bfff17 	ldw	r2,-4(fp)
    e6a8:	10800204 	addi	r2,r2,8
    e6ac:	10800037 	ldwio	r2,0(r2)
    e6b0:	1007883a 	mov	r3,r2
    e6b4:	e0bffe17 	ldw	r2,-8(fp)
    e6b8:	1884703a 	and	r2,r3,r2
}
    e6bc:	e037883a 	mov	sp,fp
    e6c0:	df000017 	ldw	fp,0(sp)
    e6c4:	dec00104 	addi	sp,sp,4
    e6c8:	f800283a 	ret

0000e6cc <altera_avalon_fifo_read_level>:

int altera_avalon_fifo_read_level(alt_u32 address)
{
    e6cc:	defffe04 	addi	sp,sp,-8
    e6d0:	df000115 	stw	fp,4(sp)
    e6d4:	df000104 	addi	fp,sp,4
    e6d8:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_LEVEL(address);
    e6dc:	e0bfff17 	ldw	r2,-4(fp)
    e6e0:	10800037 	ldwio	r2,0(r2)
}
    e6e4:	e037883a 	mov	sp,fp
    e6e8:	df000017 	ldw	fp,0(sp)
    e6ec:	dec00104 	addi	sp,sp,4
    e6f0:	f800283a 	ret

0000e6f4 <altera_avalon_fifo_clear_event>:

int altera_avalon_fifo_clear_event(alt_u32 address, alt_u32 mask)
{
    e6f4:	defffd04 	addi	sp,sp,-12
    e6f8:	df000215 	stw	fp,8(sp)
    e6fc:	df000204 	addi	fp,sp,8
    e700:	e13fff15 	stw	r4,-4(fp)
    e704:	e17ffe15 	stw	r5,-8(fp)
    IOWR_ALTERA_AVALON_FIFO_EVENT(address, mask);
    e708:	e0bfff17 	ldw	r2,-4(fp)
    e70c:	10800204 	addi	r2,r2,8
    e710:	1007883a 	mov	r3,r2
    e714:	e0bffe17 	ldw	r2,-8(fp)
    e718:	18800035 	stwio	r2,0(r3)
    if((IORD_ALTERA_AVALON_FIFO_EVENT(address) & mask) == 0)
    e71c:	e0bfff17 	ldw	r2,-4(fp)
    e720:	10800204 	addi	r2,r2,8
    e724:	10800037 	ldwio	r2,0(r2)
    e728:	1007883a 	mov	r3,r2
    e72c:	e0bffe17 	ldw	r2,-8(fp)
    e730:	1884703a 	and	r2,r3,r2
    e734:	1000021e 	bne	r2,zero,e740 <altera_avalon_fifo_clear_event+0x4c>
        return ALTERA_AVALON_FIFO_OK;
    e738:	0005883a 	mov	r2,zero
    e73c:	00000106 	br	e744 <altera_avalon_fifo_clear_event+0x50>
    else
    return ALTERA_AVALON_FIFO_EVENT_CLEAR_ERROR;
    e740:	00bfffc4 	movi	r2,-1
}
    e744:	e037883a 	mov	sp,fp
    e748:	df000017 	ldw	fp,0(sp)
    e74c:	dec00104 	addi	sp,sp,4
    e750:	f800283a 	ret

0000e754 <altera_avalon_fifo_write_ienable>:

int altera_avalon_fifo_write_ienable(alt_u32 address, alt_u32 mask)
{
    e754:	defffd04 	addi	sp,sp,-12
    e758:	df000215 	stw	fp,8(sp)
    e75c:	df000204 	addi	fp,sp,8
    e760:	e13fff15 	stw	r4,-4(fp)
    e764:	e17ffe15 	stw	r5,-8(fp)
    IOWR_ALTERA_AVALON_FIFO_IENABLE(address, mask);
    e768:	e0bfff17 	ldw	r2,-4(fp)
    e76c:	10800304 	addi	r2,r2,12
    e770:	1007883a 	mov	r3,r2
    e774:	e0bffe17 	ldw	r2,-8(fp)
    e778:	18800035 	stwio	r2,0(r3)
    if(IORD_ALTERA_AVALON_FIFO_IENABLE(address) == mask)
    e77c:	e0bfff17 	ldw	r2,-4(fp)
    e780:	10800304 	addi	r2,r2,12
    e784:	10c00037 	ldwio	r3,0(r2)
    e788:	e0bffe17 	ldw	r2,-8(fp)
    e78c:	1880021e 	bne	r3,r2,e798 <altera_avalon_fifo_write_ienable+0x44>
        return ALTERA_AVALON_FIFO_OK;
    e790:	0005883a 	mov	r2,zero
    e794:	00000106 	br	e79c <altera_avalon_fifo_write_ienable+0x48>
    else
        return ALTERA_AVALON_FIFO_IENABLE_WRITE_ERROR;
    e798:	00bfff84 	movi	r2,-2
}
    e79c:	e037883a 	mov	sp,fp
    e7a0:	df000017 	ldw	fp,0(sp)
    e7a4:	dec00104 	addi	sp,sp,4
    e7a8:	f800283a 	ret

0000e7ac <altera_avalon_fifo_write_almostfull>:

int altera_avalon_fifo_write_almostfull(alt_u32 address, alt_u32 data)
{
    e7ac:	defffd04 	addi	sp,sp,-12
    e7b0:	df000215 	stw	fp,8(sp)
    e7b4:	df000204 	addi	fp,sp,8
    e7b8:	e13fff15 	stw	r4,-4(fp)
    e7bc:	e17ffe15 	stw	r5,-8(fp)
    IOWR_ALTERA_AVALON_FIFO_ALMOSTFULL(address, data);
    e7c0:	e0bfff17 	ldw	r2,-4(fp)
    e7c4:	10800404 	addi	r2,r2,16
    e7c8:	1007883a 	mov	r3,r2
    e7cc:	e0bffe17 	ldw	r2,-8(fp)
    e7d0:	18800035 	stwio	r2,0(r3)
    if(IORD_ALTERA_AVALON_FIFO_ALMOSTFULL(address) == data)
    e7d4:	e0bfff17 	ldw	r2,-4(fp)
    e7d8:	10800404 	addi	r2,r2,16
    e7dc:	10c00037 	ldwio	r3,0(r2)
    e7e0:	e0bffe17 	ldw	r2,-8(fp)
    e7e4:	1880021e 	bne	r3,r2,e7f0 <altera_avalon_fifo_write_almostfull+0x44>
        return ALTERA_AVALON_FIFO_OK;
    e7e8:	0005883a 	mov	r2,zero
    e7ec:	00000106 	br	e7f4 <altera_avalon_fifo_write_almostfull+0x48>
    else
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
    e7f0:	00bfff44 	movi	r2,-3
}
    e7f4:	e037883a 	mov	sp,fp
    e7f8:	df000017 	ldw	fp,0(sp)
    e7fc:	dec00104 	addi	sp,sp,4
    e800:	f800283a 	ret

0000e804 <altera_avalon_fifo_write_almostempty>:

int altera_avalon_fifo_write_almostempty(alt_u32 address, alt_u32 data)
{
    e804:	defffd04 	addi	sp,sp,-12
    e808:	df000215 	stw	fp,8(sp)
    e80c:	df000204 	addi	fp,sp,8
    e810:	e13fff15 	stw	r4,-4(fp)
    e814:	e17ffe15 	stw	r5,-8(fp)
    IOWR_ALTERA_AVALON_FIFO_ALMOSTEMPTY(address, data);
    e818:	e0bfff17 	ldw	r2,-4(fp)
    e81c:	10800504 	addi	r2,r2,20
    e820:	1007883a 	mov	r3,r2
    e824:	e0bffe17 	ldw	r2,-8(fp)
    e828:	18800035 	stwio	r2,0(r3)
    if(IORD_ALTERA_AVALON_FIFO_ALMOSTEMPTY(address) == data)
    e82c:	e0bfff17 	ldw	r2,-4(fp)
    e830:	10800504 	addi	r2,r2,20
    e834:	10c00037 	ldwio	r3,0(r2)
    e838:	e0bffe17 	ldw	r2,-8(fp)
    e83c:	1880021e 	bne	r3,r2,e848 <altera_avalon_fifo_write_almostempty+0x44>
        return ALTERA_AVALON_FIFO_OK;
    e840:	0005883a 	mov	r2,zero
    e844:	00000106 	br	e84c <altera_avalon_fifo_write_almostempty+0x48>
    else
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
    e848:	00bfff44 	movi	r2,-3
}
    e84c:	e037883a 	mov	sp,fp
    e850:	df000017 	ldw	fp,0(sp)
    e854:	dec00104 	addi	sp,sp,4
    e858:	f800283a 	ret

0000e85c <altera_avalon_fifo_write_fifo>:

int altera_avalon_fifo_write_fifo(alt_u32 write_address,
                                  alt_u32 ctrl_address,
                                  alt_u32 data)
{
    e85c:	defffb04 	addi	sp,sp,-20
    e860:	dfc00415 	stw	ra,16(sp)
    e864:	df000315 	stw	fp,12(sp)
    e868:	df000304 	addi	fp,sp,12
    e86c:	e13fff15 	stw	r4,-4(fp)
    e870:	e17ffe15 	stw	r5,-8(fp)
    e874:	e1bffd15 	stw	r6,-12(fp)
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_F_MSK))
    e878:	01400044 	movi	r5,1
    e87c:	e13ffe17 	ldw	r4,-8(fp)
    e880:	000e5c00 	call	e5c0 <altera_avalon_fifo_read_status>
    e884:	1000051e 	bne	r2,zero,e89c <altera_avalon_fifo_write_fifo+0x40>
    {
        IOWR_ALTERA_AVALON_FIFO_DATA(write_address, data);
    e888:	e0bfff17 	ldw	r2,-4(fp)
    e88c:	e0fffd17 	ldw	r3,-12(fp)
    e890:	10c00035 	stwio	r3,0(r2)
        return ALTERA_AVALON_FIFO_OK;
    e894:	0005883a 	mov	r2,zero
    e898:	00000106 	br	e8a0 <altera_avalon_fifo_write_fifo+0x44>
    }
    else
    {
        return ALTERA_AVALON_FIFO_FULL;
    e89c:	00bfff04 	movi	r2,-4
    }
}
    e8a0:	e037883a 	mov	sp,fp
    e8a4:	dfc00117 	ldw	ra,4(sp)
    e8a8:	df000017 	ldw	fp,0(sp)
    e8ac:	dec00204 	addi	sp,sp,8
    e8b0:	f800283a 	ret

0000e8b4 <altera_avalon_read_fifo>:

int altera_avalon_read_fifo(alt_u32 read_address, alt_u32 ctrl_address, int *data)
{
    e8b4:	defffa04 	addi	sp,sp,-24
    e8b8:	dfc00515 	stw	ra,20(sp)
    e8bc:	df000415 	stw	fp,16(sp)
    e8c0:	df000404 	addi	fp,sp,16
    e8c4:	e13ffe15 	stw	r4,-8(fp)
    e8c8:	e17ffd15 	stw	r5,-12(fp)
    e8cc:	e1bffc15 	stw	r6,-16(fp)
    int return_val = 0;
    e8d0:	e03fff15 	stw	zero,-4(fp)
    *data = 0;
    e8d4:	e0bffc17 	ldw	r2,-16(fp)
    e8d8:	10000015 	stw	zero,0(r2)
    
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_E_MSK))
    e8dc:	01400084 	movi	r5,2
    e8e0:	e13ffd17 	ldw	r4,-12(fp)
    e8e4:	000e5c00 	call	e5c0 <altera_avalon_fifo_read_status>
    e8e8:	1000071e 	bne	r2,zero,e908 <altera_avalon_read_fifo+0x54>
    {
        return_val = altera_avalon_fifo_read_level(ctrl_address);
    e8ec:	e13ffd17 	ldw	r4,-12(fp)
    e8f0:	000e6cc0 	call	e6cc <altera_avalon_fifo_read_level>
    e8f4:	e0bfff15 	stw	r2,-4(fp)
        *data = IORD_ALTERA_AVALON_FIFO_DATA(read_address);
    e8f8:	e0bffe17 	ldw	r2,-8(fp)
    e8fc:	10c00037 	ldwio	r3,0(r2)
    e900:	e0bffc17 	ldw	r2,-16(fp)
    e904:	10c00015 	stw	r3,0(r2)
    
    }
    return return_val;
    e908:	e0bfff17 	ldw	r2,-4(fp)
}
    e90c:	e037883a 	mov	sp,fp
    e910:	dfc00117 	ldw	ra,4(sp)
    e914:	df000017 	ldw	fp,0(sp)
    e918:	dec00204 	addi	sp,sp,8
    e91c:	f800283a 	ret

0000e920 <altera_avalon_fifo_read_fifo>:

int altera_avalon_fifo_read_fifo(alt_u32 read_address, alt_u32 ctrl_address)
{
    e920:	defffc04 	addi	sp,sp,-16
    e924:	dfc00315 	stw	ra,12(sp)
    e928:	df000215 	stw	fp,8(sp)
    e92c:	df000204 	addi	fp,sp,8
    e930:	e13fff15 	stw	r4,-4(fp)
    e934:	e17ffe15 	stw	r5,-8(fp)
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_E_MSK))
    e938:	01400084 	movi	r5,2
    e93c:	e13ffe17 	ldw	r4,-8(fp)
    e940:	000e5c00 	call	e5c0 <altera_avalon_fifo_read_status>
    e944:	1000031e 	bne	r2,zero,e954 <altera_avalon_fifo_read_fifo+0x34>
    {
        return IORD_ALTERA_AVALON_FIFO_DATA(read_address);
    e948:	e0bfff17 	ldw	r2,-4(fp)
    e94c:	10800037 	ldwio	r2,0(r2)
    e950:	00000106 	br	e958 <altera_avalon_fifo_read_fifo+0x38>
    }
    return 0;
    e954:	0005883a 	mov	r2,zero
}
    e958:	e037883a 	mov	sp,fp
    e95c:	dfc00117 	ldw	ra,4(sp)
    e960:	df000017 	ldw	fp,0(sp)
    e964:	dec00204 	addi	sp,sp,8
    e968:	f800283a 	ret

0000e96c <altera_avalon_fifo_write_other_info>:

int altera_avalon_fifo_write_other_info(alt_u32 write_address,
					alt_u32 ctrl_address,
					alt_u32 data)
{
    e96c:	defffb04 	addi	sp,sp,-20
    e970:	dfc00415 	stw	ra,16(sp)
    e974:	df000315 	stw	fp,12(sp)
    e978:	df000304 	addi	fp,sp,12
    e97c:	e13fff15 	stw	r4,-4(fp)
    e980:	e17ffe15 	stw	r5,-8(fp)
    e984:	e1bffd15 	stw	r6,-12(fp)
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_F_MSK))
    e988:	01400044 	movi	r5,1
    e98c:	e13ffe17 	ldw	r4,-8(fp)
    e990:	000e5c00 	call	e5c0 <altera_avalon_fifo_read_status>
    e994:	1000071e 	bne	r2,zero,e9b4 <altera_avalon_fifo_write_other_info+0x48>
    {
	IOWR_ALTERA_AVALON_FIFO_OTHER_INFO(write_address, data);
    e998:	e0bfff17 	ldw	r2,-4(fp)
    e99c:	10800104 	addi	r2,r2,4
    e9a0:	1007883a 	mov	r3,r2
    e9a4:	e0bffd17 	ldw	r2,-12(fp)
    e9a8:	18800035 	stwio	r2,0(r3)
	return ALTERA_AVALON_FIFO_OK;
    e9ac:	0005883a 	mov	r2,zero
    e9b0:	00000106 	br	e9b8 <altera_avalon_fifo_write_other_info+0x4c>
    }
    else
    {
	return ALTERA_AVALON_FIFO_FULL;
    e9b4:	00bfff04 	movi	r2,-4
    }
}
    e9b8:	e037883a 	mov	sp,fp
    e9bc:	dfc00117 	ldw	ra,4(sp)
    e9c0:	df000017 	ldw	fp,0(sp)
    e9c4:	dec00204 	addi	sp,sp,8
    e9c8:	f800283a 	ret

0000e9cc <altera_avalon_fifo_read_other_info>:

int altera_avalon_fifo_read_other_info(alt_u32 read_address)
{
    e9cc:	defffe04 	addi	sp,sp,-8
    e9d0:	df000115 	stw	fp,4(sp)
    e9d4:	df000104 	addi	fp,sp,4
    e9d8:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_OTHER_INFO(read_address);
    e9dc:	e0bfff17 	ldw	r2,-4(fp)
    e9e0:	10800104 	addi	r2,r2,4
    e9e4:	10800037 	ldwio	r2,0(r2)
}
    e9e8:	e037883a 	mov	sp,fp
    e9ec:	df000017 	ldw	fp,0(sp)
    e9f0:	dec00104 	addi	sp,sp,4
    e9f4:	f800283a 	ret

0000e9f8 <altera_avalon_fifo_read_backpressure>:

int altera_avalon_fifo_read_backpressure (alt_u32 read_address){
    e9f8:	defffe04 	addi	sp,sp,-8
    e9fc:	df000115 	stw	fp,4(sp)
    ea00:	df000104 	addi	fp,sp,4
    ea04:	e13fff15 	stw	r4,-4(fp)
    // Read data from FIFO directly. If FIFO is empty and backpressure is supported, this call is backpressure.
    return IORD_ALTERA_AVALON_FIFO_DATA(read_address);  
    ea08:	e0bfff17 	ldw	r2,-4(fp)
    ea0c:	10800037 	ldwio	r2,0(r2)
}
    ea10:	e037883a 	mov	sp,fp
    ea14:	df000017 	ldw	fp,0(sp)
    ea18:	dec00104 	addi	sp,sp,4
    ea1c:	f800283a 	ret

0000ea20 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    ea20:	defffa04 	addi	sp,sp,-24
    ea24:	dfc00515 	stw	ra,20(sp)
    ea28:	df000415 	stw	fp,16(sp)
    ea2c:	df000404 	addi	fp,sp,16
    ea30:	e13ffe15 	stw	r4,-8(fp)
    ea34:	e17ffd15 	stw	r5,-12(fp)
    ea38:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    ea3c:	e0bffe17 	ldw	r2,-8(fp)
    ea40:	10800017 	ldw	r2,0(r2)
    ea44:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    ea48:	e0bfff17 	ldw	r2,-4(fp)
    ea4c:	10c00a04 	addi	r3,r2,40
    ea50:	e0bffe17 	ldw	r2,-8(fp)
    ea54:	10800217 	ldw	r2,8(r2)
    ea58:	100f883a 	mov	r7,r2
    ea5c:	e1bffc17 	ldw	r6,-16(fp)
    ea60:	e17ffd17 	ldw	r5,-12(fp)
    ea64:	1809883a 	mov	r4,r3
    ea68:	000f05c0 	call	f05c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    ea6c:	e037883a 	mov	sp,fp
    ea70:	dfc00117 	ldw	ra,4(sp)
    ea74:	df000017 	ldw	fp,0(sp)
    ea78:	dec00204 	addi	sp,sp,8
    ea7c:	f800283a 	ret

0000ea80 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    ea80:	defffa04 	addi	sp,sp,-24
    ea84:	dfc00515 	stw	ra,20(sp)
    ea88:	df000415 	stw	fp,16(sp)
    ea8c:	df000404 	addi	fp,sp,16
    ea90:	e13ffe15 	stw	r4,-8(fp)
    ea94:	e17ffd15 	stw	r5,-12(fp)
    ea98:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    ea9c:	e0bffe17 	ldw	r2,-8(fp)
    eaa0:	10800017 	ldw	r2,0(r2)
    eaa4:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    eaa8:	e0bfff17 	ldw	r2,-4(fp)
    eaac:	10c00a04 	addi	r3,r2,40
    eab0:	e0bffe17 	ldw	r2,-8(fp)
    eab4:	10800217 	ldw	r2,8(r2)
    eab8:	100f883a 	mov	r7,r2
    eabc:	e1bffc17 	ldw	r6,-16(fp)
    eac0:	e17ffd17 	ldw	r5,-12(fp)
    eac4:	1809883a 	mov	r4,r3
    eac8:	000f27c0 	call	f27c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    eacc:	e037883a 	mov	sp,fp
    ead0:	dfc00117 	ldw	ra,4(sp)
    ead4:	df000017 	ldw	fp,0(sp)
    ead8:	dec00204 	addi	sp,sp,8
    eadc:	f800283a 	ret

0000eae0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    eae0:	defffc04 	addi	sp,sp,-16
    eae4:	dfc00315 	stw	ra,12(sp)
    eae8:	df000215 	stw	fp,8(sp)
    eaec:	df000204 	addi	fp,sp,8
    eaf0:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    eaf4:	e0bffe17 	ldw	r2,-8(fp)
    eaf8:	10800017 	ldw	r2,0(r2)
    eafc:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    eb00:	e0bfff17 	ldw	r2,-4(fp)
    eb04:	10c00a04 	addi	r3,r2,40
    eb08:	e0bffe17 	ldw	r2,-8(fp)
    eb0c:	10800217 	ldw	r2,8(r2)
    eb10:	100b883a 	mov	r5,r2
    eb14:	1809883a 	mov	r4,r3
    eb18:	000ef000 	call	ef00 <altera_avalon_jtag_uart_close>
}
    eb1c:	e037883a 	mov	sp,fp
    eb20:	dfc00117 	ldw	ra,4(sp)
    eb24:	df000017 	ldw	fp,0(sp)
    eb28:	dec00204 	addi	sp,sp,8
    eb2c:	f800283a 	ret

0000eb30 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    eb30:	defffa04 	addi	sp,sp,-24
    eb34:	dfc00515 	stw	ra,20(sp)
    eb38:	df000415 	stw	fp,16(sp)
    eb3c:	df000404 	addi	fp,sp,16
    eb40:	e13ffe15 	stw	r4,-8(fp)
    eb44:	e17ffd15 	stw	r5,-12(fp)
    eb48:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    eb4c:	e0bffe17 	ldw	r2,-8(fp)
    eb50:	10800017 	ldw	r2,0(r2)
    eb54:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    eb58:	e0bfff17 	ldw	r2,-4(fp)
    eb5c:	10800a04 	addi	r2,r2,40
    eb60:	e1bffc17 	ldw	r6,-16(fp)
    eb64:	e17ffd17 	ldw	r5,-12(fp)
    eb68:	1009883a 	mov	r4,r2
    eb6c:	000ef680 	call	ef68 <altera_avalon_jtag_uart_ioctl>
}
    eb70:	e037883a 	mov	sp,fp
    eb74:	dfc00117 	ldw	ra,4(sp)
    eb78:	df000017 	ldw	fp,0(sp)
    eb7c:	dec00204 	addi	sp,sp,8
    eb80:	f800283a 	ret

0000eb84 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    eb84:	defffa04 	addi	sp,sp,-24
    eb88:	dfc00515 	stw	ra,20(sp)
    eb8c:	df000415 	stw	fp,16(sp)
    eb90:	df000404 	addi	fp,sp,16
    eb94:	e13fff15 	stw	r4,-4(fp)
    eb98:	e17ffe15 	stw	r5,-8(fp)
    eb9c:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    eba0:	e0bfff17 	ldw	r2,-4(fp)
    eba4:	00c00044 	movi	r3,1
    eba8:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    ebac:	e0bfff17 	ldw	r2,-4(fp)
    ebb0:	10800017 	ldw	r2,0(r2)
    ebb4:	10800104 	addi	r2,r2,4
    ebb8:	1007883a 	mov	r3,r2
    ebbc:	e0bfff17 	ldw	r2,-4(fp)
    ebc0:	10800817 	ldw	r2,32(r2)
    ebc4:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    ebc8:	e0bffe17 	ldw	r2,-8(fp)
    ebcc:	e0fffd17 	ldw	r3,-12(fp)
    ebd0:	d8000015 	stw	zero,0(sp)
    ebd4:	e1ffff17 	ldw	r7,-4(fp)
    ebd8:	01800074 	movhi	r6,1
    ebdc:	31bb1104 	addi	r6,r6,-5052
    ebe0:	180b883a 	mov	r5,r3
    ebe4:	1009883a 	mov	r4,r2
    ebe8:	000f7f00 	call	f7f0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    ebec:	e0bfff17 	ldw	r2,-4(fp)
    ebf0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    ebf4:	e0bfff17 	ldw	r2,-4(fp)
    ebf8:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    ebfc:	d0e70d17 	ldw	r3,-25548(gp)
    ec00:	e1ffff17 	ldw	r7,-4(fp)
    ec04:	01800074 	movhi	r6,1
    ec08:	31bb9604 	addi	r6,r6,-4520
    ec0c:	180b883a 	mov	r5,r3
    ec10:	1009883a 	mov	r4,r2
    ec14:	000f4a40 	call	f4a4 <alt_alarm_start>
    ec18:	1000040e 	bge	r2,zero,ec2c <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    ec1c:	e0ffff17 	ldw	r3,-4(fp)
    ec20:	00a00034 	movhi	r2,32768
    ec24:	10bfffc4 	addi	r2,r2,-1
    ec28:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    ec2c:	0001883a 	nop
    ec30:	e037883a 	mov	sp,fp
    ec34:	dfc00117 	ldw	ra,4(sp)
    ec38:	df000017 	ldw	fp,0(sp)
    ec3c:	dec00204 	addi	sp,sp,8
    ec40:	f800283a 	ret

0000ec44 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    ec44:	defff704 	addi	sp,sp,-36
    ec48:	df000815 	stw	fp,32(sp)
    ec4c:	df000804 	addi	fp,sp,32
    ec50:	e13ff815 	stw	r4,-32(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    ec54:	e0bff817 	ldw	r2,-32(fp)
    ec58:	e0bffc15 	stw	r2,-16(fp)
  unsigned int base = sp->base;
    ec5c:	e0bffc17 	ldw	r2,-16(fp)
    ec60:	10800017 	ldw	r2,0(r2)
    ec64:	e0bffb15 	stw	r2,-20(fp)
  unsigned int postflag=0;
    ec68:	e03fff15 	stw	zero,-4(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    ec6c:	e0bffb17 	ldw	r2,-20(fp)
    ec70:	10800104 	addi	r2,r2,4
    ec74:	10800037 	ldwio	r2,0(r2)
    ec78:	e0bffa15 	stw	r2,-24(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    ec7c:	e0bffa17 	ldw	r2,-24(fp)
    ec80:	1080c00c 	andi	r2,r2,768
    ec84:	10006e26 	beq	r2,zero,ee40 <altera_avalon_jtag_uart_irq+0x1fc>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    ec88:	e0bffa17 	ldw	r2,-24(fp)
    ec8c:	1080400c 	andi	r2,r2,256
    ec90:	10003526 	beq	r2,zero,ed68 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    ec94:	00800074 	movhi	r2,1
    ec98:	e0bffe15 	stw	r2,-8(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    ec9c:	e0bffc17 	ldw	r2,-16(fp)
    eca0:	10800a17 	ldw	r2,40(r2)
    eca4:	10800044 	addi	r2,r2,1
    eca8:	1081ffcc 	andi	r2,r2,2047
    ecac:	e0bff915 	stw	r2,-28(fp)
        if (next == sp->rx_out)
    ecb0:	e0bffc17 	ldw	r2,-16(fp)
    ecb4:	10800b17 	ldw	r2,44(r2)
    ecb8:	e0fff917 	ldw	r3,-28(fp)
    ecbc:	18801526 	beq	r3,r2,ed14 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    ecc0:	e0bffb17 	ldw	r2,-20(fp)
    ecc4:	10800037 	ldwio	r2,0(r2)
    ecc8:	e0bffe15 	stw	r2,-8(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    eccc:	e0bffe17 	ldw	r2,-8(fp)
    ecd0:	10a0000c 	andi	r2,r2,32768
    ecd4:	10001126 	beq	r2,zero,ed1c <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    ecd8:	e0bffc17 	ldw	r2,-16(fp)
    ecdc:	10800a17 	ldw	r2,40(r2)
    ece0:	e0fffe17 	ldw	r3,-8(fp)
    ece4:	1809883a 	mov	r4,r3
    ece8:	e0fffc17 	ldw	r3,-16(fp)
    ecec:	1885883a 	add	r2,r3,r2
    ecf0:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    ecf4:	e0bffc17 	ldw	r2,-16(fp)
    ecf8:	10800a17 	ldw	r2,40(r2)
    ecfc:	10800044 	addi	r2,r2,1
    ed00:	10c1ffcc 	andi	r3,r2,2047
    ed04:	e0bffc17 	ldw	r2,-16(fp)
    ed08:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
    ed0c:	0001883a 	nop
      {
    ed10:	003fe206 	br	ec9c <altera_avalon_jtag_uart_irq+0x58>
          break;
    ed14:	0001883a 	nop
    ed18:	00000106 	br	ed20 <altera_avalon_jtag_uart_irq+0xdc>
          break;
    ed1c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, ALT_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    ed20:	e0bffe17 	ldw	r2,-8(fp)
    ed24:	00ffffd4 	movui	r3,65535
    ed28:	18800f2e 	bgeu	r3,r2,ed68 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    ed2c:	e0bffc17 	ldw	r2,-16(fp)
    ed30:	10c00817 	ldw	r3,32(r2)
    ed34:	00bfff84 	movi	r2,-2
    ed38:	1886703a 	and	r3,r3,r2
    ed3c:	e0bffc17 	ldw	r2,-16(fp)
    ed40:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    ed44:	e0bffb17 	ldw	r2,-20(fp)
    ed48:	10800104 	addi	r2,r2,4
    ed4c:	1007883a 	mov	r3,r2
    ed50:	e0bffc17 	ldw	r2,-16(fp)
    ed54:	10800817 	ldw	r2,32(r2)
    ed58:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    ed5c:	e0bffb17 	ldw	r2,-20(fp)
    ed60:	10800104 	addi	r2,r2,4
    ed64:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    ed68:	e0bffa17 	ldw	r2,-24(fp)
    ed6c:	1080800c 	andi	r2,r2,512
    ed70:	103fbe26 	beq	r2,zero,ec6c <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    ed74:	e0bffa17 	ldw	r2,-24(fp)
    ed78:	1004d43a 	srli	r2,r2,16
    ed7c:	e0bffd15 	stw	r2,-12(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    ed80:	00001506 	br	edd8 <altera_avalon_jtag_uart_irq+0x194>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    ed84:	e0bffb17 	ldw	r2,-20(fp)
    ed88:	e0fffc17 	ldw	r3,-16(fp)
    ed8c:	18c00d17 	ldw	r3,52(r3)
    ed90:	e13ffc17 	ldw	r4,-16(fp)
    ed94:	20c7883a 	add	r3,r4,r3
    ed98:	18c20e03 	ldbu	r3,2104(r3)
    ed9c:	18c03fcc 	andi	r3,r3,255
    eda0:	18c0201c 	xori	r3,r3,128
    eda4:	18ffe004 	addi	r3,r3,-128
    eda8:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    edac:	e0bffc17 	ldw	r2,-16(fp)
    edb0:	10800d17 	ldw	r2,52(r2)
    edb4:	10800044 	addi	r2,r2,1
    edb8:	10c1ffcc 	andi	r3,r2,2047
    edbc:	e0bffc17 	ldw	r2,-16(fp)
    edc0:	10c00d15 	stw	r3,52(r2)
        
        /* indicate that the ALT_FLAG_POST routine must be called */
        postflag=1;
    edc4:	00800044 	movi	r2,1
    edc8:	e0bfff15 	stw	r2,-4(fp)

        space--;
    edcc:	e0bffd17 	ldw	r2,-12(fp)
    edd0:	10bfffc4 	addi	r2,r2,-1
    edd4:	e0bffd15 	stw	r2,-12(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
    edd8:	e0bffd17 	ldw	r2,-12(fp)
    eddc:	10000526 	beq	r2,zero,edf4 <altera_avalon_jtag_uart_irq+0x1b0>
    ede0:	e0bffc17 	ldw	r2,-16(fp)
    ede4:	10c00d17 	ldw	r3,52(r2)
    ede8:	e0bffc17 	ldw	r2,-16(fp)
    edec:	10800c17 	ldw	r2,48(r2)
    edf0:	18bfe41e 	bne	r3,r2,ed84 <altera_avalon_jtag_uart_irq+0x140>
      {
        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, ALT_FLAG_SET);
      }

      if (space > 0)
    edf4:	e0bffd17 	ldw	r2,-12(fp)
    edf8:	103f9c26 	beq	r2,zero,ec6c <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    edfc:	e0bffc17 	ldw	r2,-16(fp)
    ee00:	10c00817 	ldw	r3,32(r2)
    ee04:	00bfff44 	movi	r2,-3
    ee08:	1886703a 	and	r3,r3,r2
    ee0c:	e0bffc17 	ldw	r2,-16(fp)
    ee10:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    ee14:	e0bffc17 	ldw	r2,-16(fp)
    ee18:	10800017 	ldw	r2,0(r2)
    ee1c:	10800104 	addi	r2,r2,4
    ee20:	1007883a 	mov	r3,r2
    ee24:	e0bffc17 	ldw	r2,-16(fp)
    ee28:	10800817 	ldw	r2,32(r2)
    ee2c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    ee30:	e0bffb17 	ldw	r2,-20(fp)
    ee34:	10800104 	addi	r2,r2,4
    ee38:	10800037 	ldwio	r2,0(r2)
  {
    ee3c:	003f8b06 	br	ec6c <altera_avalon_jtag_uart_irq+0x28>
      break;
    ee40:	0001883a 	nop
      }
    }
  }
}
    ee44:	0001883a 	nop
    ee48:	e037883a 	mov	sp,fp
    ee4c:	df000017 	ldw	fp,0(sp)
    ee50:	dec00104 	addi	sp,sp,4
    ee54:	f800283a 	ret

0000ee58 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    ee58:	defffc04 	addi	sp,sp,-16
    ee5c:	df000315 	stw	fp,12(sp)
    ee60:	df000304 	addi	fp,sp,12
    ee64:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    ee68:	e0bffd17 	ldw	r2,-12(fp)
    ee6c:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    ee70:	e0bfff17 	ldw	r2,-4(fp)
    ee74:	10800017 	ldw	r2,0(r2)
    ee78:	10800104 	addi	r2,r2,4
    ee7c:	10800037 	ldwio	r2,0(r2)
    ee80:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    ee84:	e0bffe17 	ldw	r2,-8(fp)
    ee88:	1081000c 	andi	r2,r2,1024
    ee8c:	10000b26 	beq	r2,zero,eebc <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    ee90:	e0bfff17 	ldw	r2,-4(fp)
    ee94:	10800017 	ldw	r2,0(r2)
    ee98:	10800104 	addi	r2,r2,4
    ee9c:	1007883a 	mov	r3,r2
    eea0:	e0bfff17 	ldw	r2,-4(fp)
    eea4:	10800817 	ldw	r2,32(r2)
    eea8:	10810014 	ori	r2,r2,1024
    eeac:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    eeb0:	e0bfff17 	ldw	r2,-4(fp)
    eeb4:	10000915 	stw	zero,36(r2)
    eeb8:	00000c06 	br	eeec <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    eebc:	e0bfff17 	ldw	r2,-4(fp)
    eec0:	10c00917 	ldw	r3,36(r2)
    eec4:	00a00034 	movhi	r2,32768
    eec8:	10bfff04 	addi	r2,r2,-4
    eecc:	10c00736 	bltu	r2,r3,eeec <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
    eed0:	e0bfff17 	ldw	r2,-4(fp)
    eed4:	10800917 	ldw	r2,36(r2)
    eed8:	10c00044 	addi	r3,r2,1
    eedc:	e0bfff17 	ldw	r2,-4(fp)
    eee0:	10c00915 	stw	r3,36(r2)
    
    if (sp->host_inactive >= sp->timeout) {
    eee4:	e0bfff17 	ldw	r2,-4(fp)
    eee8:	10800917 	ldw	r2,36(r2)
    eeec:	d0a70d17 	ldw	r2,-25548(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, ALT_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    eef0:	e037883a 	mov	sp,fp
    eef4:	df000017 	ldw	fp,0(sp)
    eef8:	dec00104 	addi	sp,sp,4
    eefc:	f800283a 	ret

0000ef00 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    ef00:	defffd04 	addi	sp,sp,-12
    ef04:	df000215 	stw	fp,8(sp)
    ef08:	df000204 	addi	fp,sp,8
    ef0c:	e13fff15 	stw	r4,-4(fp)
    ef10:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    ef14:	00000506 	br	ef2c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    ef18:	e0bffe17 	ldw	r2,-8(fp)
    ef1c:	1090000c 	andi	r2,r2,16384
    ef20:	10000226 	beq	r2,zero,ef2c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    ef24:	00bffd44 	movi	r2,-11
    ef28:	00000b06 	br	ef58 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    ef2c:	e0bfff17 	ldw	r2,-4(fp)
    ef30:	10c00d17 	ldw	r3,52(r2)
    ef34:	e0bfff17 	ldw	r2,-4(fp)
    ef38:	10800c17 	ldw	r2,48(r2)
    ef3c:	18800526 	beq	r3,r2,ef54 <altera_avalon_jtag_uart_close+0x54>
    ef40:	e0bfff17 	ldw	r2,-4(fp)
    ef44:	10c00917 	ldw	r3,36(r2)
    ef48:	e0bfff17 	ldw	r2,-4(fp)
    ef4c:	10800117 	ldw	r2,4(r2)
    ef50:	18bff136 	bltu	r3,r2,ef18 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
    ef54:	0005883a 	mov	r2,zero
}
    ef58:	e037883a 	mov	sp,fp
    ef5c:	df000017 	ldw	fp,0(sp)
    ef60:	dec00104 	addi	sp,sp,4
    ef64:	f800283a 	ret

0000ef68 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    ef68:	defffa04 	addi	sp,sp,-24
    ef6c:	df000515 	stw	fp,20(sp)
    ef70:	df000504 	addi	fp,sp,20
    ef74:	e13ffd15 	stw	r4,-12(fp)
    ef78:	e17ffc15 	stw	r5,-16(fp)
    ef7c:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
    ef80:	00bff9c4 	movi	r2,-25
    ef84:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
    ef88:	e0bffc17 	ldw	r2,-16(fp)
    ef8c:	109a8060 	cmpeqi	r2,r2,27137
    ef90:	1000041e 	bne	r2,zero,efa4 <altera_avalon_jtag_uart_ioctl+0x3c>
    ef94:	e0bffc17 	ldw	r2,-16(fp)
    ef98:	109a80a0 	cmpeqi	r2,r2,27138
    ef9c:	1000181e 	bne	r2,zero,f000 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
    efa0:	00002906 	br	f048 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
    efa4:	e0bffd17 	ldw	r2,-12(fp)
    efa8:	10c00117 	ldw	r3,4(r2)
    efac:	00a00034 	movhi	r2,32768
    efb0:	10bfffc4 	addi	r2,r2,-1
    efb4:	18802126 	beq	r3,r2,f03c <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
    efb8:	e0bffb17 	ldw	r2,-20(fp)
    efbc:	10800017 	ldw	r2,0(r2)
    efc0:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    efc4:	e0bffe17 	ldw	r2,-8(fp)
    efc8:	10800090 	cmplti	r2,r2,2
    efcc:	1000061e 	bne	r2,zero,efe8 <altera_avalon_jtag_uart_ioctl+0x80>
    efd0:	e0fffe17 	ldw	r3,-8(fp)
    efd4:	00a00034 	movhi	r2,32768
    efd8:	10bfffc4 	addi	r2,r2,-1
    efdc:	18800226 	beq	r3,r2,efe8 <altera_avalon_jtag_uart_ioctl+0x80>
    efe0:	e0bffe17 	ldw	r2,-8(fp)
    efe4:	00000206 	br	eff0 <altera_avalon_jtag_uart_ioctl+0x88>
    efe8:	00a00034 	movhi	r2,32768
    efec:	10bfff84 	addi	r2,r2,-2
    eff0:	e0fffd17 	ldw	r3,-12(fp)
    eff4:	18800115 	stw	r2,4(r3)
      rc = 0;
    eff8:	e03fff15 	stw	zero,-4(fp)
    break;
    effc:	00000f06 	br	f03c <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
    f000:	e0bffd17 	ldw	r2,-12(fp)
    f004:	10c00117 	ldw	r3,4(r2)
    f008:	00a00034 	movhi	r2,32768
    f00c:	10bfffc4 	addi	r2,r2,-1
    f010:	18800c26 	beq	r3,r2,f044 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    f014:	e0bffd17 	ldw	r2,-12(fp)
    f018:	10c00917 	ldw	r3,36(r2)
    f01c:	e0bffd17 	ldw	r2,-12(fp)
    f020:	10800117 	ldw	r2,4(r2)
    f024:	1885803a 	cmpltu	r2,r3,r2
    f028:	10c03fcc 	andi	r3,r2,255
    f02c:	e0bffb17 	ldw	r2,-20(fp)
    f030:	10c00015 	stw	r3,0(r2)
      rc = 0;
    f034:	e03fff15 	stw	zero,-4(fp)
    break;
    f038:	00000206 	br	f044 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
    f03c:	0001883a 	nop
    f040:	00000106 	br	f048 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
    f044:	0001883a 	nop
  }

  return rc;
    f048:	e0bfff17 	ldw	r2,-4(fp)
}
    f04c:	e037883a 	mov	sp,fp
    f050:	df000017 	ldw	fp,0(sp)
    f054:	dec00104 	addi	sp,sp,4
    f058:	f800283a 	ret

0000f05c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    f05c:	defff304 	addi	sp,sp,-52
    f060:	dfc00c15 	stw	ra,48(sp)
    f064:	df000b15 	stw	fp,44(sp)
    f068:	df000b04 	addi	fp,sp,44
    f06c:	e13ff815 	stw	r4,-32(fp)
    f070:	e17ff715 	stw	r5,-36(fp)
    f074:	e1bff615 	stw	r6,-40(fp)
    f078:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
    f07c:	e0bff717 	ldw	r2,-36(fp)
    f080:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    f084:	00004706 	br	f1a4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    f088:	e0bff817 	ldw	r2,-32(fp)
    f08c:	10800a17 	ldw	r2,40(r2)
    f090:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
    f094:	e0bff817 	ldw	r2,-32(fp)
    f098:	10800b17 	ldw	r2,44(r2)
    f09c:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
    f0a0:	e0fffd17 	ldw	r3,-12(fp)
    f0a4:	e0bffc17 	ldw	r2,-16(fp)
    f0a8:	18800536 	bltu	r3,r2,f0c0 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    f0ac:	e0fffd17 	ldw	r3,-12(fp)
    f0b0:	e0bffc17 	ldw	r2,-16(fp)
    f0b4:	1885c83a 	sub	r2,r3,r2
    f0b8:	e0bffe15 	stw	r2,-8(fp)
    f0bc:	00000406 	br	f0d0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    f0c0:	00c20004 	movi	r3,2048
    f0c4:	e0bffc17 	ldw	r2,-16(fp)
    f0c8:	1885c83a 	sub	r2,r3,r2
    f0cc:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
    f0d0:	e0bffe17 	ldw	r2,-8(fp)
    f0d4:	10001e26 	beq	r2,zero,f150 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    f0d8:	e0fff617 	ldw	r3,-40(fp)
    f0dc:	e0bffe17 	ldw	r2,-8(fp)
    f0e0:	1880022e 	bgeu	r3,r2,f0ec <altera_avalon_jtag_uart_read+0x90>
        n = space;
    f0e4:	e0bff617 	ldw	r2,-40(fp)
    f0e8:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    f0ec:	e0bff817 	ldw	r2,-32(fp)
    f0f0:	10c00e04 	addi	r3,r2,56
    f0f4:	e0bffc17 	ldw	r2,-16(fp)
    f0f8:	1885883a 	add	r2,r3,r2
    f0fc:	e1bffe17 	ldw	r6,-8(fp)
    f100:	100b883a 	mov	r5,r2
    f104:	e13fff17 	ldw	r4,-4(fp)
    f108:	00061100 	call	6110 <memcpy>
      ptr   += n;
    f10c:	e0ffff17 	ldw	r3,-4(fp)
    f110:	e0bffe17 	ldw	r2,-8(fp)
    f114:	1885883a 	add	r2,r3,r2
    f118:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
    f11c:	e0fff617 	ldw	r3,-40(fp)
    f120:	e0bffe17 	ldw	r2,-8(fp)
    f124:	1885c83a 	sub	r2,r3,r2
    f128:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    f12c:	e0fffc17 	ldw	r3,-16(fp)
    f130:	e0bffe17 	ldw	r2,-8(fp)
    f134:	1885883a 	add	r2,r3,r2
    f138:	10c1ffcc 	andi	r3,r2,2047
    f13c:	e0bff817 	ldw	r2,-32(fp)
    f140:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    f144:	e0bff617 	ldw	r2,-40(fp)
    f148:	00bfcf16 	blt	zero,r2,f088 <altera_avalon_jtag_uart_read+0x2c>
    f14c:	00000106 	br	f154 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
    f150:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
    f154:	e0ffff17 	ldw	r3,-4(fp)
    f158:	e0bff717 	ldw	r2,-36(fp)
    f15c:	1880141e 	bne	r3,r2,f1b0 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    f160:	e0bff517 	ldw	r2,-44(fp)
    f164:	1090000c 	andi	r2,r2,16384
    f168:	1000131e 	bne	r2,zero,f1b8 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    f16c:	0001883a 	nop
    f170:	e0bff817 	ldw	r2,-32(fp)
    f174:	10800a17 	ldw	r2,40(r2)
    f178:	e0fffd17 	ldw	r3,-12(fp)
    f17c:	1880051e 	bne	r3,r2,f194 <altera_avalon_jtag_uart_read+0x138>
    f180:	e0bff817 	ldw	r2,-32(fp)
    f184:	10c00917 	ldw	r3,36(r2)
    f188:	e0bff817 	ldw	r2,-32(fp)
    f18c:	10800117 	ldw	r2,4(r2)
    f190:	18bff736 	bltu	r3,r2,f170 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    f194:	e0bff817 	ldw	r2,-32(fp)
    f198:	10800a17 	ldw	r2,40(r2)
    f19c:	e0fffd17 	ldw	r3,-12(fp)
    f1a0:	18800726 	beq	r3,r2,f1c0 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
    f1a4:	e0bff617 	ldw	r2,-40(fp)
    f1a8:	00bfb716 	blt	zero,r2,f088 <altera_avalon_jtag_uart_read+0x2c>
    f1ac:	00000506 	br	f1c4 <altera_avalon_jtag_uart_read+0x168>
      break;
    f1b0:	0001883a 	nop
    f1b4:	00000306 	br	f1c4 <altera_avalon_jtag_uart_read+0x168>
      break;
    f1b8:	0001883a 	nop
    f1bc:	00000106 	br	f1c4 <altera_avalon_jtag_uart_read+0x168>
      break;
    f1c0:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    f1c4:	e0ffff17 	ldw	r3,-4(fp)
    f1c8:	e0bff717 	ldw	r2,-36(fp)
    f1cc:	18801926 	beq	r3,r2,f234 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
    f1d0:	0005303a 	rdctl	r2,status
    f1d4:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f1d8:	e0fff917 	ldw	r3,-28(fp)
    f1dc:	00bfff84 	movi	r2,-2
    f1e0:	1884703a 	and	r2,r3,r2
    f1e4:	1001703a 	wrctl	status,r2
  return context;
    f1e8:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    f1ec:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    f1f0:	e0bff817 	ldw	r2,-32(fp)
    f1f4:	10800817 	ldw	r2,32(r2)
    f1f8:	10c00054 	ori	r3,r2,1
    f1fc:	e0bff817 	ldw	r2,-32(fp)
    f200:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    f204:	e0bff817 	ldw	r2,-32(fp)
    f208:	10800017 	ldw	r2,0(r2)
    f20c:	10800104 	addi	r2,r2,4
    f210:	1007883a 	mov	r3,r2
    f214:	e0bff817 	ldw	r2,-32(fp)
    f218:	10800817 	ldw	r2,32(r2)
    f21c:	18800035 	stwio	r2,0(r3)
    f220:	e0bffb17 	ldw	r2,-20(fp)
    f224:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
    f228:	e0bffa17 	ldw	r2,-24(fp)
    f22c:	1001703a 	wrctl	status,r2
}
    f230:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    f234:	e0ffff17 	ldw	r3,-4(fp)
    f238:	e0bff717 	ldw	r2,-36(fp)
    f23c:	18800426 	beq	r3,r2,f250 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
    f240:	e0ffff17 	ldw	r3,-4(fp)
    f244:	e0bff717 	ldw	r2,-36(fp)
    f248:	1885c83a 	sub	r2,r3,r2
    f24c:	00000606 	br	f268 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
    f250:	e0bff517 	ldw	r2,-44(fp)
    f254:	1090000c 	andi	r2,r2,16384
    f258:	10000226 	beq	r2,zero,f264 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
    f25c:	00bffd44 	movi	r2,-11
    f260:	00000106 	br	f268 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
    f264:	00bffec4 	movi	r2,-5
}
    f268:	e037883a 	mov	sp,fp
    f26c:	dfc00117 	ldw	ra,4(sp)
    f270:	df000017 	ldw	fp,0(sp)
    f274:	dec00204 	addi	sp,sp,8
    f278:	f800283a 	ret

0000f27c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    f27c:	defff304 	addi	sp,sp,-52
    f280:	dfc00c15 	stw	ra,48(sp)
    f284:	df000b15 	stw	fp,44(sp)
    f288:	df000b04 	addi	fp,sp,44
    f28c:	e13ff815 	stw	r4,-32(fp)
    f290:	e17ff715 	stw	r5,-36(fp)
    f294:	e1bff615 	stw	r6,-40(fp)
    f298:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    f29c:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    f2a0:	e0bff717 	ldw	r2,-36(fp)
    f2a4:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    f2a8:	00003706 	br	f388 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    f2ac:	e0bff817 	ldw	r2,-32(fp)
    f2b0:	10800c17 	ldw	r2,48(r2)
    f2b4:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
    f2b8:	e0bff817 	ldw	r2,-32(fp)
    f2bc:	10800d17 	ldw	r2,52(r2)
    f2c0:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
    f2c4:	e0fffc17 	ldw	r3,-16(fp)
    f2c8:	e0bfff17 	ldw	r2,-4(fp)
    f2cc:	1880062e 	bgeu	r3,r2,f2e8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    f2d0:	e0ffff17 	ldw	r3,-4(fp)
    f2d4:	e0bffc17 	ldw	r2,-16(fp)
    f2d8:	1885c83a 	sub	r2,r3,r2
    f2dc:	10bfffc4 	addi	r2,r2,-1
    f2e0:	e0bffe15 	stw	r2,-8(fp)
    f2e4:	00000b06 	br	f314 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    f2e8:	e0bfff17 	ldw	r2,-4(fp)
    f2ec:	10000526 	beq	r2,zero,f304 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    f2f0:	00c20004 	movi	r3,2048
    f2f4:	e0bffc17 	ldw	r2,-16(fp)
    f2f8:	1885c83a 	sub	r2,r3,r2
    f2fc:	e0bffe15 	stw	r2,-8(fp)
    f300:	00000406 	br	f314 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    f304:	00c1ffc4 	movi	r3,2047
    f308:	e0bffc17 	ldw	r2,-16(fp)
    f30c:	1885c83a 	sub	r2,r3,r2
    f310:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
    f314:	e0bffe17 	ldw	r2,-8(fp)
    f318:	10001e26 	beq	r2,zero,f394 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    f31c:	e0fff617 	ldw	r3,-40(fp)
    f320:	e0bffe17 	ldw	r2,-8(fp)
    f324:	1880022e 	bgeu	r3,r2,f330 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    f328:	e0bff617 	ldw	r2,-40(fp)
    f32c:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    f330:	e0bff817 	ldw	r2,-32(fp)
    f334:	10c20e04 	addi	r3,r2,2104
    f338:	e0bffc17 	ldw	r2,-16(fp)
    f33c:	1885883a 	add	r2,r3,r2
    f340:	e1bffe17 	ldw	r6,-8(fp)
    f344:	e17ff717 	ldw	r5,-36(fp)
    f348:	1009883a 	mov	r4,r2
    f34c:	00061100 	call	6110 <memcpy>
      ptr   += n;
    f350:	e0fff717 	ldw	r3,-36(fp)
    f354:	e0bffe17 	ldw	r2,-8(fp)
    f358:	1885883a 	add	r2,r3,r2
    f35c:	e0bff715 	stw	r2,-36(fp)
      count -= n;
    f360:	e0fff617 	ldw	r3,-40(fp)
    f364:	e0bffe17 	ldw	r2,-8(fp)
    f368:	1885c83a 	sub	r2,r3,r2
    f36c:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    f370:	e0fffc17 	ldw	r3,-16(fp)
    f374:	e0bffe17 	ldw	r2,-8(fp)
    f378:	1885883a 	add	r2,r3,r2
    f37c:	10c1ffcc 	andi	r3,r2,2047
    f380:	e0bff817 	ldw	r2,-32(fp)
    f384:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
    f388:	e0bff617 	ldw	r2,-40(fp)
    f38c:	00bfc716 	blt	zero,r2,f2ac <altera_avalon_jtag_uart_write+0x30>
    f390:	00000106 	br	f398 <altera_avalon_jtag_uart_write+0x11c>
        break;
    f394:	0001883a 	nop
  NIOS2_READ_STATUS (context);
    f398:	0005303a 	rdctl	r2,status
    f39c:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f3a0:	e0fff917 	ldw	r3,-28(fp)
    f3a4:	00bfff84 	movi	r2,-2
    f3a8:	1884703a 	and	r2,r3,r2
    f3ac:	1001703a 	wrctl	status,r2
  return context;
    f3b0:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    f3b4:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    f3b8:	e0bff817 	ldw	r2,-32(fp)
    f3bc:	10800817 	ldw	r2,32(r2)
    f3c0:	10c00094 	ori	r3,r2,2
    f3c4:	e0bff817 	ldw	r2,-32(fp)
    f3c8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    f3cc:	e0bff817 	ldw	r2,-32(fp)
    f3d0:	10800017 	ldw	r2,0(r2)
    f3d4:	10800104 	addi	r2,r2,4
    f3d8:	1007883a 	mov	r3,r2
    f3dc:	e0bff817 	ldw	r2,-32(fp)
    f3e0:	10800817 	ldw	r2,32(r2)
    f3e4:	18800035 	stwio	r2,0(r3)
    f3e8:	e0bffb17 	ldw	r2,-20(fp)
    f3ec:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
    f3f0:	e0bffa17 	ldw	r2,-24(fp)
    f3f4:	1001703a 	wrctl	status,r2
}
    f3f8:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    f3fc:	e0bff617 	ldw	r2,-40(fp)
    f400:	0080100e 	bge	zero,r2,f444 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
    f404:	e0bff517 	ldw	r2,-44(fp)
    f408:	1090000c 	andi	r2,r2,16384
    f40c:	1000101e 	bne	r2,zero,f450 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    f410:	0001883a 	nop
    f414:	e0bff817 	ldw	r2,-32(fp)
    f418:	10800d17 	ldw	r2,52(r2)
    f41c:	e0ffff17 	ldw	r3,-4(fp)
    f420:	1880051e 	bne	r3,r2,f438 <altera_avalon_jtag_uart_write+0x1bc>
    f424:	e0bff817 	ldw	r2,-32(fp)
    f428:	10c00917 	ldw	r3,36(r2)
    f42c:	e0bff817 	ldw	r2,-32(fp)
    f430:	10800117 	ldw	r2,4(r2)
    f434:	18bff736 	bltu	r3,r2,f414 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    f438:	e0bff817 	ldw	r2,-32(fp)
    f43c:	10800917 	ldw	r2,36(r2)
    f440:	1000051e 	bne	r2,zero,f458 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
    f444:	e0bff617 	ldw	r2,-40(fp)
    f448:	00bfcf16 	blt	zero,r2,f388 <altera_avalon_jtag_uart_write+0x10c>
    f44c:	00000306 	br	f45c <altera_avalon_jtag_uart_write+0x1e0>
        break;
    f450:	0001883a 	nop
    f454:	00000106 	br	f45c <altera_avalon_jtag_uart_write+0x1e0>
         break;
    f458:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    f45c:	e0fff717 	ldw	r3,-36(fp)
    f460:	e0bffd17 	ldw	r2,-12(fp)
    f464:	18800426 	beq	r3,r2,f478 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
    f468:	e0fff717 	ldw	r3,-36(fp)
    f46c:	e0bffd17 	ldw	r2,-12(fp)
    f470:	1885c83a 	sub	r2,r3,r2
    f474:	00000606 	br	f490 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
    f478:	e0bff517 	ldw	r2,-44(fp)
    f47c:	1090000c 	andi	r2,r2,16384
    f480:	10000226 	beq	r2,zero,f48c <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
    f484:	00bffd44 	movi	r2,-11
    f488:	00000106 	br	f490 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    f48c:	00bffec4 	movi	r2,-5
}
    f490:	e037883a 	mov	sp,fp
    f494:	dfc00117 	ldw	ra,4(sp)
    f498:	df000017 	ldw	fp,0(sp)
    f49c:	dec00204 	addi	sp,sp,8
    f4a0:	f800283a 	ret

0000f4a4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    f4a4:	defff404 	addi	sp,sp,-48
    f4a8:	df000b15 	stw	fp,44(sp)
    f4ac:	df000b04 	addi	fp,sp,44
    f4b0:	e13ff815 	stw	r4,-32(fp)
    f4b4:	e17ff715 	stw	r5,-36(fp)
    f4b8:	e1bff615 	stw	r6,-40(fp)
    f4bc:	e1fff515 	stw	r7,-44(fp)
  alt_irq_context irq_context;
  alt_u64 current_nticks = 0;
    f4c0:	e03ffe15 	stw	zero,-8(fp)
    f4c4:	e03fff15 	stw	zero,-4(fp)
    f4c8:	d0a70d17 	ldw	r2,-25548(gp)
  
  if (alt_ticks_per_second ())
    f4cc:	10004826 	beq	r2,zero,f5f0 <alt_alarm_start+0x14c>
  {
    if (alarm)
    f4d0:	e0bff817 	ldw	r2,-32(fp)
    f4d4:	10004426 	beq	r2,zero,f5e8 <alt_alarm_start+0x144>
    {
      alarm->callback = callback;
    f4d8:	e0bff817 	ldw	r2,-32(fp)
    f4dc:	e0fff617 	ldw	r3,-40(fp)
    f4e0:	10c00415 	stw	r3,16(r2)
      alarm->context  = context;
    f4e4:	e0bff817 	ldw	r2,-32(fp)
    f4e8:	e0fff517 	ldw	r3,-44(fp)
    f4ec:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
    f4f0:	0005303a 	rdctl	r2,status
    f4f4:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f4f8:	e0fff917 	ldw	r3,-28(fp)
    f4fc:	00bfff84 	movi	r2,-2
    f500:	1884703a 	and	r2,r3,r2
    f504:	1001703a 	wrctl	status,r2
  return context;
    f508:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
    f50c:	e0bffd15 	stw	r2,-12(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u64 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    f510:	d0a70e17 	ldw	r2,-25544(gp)
    f514:	d0e70f17 	ldw	r3,-25540(gp)
      
      current_nticks = alt_nticks();
    f518:	e0bffe15 	stw	r2,-8(fp)
    f51c:	e0ffff15 	stw	r3,-4(fp)
      
      alarm->time = (alt_u64)nticks + current_nticks + 1; 
    f520:	e0bff717 	ldw	r2,-36(fp)
    f524:	1011883a 	mov	r8,r2
    f528:	0013883a 	mov	r9,zero
    f52c:	e13ffe17 	ldw	r4,-8(fp)
    f530:	e17fff17 	ldw	r5,-4(fp)
    f534:	4105883a 	add	r2,r8,r4
    f538:	120d803a 	cmpltu	r6,r2,r8
    f53c:	4947883a 	add	r3,r9,r5
    f540:	30c9883a 	add	r4,r6,r3
    f544:	2007883a 	mov	r3,r4
    f548:	1009883a 	mov	r4,r2
    f54c:	180b883a 	mov	r5,r3
    f550:	01800044 	movi	r6,1
    f554:	000f883a 	mov	r7,zero
    f558:	2185883a 	add	r2,r4,r6
    f55c:	1111803a 	cmpltu	r8,r2,r4
    f560:	29c7883a 	add	r3,r5,r7
    f564:	40c9883a 	add	r4,r8,r3
    f568:	2007883a 	mov	r3,r4
    f56c:	1009883a 	mov	r4,r2
    f570:	180b883a 	mov	r5,r3
    f574:	e0bff817 	ldw	r2,-32(fp)
    f578:	11000215 	stw	r4,8(r2)
    f57c:	11400315 	stw	r5,12(r2)
          
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    f580:	e0bff817 	ldw	r2,-32(fp)
    f584:	d0e00c04 	addi	r3,gp,-32720
    f588:	e0fffb15 	stw	r3,-20(fp)
    f58c:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    f590:	e0bffa17 	ldw	r2,-24(fp)
    f594:	e0fffb17 	ldw	r3,-20(fp)
    f598:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    f59c:	e0bffb17 	ldw	r2,-20(fp)
    f5a0:	10c00017 	ldw	r3,0(r2)
    f5a4:	e0bffa17 	ldw	r2,-24(fp)
    f5a8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    f5ac:	e0bffb17 	ldw	r2,-20(fp)
    f5b0:	10800017 	ldw	r2,0(r2)
    f5b4:	e0fffa17 	ldw	r3,-24(fp)
    f5b8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    f5bc:	e0bffb17 	ldw	r2,-20(fp)
    f5c0:	e0fffa17 	ldw	r3,-24(fp)
    f5c4:	10c00015 	stw	r3,0(r2)
}
    f5c8:	0001883a 	nop
    f5cc:	e0bffd17 	ldw	r2,-12(fp)
    f5d0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    f5d4:	e0bffc17 	ldw	r2,-16(fp)
    f5d8:	1001703a 	wrctl	status,r2
}
    f5dc:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
    f5e0:	0005883a 	mov	r2,zero
    f5e4:	00000306 	br	f5f4 <alt_alarm_start+0x150>
    }
    else
    {
      return -EINVAL;
    f5e8:	00bffa84 	movi	r2,-22
    f5ec:	00000106 	br	f5f4 <alt_alarm_start+0x150>
    }
  }
  else
  {
    return -ENOTSUP;
    f5f0:	00bfde84 	movi	r2,-134
  }
}
    f5f4:	e037883a 	mov	sp,fp
    f5f8:	df000017 	ldw	fp,0(sp)
    f5fc:	dec00104 	addi	sp,sp,4
    f600:	f800283a 	ret

0000f604 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    f604:	deffff04 	addi	sp,sp,-4
    f608:	df000015 	stw	fp,0(sp)
    f60c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    f610:	0001883a 	nop
    f614:	e037883a 	mov	sp,fp
    f618:	df000017 	ldw	fp,0(sp)
    f61c:	dec00104 	addi	sp,sp,4
    f620:	f800283a 	ret

0000f624 <alt_get_errno>:
{
    f624:	defffe04 	addi	sp,sp,-8
    f628:	dfc00115 	stw	ra,4(sp)
    f62c:	df000015 	stw	fp,0(sp)
    f630:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    f634:	d0a00917 	ldw	r2,-32732(gp)
    f638:	10000326 	beq	r2,zero,f648 <alt_get_errno+0x24>
    f63c:	d0a00917 	ldw	r2,-32732(gp)
    f640:	103ee83a 	callr	r2
    f644:	00000106 	br	f64c <alt_get_errno+0x28>
    f648:	d0a70704 	addi	r2,gp,-25572
}
    f64c:	e037883a 	mov	sp,fp
    f650:	dfc00117 	ldw	ra,4(sp)
    f654:	df000017 	ldw	fp,0(sp)
    f658:	dec00204 	addi	sp,sp,8
    f65c:	f800283a 	ret

0000f660 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    f660:	defffa04 	addi	sp,sp,-24
    f664:	dfc00515 	stw	ra,20(sp)
    f668:	df000415 	stw	fp,16(sp)
    f66c:	df000404 	addi	fp,sp,16
    f670:	e13ffd15 	stw	r4,-12(fp)
    f674:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    f678:	e0bffd17 	ldw	r2,-12(fp)
    f67c:	10000326 	beq	r2,zero,f68c <alt_dev_llist_insert+0x2c>
    f680:	e0bffd17 	ldw	r2,-12(fp)
    f684:	10800217 	ldw	r2,8(r2)
    f688:	1000061e 	bne	r2,zero,f6a4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    f68c:	000f6240 	call	f624 <alt_get_errno>
    f690:	1007883a 	mov	r3,r2
    f694:	00800584 	movi	r2,22
    f698:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    f69c:	00bffa84 	movi	r2,-22
    f6a0:	00001406 	br	f6f4 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    f6a4:	e0bffd17 	ldw	r2,-12(fp)
    f6a8:	e0fffc17 	ldw	r3,-16(fp)
    f6ac:	e0ffff15 	stw	r3,-4(fp)
    f6b0:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
    f6b4:	e0bffe17 	ldw	r2,-8(fp)
    f6b8:	e0ffff17 	ldw	r3,-4(fp)
    f6bc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    f6c0:	e0bfff17 	ldw	r2,-4(fp)
    f6c4:	10c00017 	ldw	r3,0(r2)
    f6c8:	e0bffe17 	ldw	r2,-8(fp)
    f6cc:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
    f6d0:	e0bfff17 	ldw	r2,-4(fp)
    f6d4:	10800017 	ldw	r2,0(r2)
    f6d8:	e0fffe17 	ldw	r3,-8(fp)
    f6dc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    f6e0:	e0bfff17 	ldw	r2,-4(fp)
    f6e4:	e0fffe17 	ldw	r3,-8(fp)
    f6e8:	10c00015 	stw	r3,0(r2)
}
    f6ec:	0001883a 	nop

  return 0;  
    f6f0:	0005883a 	mov	r2,zero
}
    f6f4:	e037883a 	mov	sp,fp
    f6f8:	dfc00117 	ldw	ra,4(sp)
    f6fc:	df000017 	ldw	fp,0(sp)
    f700:	dec00204 	addi	sp,sp,8
    f704:	f800283a 	ret

0000f708 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    f708:	defffd04 	addi	sp,sp,-12
    f70c:	dfc00215 	stw	ra,8(sp)
    f710:	df000115 	stw	fp,4(sp)
    f714:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    f718:	00800074 	movhi	r2,1
    f71c:	10815d04 	addi	r2,r2,1396
    f720:	e0bfff15 	stw	r2,-4(fp)
    f724:	00000606 	br	f740 <_do_ctors+0x38>
        (*ctor) (); 
    f728:	e0bfff17 	ldw	r2,-4(fp)
    f72c:	10800017 	ldw	r2,0(r2)
    f730:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    f734:	e0bfff17 	ldw	r2,-4(fp)
    f738:	10bfff04 	addi	r2,r2,-4
    f73c:	e0bfff15 	stw	r2,-4(fp)
    f740:	e0ffff17 	ldw	r3,-4(fp)
    f744:	00800074 	movhi	r2,1
    f748:	10815e04 	addi	r2,r2,1400
    f74c:	18bff62e 	bgeu	r3,r2,f728 <_do_ctors+0x20>
}
    f750:	0001883a 	nop
    f754:	0001883a 	nop
    f758:	e037883a 	mov	sp,fp
    f75c:	dfc00117 	ldw	ra,4(sp)
    f760:	df000017 	ldw	fp,0(sp)
    f764:	dec00204 	addi	sp,sp,8
    f768:	f800283a 	ret

0000f76c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    f76c:	defffd04 	addi	sp,sp,-12
    f770:	dfc00215 	stw	ra,8(sp)
    f774:	df000115 	stw	fp,4(sp)
    f778:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    f77c:	00800074 	movhi	r2,1
    f780:	10815d04 	addi	r2,r2,1396
    f784:	e0bfff15 	stw	r2,-4(fp)
    f788:	00000606 	br	f7a4 <_do_dtors+0x38>
        (*dtor) (); 
    f78c:	e0bfff17 	ldw	r2,-4(fp)
    f790:	10800017 	ldw	r2,0(r2)
    f794:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    f798:	e0bfff17 	ldw	r2,-4(fp)
    f79c:	10bfff04 	addi	r2,r2,-4
    f7a0:	e0bfff15 	stw	r2,-4(fp)
    f7a4:	e0ffff17 	ldw	r3,-4(fp)
    f7a8:	00800074 	movhi	r2,1
    f7ac:	10815e04 	addi	r2,r2,1400
    f7b0:	18bff62e 	bgeu	r3,r2,f78c <_do_dtors+0x20>
}
    f7b4:	0001883a 	nop
    f7b8:	0001883a 	nop
    f7bc:	e037883a 	mov	sp,fp
    f7c0:	dfc00117 	ldw	ra,4(sp)
    f7c4:	df000017 	ldw	fp,0(sp)
    f7c8:	dec00204 	addi	sp,sp,8
    f7cc:	f800283a 	ret

0000f7d0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    f7d0:	deffff04 	addi	sp,sp,-4
    f7d4:	df000015 	stw	fp,0(sp)
    f7d8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    f7dc:	0001883a 	nop
    f7e0:	e037883a 	mov	sp,fp
    f7e4:	df000017 	ldw	fp,0(sp)
    f7e8:	dec00104 	addi	sp,sp,4
    f7ec:	f800283a 	ret

0000f7f0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    f7f0:	defff904 	addi	sp,sp,-28
    f7f4:	dfc00615 	stw	ra,24(sp)
    f7f8:	df000515 	stw	fp,20(sp)
    f7fc:	df000504 	addi	fp,sp,20
    f800:	e13fff15 	stw	r4,-4(fp)
    f804:	e17ffe15 	stw	r5,-8(fp)
    f808:	e1bffd15 	stw	r6,-12(fp)
    f80c:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    f810:	e0800217 	ldw	r2,8(fp)
    f814:	d8800015 	stw	r2,0(sp)
    f818:	e1fffc17 	ldw	r7,-16(fp)
    f81c:	e1bffd17 	ldw	r6,-12(fp)
    f820:	e17ffe17 	ldw	r5,-8(fp)
    f824:	e13fff17 	ldw	r4,-4(fp)
    f828:	000f9a00 	call	f9a0 <alt_iic_isr_register>
}  
    f82c:	e037883a 	mov	sp,fp
    f830:	dfc00117 	ldw	ra,4(sp)
    f834:	df000017 	ldw	fp,0(sp)
    f838:	dec00204 	addi	sp,sp,8
    f83c:	f800283a 	ret

0000f840 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    f840:	defff904 	addi	sp,sp,-28
    f844:	df000615 	stw	fp,24(sp)
    f848:	df000604 	addi	fp,sp,24
    f84c:	e13ffb15 	stw	r4,-20(fp)
    f850:	e17ffa15 	stw	r5,-24(fp)
    f854:	e0bffa17 	ldw	r2,-24(fp)
    f858:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
    f85c:	0005303a 	rdctl	r2,status
    f860:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f864:	e0fffe17 	ldw	r3,-8(fp)
    f868:	00bfff84 	movi	r2,-2
    f86c:	1884703a 	and	r2,r3,r2
    f870:	1001703a 	wrctl	status,r2
  return context;
    f874:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    f878:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
    f87c:	00c00044 	movi	r3,1
    f880:	e0bfff17 	ldw	r2,-4(fp)
    f884:	1884983a 	sll	r2,r3,r2
    f888:	1007883a 	mov	r3,r2
    f88c:	d0a70c17 	ldw	r2,-25552(gp)
    f890:	1884b03a 	or	r2,r3,r2
    f894:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    f898:	d0a70c17 	ldw	r2,-25552(gp)
    f89c:	100170fa 	wrctl	ienable,r2
    f8a0:	e0bffd17 	ldw	r2,-12(fp)
    f8a4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    f8a8:	e0bffc17 	ldw	r2,-16(fp)
    f8ac:	1001703a 	wrctl	status,r2
}
    f8b0:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
    f8b4:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
    f8b8:	e037883a 	mov	sp,fp
    f8bc:	df000017 	ldw	fp,0(sp)
    f8c0:	dec00104 	addi	sp,sp,4
    f8c4:	f800283a 	ret

0000f8c8 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    f8c8:	defff904 	addi	sp,sp,-28
    f8cc:	df000615 	stw	fp,24(sp)
    f8d0:	df000604 	addi	fp,sp,24
    f8d4:	e13ffb15 	stw	r4,-20(fp)
    f8d8:	e17ffa15 	stw	r5,-24(fp)
    f8dc:	e0bffa17 	ldw	r2,-24(fp)
    f8e0:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
    f8e4:	0005303a 	rdctl	r2,status
    f8e8:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f8ec:	e0fffe17 	ldw	r3,-8(fp)
    f8f0:	00bfff84 	movi	r2,-2
    f8f4:	1884703a 	and	r2,r3,r2
    f8f8:	1001703a 	wrctl	status,r2
  return context;
    f8fc:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
    f900:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
    f904:	00c00044 	movi	r3,1
    f908:	e0bfff17 	ldw	r2,-4(fp)
    f90c:	1884983a 	sll	r2,r3,r2
    f910:	0084303a 	nor	r2,zero,r2
    f914:	1007883a 	mov	r3,r2
    f918:	d0a70c17 	ldw	r2,-25552(gp)
    f91c:	1884703a 	and	r2,r3,r2
    f920:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    f924:	d0a70c17 	ldw	r2,-25552(gp)
    f928:	100170fa 	wrctl	ienable,r2
    f92c:	e0bffd17 	ldw	r2,-12(fp)
    f930:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    f934:	e0bffc17 	ldw	r2,-16(fp)
    f938:	1001703a 	wrctl	status,r2
}
    f93c:	0001883a 	nop
  return 0;
    f940:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
    f944:	e037883a 	mov	sp,fp
    f948:	df000017 	ldw	fp,0(sp)
    f94c:	dec00104 	addi	sp,sp,4
    f950:	f800283a 	ret

0000f954 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    f954:	defffc04 	addi	sp,sp,-16
    f958:	df000315 	stw	fp,12(sp)
    f95c:	df000304 	addi	fp,sp,12
    f960:	e13ffe15 	stw	r4,-8(fp)
    f964:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    f968:	000530fa 	rdctl	r2,ienable
    f96c:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    f970:	00c00044 	movi	r3,1
    f974:	e0bffd17 	ldw	r2,-12(fp)
    f978:	1884983a 	sll	r2,r3,r2
    f97c:	1007883a 	mov	r3,r2
    f980:	e0bfff17 	ldw	r2,-4(fp)
    f984:	1884703a 	and	r2,r3,r2
    f988:	1004c03a 	cmpne	r2,r2,zero
    f98c:	10803fcc 	andi	r2,r2,255
}
    f990:	e037883a 	mov	sp,fp
    f994:	df000017 	ldw	fp,0(sp)
    f998:	dec00104 	addi	sp,sp,4
    f99c:	f800283a 	ret

0000f9a0 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    f9a0:	defff504 	addi	sp,sp,-44
    f9a4:	dfc00a15 	stw	ra,40(sp)
    f9a8:	df000915 	stw	fp,36(sp)
    f9ac:	df000904 	addi	fp,sp,36
    f9b0:	e13ffa15 	stw	r4,-24(fp)
    f9b4:	e17ff915 	stw	r5,-28(fp)
    f9b8:	e1bff815 	stw	r6,-32(fp)
    f9bc:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
    f9c0:	00bffa84 	movi	r2,-22
    f9c4:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    f9c8:	e0bff917 	ldw	r2,-28(fp)
    f9cc:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    f9d0:	e0bffe17 	ldw	r2,-8(fp)
    f9d4:	10800808 	cmpgei	r2,r2,32
    f9d8:	1000251e 	bne	r2,zero,fa70 <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
    f9dc:	0005303a 	rdctl	r2,status
    f9e0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f9e4:	e0fffc17 	ldw	r3,-16(fp)
    f9e8:	00bfff84 	movi	r2,-2
    f9ec:	1884703a 	and	r2,r3,r2
    f9f0:	1001703a 	wrctl	status,r2
  return context;
    f9f4:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    f9f8:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
    f9fc:	e0bffe17 	ldw	r2,-8(fp)
    fa00:	100890fa 	slli	r4,r2,3
    fa04:	e0fff817 	ldw	r3,-32(fp)
    fa08:	00800074 	movhi	r2,1
    fa0c:	2085883a 	add	r2,r4,r2
    fa10:	10d10015 	stw	r3,17408(r2)
    alt_irq[id].context = isr_context;
    fa14:	e0bffe17 	ldw	r2,-8(fp)
    fa18:	100890fa 	slli	r4,r2,3
    fa1c:	e0fff717 	ldw	r3,-36(fp)
    fa20:	00800074 	movhi	r2,1
    fa24:	2085883a 	add	r2,r4,r2
    fa28:	10d10115 	stw	r3,17412(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    fa2c:	e0bff817 	ldw	r2,-32(fp)
    fa30:	10000526 	beq	r2,zero,fa48 <alt_iic_isr_register+0xa8>
    fa34:	e0bffe17 	ldw	r2,-8(fp)
    fa38:	100b883a 	mov	r5,r2
    fa3c:	e13ffa17 	ldw	r4,-24(fp)
    fa40:	000f8400 	call	f840 <alt_ic_irq_enable>
    fa44:	00000406 	br	fa58 <alt_iic_isr_register+0xb8>
    fa48:	e0bffe17 	ldw	r2,-8(fp)
    fa4c:	100b883a 	mov	r5,r2
    fa50:	e13ffa17 	ldw	r4,-24(fp)
    fa54:	000f8c80 	call	f8c8 <alt_ic_irq_disable>
    fa58:	e0bfff15 	stw	r2,-4(fp)
    fa5c:	e0bffd17 	ldw	r2,-12(fp)
    fa60:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
    fa64:	e0bffb17 	ldw	r2,-20(fp)
    fa68:	1001703a 	wrctl	status,r2
}
    fa6c:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
    fa70:	e0bfff17 	ldw	r2,-4(fp)
}
    fa74:	e037883a 	mov	sp,fp
    fa78:	dfc00117 	ldw	ra,4(sp)
    fa7c:	df000017 	ldw	fp,0(sp)
    fa80:	dec00204 	addi	sp,sp,8
    fa84:	f800283a 	ret

0000fa88 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    fa88:	defff904 	addi	sp,sp,-28
    fa8c:	dfc00615 	stw	ra,24(sp)
    fa90:	df000515 	stw	fp,20(sp)
    fa94:	df000504 	addi	fp,sp,20
    fa98:	e13ffe15 	stw	r4,-8(fp)
    fa9c:	e17ffd15 	stw	r5,-12(fp)
    faa0:	e1bffc15 	stw	r6,-16(fp)
    faa4:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
    faa8:	e1bffb17 	ldw	r6,-20(fp)
    faac:	e17ffc17 	ldw	r5,-16(fp)
    fab0:	e13ffd17 	ldw	r4,-12(fp)
    fab4:	000fcf00 	call	fcf0 <open>
    fab8:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
    fabc:	e0bfff17 	ldw	r2,-4(fp)
    fac0:	10002016 	blt	r2,zero,fb44 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
    fac4:	e0ffff17 	ldw	r3,-4(fp)
    fac8:	1805883a 	mov	r2,r3
    facc:	1085883a 	add	r2,r2,r2
    fad0:	10c5883a 	add	r2,r2,r3
    fad4:	100490ba 	slli	r2,r2,2
    fad8:	00c00074 	movhi	r3,1
    fadc:	10c7883a 	add	r3,r2,r3
    fae0:	18c56d17 	ldw	r3,5556(r3)
    fae4:	e0bffe17 	ldw	r2,-8(fp)
    fae8:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    faec:	e0ffff17 	ldw	r3,-4(fp)
    faf0:	1805883a 	mov	r2,r3
    faf4:	1085883a 	add	r2,r2,r2
    faf8:	10c5883a 	add	r2,r2,r3
    fafc:	100490ba 	slli	r2,r2,2
    fb00:	00c00074 	movhi	r3,1
    fb04:	10c7883a 	add	r3,r2,r3
    fb08:	18c56e17 	ldw	r3,5560(r3)
    fb0c:	e0bffe17 	ldw	r2,-8(fp)
    fb10:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    fb14:	e0ffff17 	ldw	r3,-4(fp)
    fb18:	1805883a 	mov	r2,r3
    fb1c:	1085883a 	add	r2,r2,r2
    fb20:	10c5883a 	add	r2,r2,r3
    fb24:	100490ba 	slli	r2,r2,2
    fb28:	00c00074 	movhi	r3,1
    fb2c:	10c7883a 	add	r3,r2,r3
    fb30:	18c56f17 	ldw	r3,5564(r3)
    fb34:	e0bffe17 	ldw	r2,-8(fp)
    fb38:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    fb3c:	e13fff17 	ldw	r4,-4(fp)
    fb40:	000e2000 	call	e200 <alt_release_fd>
  }
} 
    fb44:	0001883a 	nop
    fb48:	e037883a 	mov	sp,fp
    fb4c:	dfc00117 	ldw	ra,4(sp)
    fb50:	df000017 	ldw	fp,0(sp)
    fb54:	dec00204 	addi	sp,sp,8
    fb58:	f800283a 	ret

0000fb5c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    fb5c:	defffb04 	addi	sp,sp,-20
    fb60:	dfc00415 	stw	ra,16(sp)
    fb64:	df000315 	stw	fp,12(sp)
    fb68:	df000304 	addi	fp,sp,12
    fb6c:	e13fff15 	stw	r4,-4(fp)
    fb70:	e17ffe15 	stw	r5,-8(fp)
    fb74:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    fb78:	01c07fc4 	movi	r7,511
    fb7c:	01800044 	movi	r6,1
    fb80:	e17fff17 	ldw	r5,-4(fp)
    fb84:	01000074 	movhi	r4,1
    fb88:	21057004 	addi	r4,r4,5568
    fb8c:	000fa880 	call	fa88 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    fb90:	01c07fc4 	movi	r7,511
    fb94:	000d883a 	mov	r6,zero
    fb98:	e17ffe17 	ldw	r5,-8(fp)
    fb9c:	01000074 	movhi	r4,1
    fba0:	21056d04 	addi	r4,r4,5556
    fba4:	000fa880 	call	fa88 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    fba8:	01c07fc4 	movi	r7,511
    fbac:	01800044 	movi	r6,1
    fbb0:	e17ffd17 	ldw	r5,-12(fp)
    fbb4:	01000074 	movhi	r4,1
    fbb8:	21057304 	addi	r4,r4,5580
    fbbc:	000fa880 	call	fa88 <alt_open_fd>
}  
    fbc0:	0001883a 	nop
    fbc4:	e037883a 	mov	sp,fp
    fbc8:	dfc00117 	ldw	ra,4(sp)
    fbcc:	df000017 	ldw	fp,0(sp)
    fbd0:	dec00204 	addi	sp,sp,8
    fbd4:	f800283a 	ret

0000fbd8 <alt_get_errno>:
{
    fbd8:	defffe04 	addi	sp,sp,-8
    fbdc:	dfc00115 	stw	ra,4(sp)
    fbe0:	df000015 	stw	fp,0(sp)
    fbe4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    fbe8:	d0a00917 	ldw	r2,-32732(gp)
    fbec:	10000326 	beq	r2,zero,fbfc <alt_get_errno+0x24>
    fbf0:	d0a00917 	ldw	r2,-32732(gp)
    fbf4:	103ee83a 	callr	r2
    fbf8:	00000106 	br	fc00 <alt_get_errno+0x28>
    fbfc:	d0a70704 	addi	r2,gp,-25572
}
    fc00:	e037883a 	mov	sp,fp
    fc04:	dfc00117 	ldw	ra,4(sp)
    fc08:	df000017 	ldw	fp,0(sp)
    fc0c:	dec00204 	addi	sp,sp,8
    fc10:	f800283a 	ret

0000fc14 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    fc14:	defffd04 	addi	sp,sp,-12
    fc18:	df000215 	stw	fp,8(sp)
    fc1c:	df000204 	addi	fp,sp,8
    fc20:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    fc24:	e0bffe17 	ldw	r2,-8(fp)
    fc28:	10800217 	ldw	r2,8(r2)
    fc2c:	10d00034 	orhi	r3,r2,16384
    fc30:	e0bffe17 	ldw	r2,-8(fp)
    fc34:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    fc38:	e03fff15 	stw	zero,-4(fp)
    fc3c:	00002306 	br	fccc <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    fc40:	e0ffff17 	ldw	r3,-4(fp)
    fc44:	1805883a 	mov	r2,r3
    fc48:	1085883a 	add	r2,r2,r2
    fc4c:	10c5883a 	add	r2,r2,r3
    fc50:	100490ba 	slli	r2,r2,2
    fc54:	00c00074 	movhi	r3,1
    fc58:	10c7883a 	add	r3,r2,r3
    fc5c:	18c56d17 	ldw	r3,5556(r3)
    fc60:	e0bffe17 	ldw	r2,-8(fp)
    fc64:	10800017 	ldw	r2,0(r2)
    fc68:	1880151e 	bne	r3,r2,fcc0 <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    fc6c:	e0ffff17 	ldw	r3,-4(fp)
    fc70:	1805883a 	mov	r2,r3
    fc74:	1085883a 	add	r2,r2,r2
    fc78:	10c5883a 	add	r2,r2,r3
    fc7c:	100490ba 	slli	r2,r2,2
    fc80:	00c00074 	movhi	r3,1
    fc84:	10c7883a 	add	r3,r2,r3
    fc88:	18856f17 	ldw	r2,5564(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
    fc8c:	10000c0e 	bge	r2,zero,fcc0 <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
    fc90:	e0ffff17 	ldw	r3,-4(fp)
    fc94:	1805883a 	mov	r2,r3
    fc98:	1085883a 	add	r2,r2,r2
    fc9c:	10c5883a 	add	r2,r2,r3
    fca0:	100490ba 	slli	r2,r2,2
    fca4:	00c00074 	movhi	r3,1
    fca8:	18c56d04 	addi	r3,r3,5556
    fcac:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    fcb0:	e0fffe17 	ldw	r3,-8(fp)
    fcb4:	18800226 	beq	r3,r2,fcc0 <alt_file_locked+0xac>
    {
      return -EACCES;
    fcb8:	00bffcc4 	movi	r2,-13
    fcbc:	00000806 	br	fce0 <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
    fcc0:	e0bfff17 	ldw	r2,-4(fp)
    fcc4:	10800044 	addi	r2,r2,1
    fcc8:	e0bfff15 	stw	r2,-4(fp)
    fccc:	d0a00817 	ldw	r2,-32736(gp)
    fcd0:	1007883a 	mov	r3,r2
    fcd4:	e0bfff17 	ldw	r2,-4(fp)
    fcd8:	18bfd92e 	bgeu	r3,r2,fc40 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    fcdc:	0005883a 	mov	r2,zero
}
    fce0:	e037883a 	mov	sp,fp
    fce4:	df000017 	ldw	fp,0(sp)
    fce8:	dec00104 	addi	sp,sp,4
    fcec:	f800283a 	ret

0000fcf0 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    fcf0:	defff604 	addi	sp,sp,-40
    fcf4:	dfc00915 	stw	ra,36(sp)
    fcf8:	df000815 	stw	fp,32(sp)
    fcfc:	df000804 	addi	fp,sp,32
    fd00:	e13ffa15 	stw	r4,-24(fp)
    fd04:	e17ff915 	stw	r5,-28(fp)
    fd08:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    fd0c:	00bfffc4 	movi	r2,-1
    fd10:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
    fd14:	00bffb44 	movi	r2,-19
    fd18:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
    fd1c:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    fd20:	d1600604 	addi	r5,gp,-32744
    fd24:	e13ffa17 	ldw	r4,-24(fp)
    fd28:	00100440 	call	10044 <alt_find_dev>
    fd2c:	e0bfff15 	stw	r2,-4(fp)
    fd30:	e0bfff17 	ldw	r2,-4(fp)
    fd34:	1000051e 	bne	r2,zero,fd4c <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    fd38:	e13ffa17 	ldw	r4,-24(fp)
    fd3c:	00100d40 	call	100d4 <alt_find_file>
    fd40:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
    fd44:	00800044 	movi	r2,1
    fd48:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    fd4c:	e0bfff17 	ldw	r2,-4(fp)
    fd50:	10002c26 	beq	r2,zero,fe04 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
    fd54:	e13fff17 	ldw	r4,-4(fp)
    fd58:	00101dc0 	call	101dc <alt_get_fd>
    fd5c:	e0bffe15 	stw	r2,-8(fp)
    fd60:	e0bffe17 	ldw	r2,-8(fp)
    fd64:	1000030e 	bge	r2,zero,fd74 <open+0x84>
    {
      status = index;
    fd68:	e0bffe17 	ldw	r2,-8(fp)
    fd6c:	e0bffd15 	stw	r2,-12(fp)
    fd70:	00002606 	br	fe0c <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
    fd74:	e0fffe17 	ldw	r3,-8(fp)
    fd78:	1805883a 	mov	r2,r3
    fd7c:	1085883a 	add	r2,r2,r2
    fd80:	10c5883a 	add	r2,r2,r3
    fd84:	100490ba 	slli	r2,r2,2
    fd88:	00c00074 	movhi	r3,1
    fd8c:	18c56d04 	addi	r3,r3,5556
    fd90:	10c5883a 	add	r2,r2,r3
    fd94:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    fd98:	e0fff917 	ldw	r3,-28(fp)
    fd9c:	00900034 	movhi	r2,16384
    fda0:	10bfffc4 	addi	r2,r2,-1
    fda4:	1886703a 	and	r3,r3,r2
    fda8:	e0bffb17 	ldw	r2,-20(fp)
    fdac:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    fdb0:	e0bffc17 	ldw	r2,-16(fp)
    fdb4:	1000051e 	bne	r2,zero,fdcc <open+0xdc>
    fdb8:	e13ffb17 	ldw	r4,-20(fp)
    fdbc:	000fc140 	call	fc14 <alt_file_locked>
    fdc0:	e0bffd15 	stw	r2,-12(fp)
    fdc4:	e0bffd17 	ldw	r2,-12(fp)
    fdc8:	10001016 	blt	r2,zero,fe0c <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    fdcc:	e0bfff17 	ldw	r2,-4(fp)
    fdd0:	10800317 	ldw	r2,12(r2)
    fdd4:	10000826 	beq	r2,zero,fdf8 <open+0x108>
    fdd8:	e0bfff17 	ldw	r2,-4(fp)
    fddc:	10800317 	ldw	r2,12(r2)
    fde0:	e1fff817 	ldw	r7,-32(fp)
    fde4:	e1bff917 	ldw	r6,-28(fp)
    fde8:	e17ffa17 	ldw	r5,-24(fp)
    fdec:	e13ffb17 	ldw	r4,-20(fp)
    fdf0:	103ee83a 	callr	r2
    fdf4:	00000106 	br	fdfc <open+0x10c>
    fdf8:	0005883a 	mov	r2,zero
    fdfc:	e0bffd15 	stw	r2,-12(fp)
    fe00:	00000206 	br	fe0c <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
    fe04:	00bffb44 	movi	r2,-19
    fe08:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    fe0c:	e0bffd17 	ldw	r2,-12(fp)
    fe10:	1000090e 	bge	r2,zero,fe38 <open+0x148>
  {
    alt_release_fd (index);  
    fe14:	e13ffe17 	ldw	r4,-8(fp)
    fe18:	000e2000 	call	e200 <alt_release_fd>
    ALT_ERRNO = -status;
    fe1c:	000fbd80 	call	fbd8 <alt_get_errno>
    fe20:	1007883a 	mov	r3,r2
    fe24:	e0bffd17 	ldw	r2,-12(fp)
    fe28:	0085c83a 	sub	r2,zero,r2
    fe2c:	18800015 	stw	r2,0(r3)
    return -1;
    fe30:	00bfffc4 	movi	r2,-1
    fe34:	00000106 	br	fe3c <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
    fe38:	e0bffe17 	ldw	r2,-8(fp)
}
    fe3c:	e037883a 	mov	sp,fp
    fe40:	dfc00117 	ldw	ra,4(sp)
    fe44:	df000017 	ldw	fp,0(sp)
    fe48:	dec00204 	addi	sp,sp,8
    fe4c:	f800283a 	ret

0000fe50 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    fe50:	defffa04 	addi	sp,sp,-24
    fe54:	df000515 	stw	fp,20(sp)
    fe58:	df000504 	addi	fp,sp,20
    fe5c:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
    fe60:	0005303a 	rdctl	r2,status
    fe64:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    fe68:	e0fffc17 	ldw	r3,-16(fp)
    fe6c:	00bfff84 	movi	r2,-2
    fe70:	1884703a 	and	r2,r3,r2
    fe74:	1001703a 	wrctl	status,r2
  return context;
    fe78:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    fe7c:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
    fe80:	e0bffb17 	ldw	r2,-20(fp)
    fe84:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    fe88:	e0bffd17 	ldw	r2,-12(fp)
    fe8c:	10800017 	ldw	r2,0(r2)
    fe90:	e0fffd17 	ldw	r3,-12(fp)
    fe94:	18c00117 	ldw	r3,4(r3)
    fe98:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    fe9c:	e0bffd17 	ldw	r2,-12(fp)
    fea0:	10800117 	ldw	r2,4(r2)
    fea4:	e0fffd17 	ldw	r3,-12(fp)
    fea8:	18c00017 	ldw	r3,0(r3)
    feac:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    feb0:	e0bffd17 	ldw	r2,-12(fp)
    feb4:	e0fffd17 	ldw	r3,-12(fp)
    feb8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    febc:	e0bffd17 	ldw	r2,-12(fp)
    fec0:	e0fffd17 	ldw	r3,-12(fp)
    fec4:	10c00015 	stw	r3,0(r2)
} 
    fec8:	0001883a 	nop
    fecc:	e0bfff17 	ldw	r2,-4(fp)
    fed0:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
    fed4:	e0bffe17 	ldw	r2,-8(fp)
    fed8:	1001703a 	wrctl	status,r2
}
    fedc:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
    fee0:	0001883a 	nop
    fee4:	e037883a 	mov	sp,fp
    fee8:	df000017 	ldw	fp,0(sp)
    feec:	dec00104 	addi	sp,sp,4
    fef0:	f800283a 	ret

0000fef4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    fef4:	defff904 	addi	sp,sp,-28
    fef8:	dfc00615 	stw	ra,24(sp)
    fefc:	df000515 	stw	fp,20(sp)
    ff00:	dc400415 	stw	r17,16(sp)
    ff04:	dc000315 	stw	r16,12(sp)
    ff08:	df000504 	addi	fp,sp,20
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    ff0c:	d0a00c17 	ldw	r2,-32720(gp)
    ff10:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    ff14:	d1270e17 	ldw	r4,-25544(gp)
    ff18:	d1670f17 	ldw	r5,-25540(gp)
    ff1c:	01800044 	movi	r6,1
    ff20:	000f883a 	mov	r7,zero
    ff24:	2185883a 	add	r2,r4,r6
    ff28:	1111803a 	cmpltu	r8,r2,r4
    ff2c:	29c7883a 	add	r3,r5,r7
    ff30:	40c9883a 	add	r4,r8,r3
    ff34:	2007883a 	mov	r3,r4
    ff38:	1009883a 	mov	r4,r2
    ff3c:	180b883a 	mov	r5,r3
    ff40:	d1270e15 	stw	r4,-25544(gp)
    ff44:	d1670f15 	stw	r5,-25540(gp)
 
  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    ff48:	00002906 	br	fff0 <alt_tick+0xfc>
  {
    next = (alt_alarm*) alarm->llist.next;
    ff4c:	e0bffd17 	ldw	r2,-12(fp)
    ff50:	10800017 	ldw	r2,0(r2)
    ff54:	e0bffc15 	stw	r2,-16(fp)
    
    /* if the alarm period has expired, make the callback */    
    if (alarm->time <= _alt_nticks)
    ff58:	e13ffd17 	ldw	r4,-12(fp)
    ff5c:	20800217 	ldw	r2,8(r4)
    ff60:	20c00317 	ldw	r3,12(r4)
    ff64:	d1270e17 	ldw	r4,-25544(gp)
    ff68:	d1670f17 	ldw	r5,-25540(gp)
    ff6c:	28c01e36 	bltu	r5,r3,ffe8 <alt_tick+0xf4>
    ff70:	1940011e 	bne	r3,r5,ff78 <alt_tick+0x84>
    ff74:	20801c36 	bltu	r4,r2,ffe8 <alt_tick+0xf4>
    {
      next_callback = alarm->callback (alarm->context);
    ff78:	e0bffd17 	ldw	r2,-12(fp)
    ff7c:	10800417 	ldw	r2,16(r2)
    ff80:	e0fffd17 	ldw	r3,-12(fp)
    ff84:	18c00517 	ldw	r3,20(r3)
    ff88:	1809883a 	mov	r4,r3
    ff8c:	103ee83a 	callr	r2
    ff90:	e0bffb15 	stw	r2,-20(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    ff94:	e0bffb17 	ldw	r2,-20(fp)
    ff98:	1000031e 	bne	r2,zero,ffa8 <alt_tick+0xb4>
      {
        alt_alarm_stop (alarm);
    ff9c:	e13ffd17 	ldw	r4,-12(fp)
    ffa0:	000fe500 	call	fe50 <alt_alarm_stop>
    ffa4:	00001006 	br	ffe8 <alt_tick+0xf4>
      }
      else
      {
        alarm->time += next_callback;
    ffa8:	e0bffd17 	ldw	r2,-12(fp)
    ffac:	11000217 	ldw	r4,8(r2)
    ffb0:	11400317 	ldw	r5,12(r2)
    ffb4:	e0bffb17 	ldw	r2,-20(fp)
    ffb8:	1021883a 	mov	r16,r2
    ffbc:	0023883a 	mov	r17,zero
    ffc0:	2405883a 	add	r2,r4,r16
    ffc4:	110d803a 	cmpltu	r6,r2,r4
    ffc8:	2c47883a 	add	r3,r5,r17
    ffcc:	30c9883a 	add	r4,r6,r3
    ffd0:	2007883a 	mov	r3,r4
    ffd4:	1009883a 	mov	r4,r2
    ffd8:	180b883a 	mov	r5,r3
    ffdc:	e0bffd17 	ldw	r2,-12(fp)
    ffe0:	11000215 	stw	r4,8(r2)
    ffe4:	11400315 	stw	r5,12(r2)
      }
    }
    alarm = next;
    ffe8:	e0bffc17 	ldw	r2,-16(fp)
    ffec:	e0bffd15 	stw	r2,-12(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
    fff0:	e0fffd17 	ldw	r3,-12(fp)
    fff4:	d0a00c04 	addi	r2,gp,-32720
    fff8:	18bfd41e 	bne	r3,r2,ff4c <alt_tick+0x58>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    fffc:	0001883a 	nop
}
   10000:	0001883a 	nop
   10004:	e6fffe04 	addi	sp,fp,-8
   10008:	dfc00317 	ldw	ra,12(sp)
   1000c:	df000217 	ldw	fp,8(sp)
   10010:	dc400117 	ldw	r17,4(sp)
   10014:	dc000017 	ldw	r16,0(sp)
   10018:	dec00404 	addi	sp,sp,16
   1001c:	f800283a 	ret

00010020 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   10020:	deffff04 	addi	sp,sp,-4
   10024:	df000015 	stw	fp,0(sp)
   10028:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   1002c:	000170fa 	wrctl	ienable,zero
}
   10030:	0001883a 	nop
   10034:	e037883a 	mov	sp,fp
   10038:	df000017 	ldw	fp,0(sp)
   1003c:	dec00104 	addi	sp,sp,4
   10040:	f800283a 	ret

00010044 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   10044:	defffa04 	addi	sp,sp,-24
   10048:	dfc00515 	stw	ra,20(sp)
   1004c:	df000415 	stw	fp,16(sp)
   10050:	df000404 	addi	fp,sp,16
   10054:	e13ffd15 	stw	r4,-12(fp)
   10058:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
   1005c:	e0bffc17 	ldw	r2,-16(fp)
   10060:	10800017 	ldw	r2,0(r2)
   10064:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   10068:	e13ffd17 	ldw	r4,-12(fp)
   1006c:	00004140 	call	414 <strlen>
   10070:	10800044 	addi	r2,r2,1
   10074:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   10078:	00000d06 	br	100b0 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   1007c:	e0bfff17 	ldw	r2,-4(fp)
   10080:	10800217 	ldw	r2,8(r2)
   10084:	e0fffe17 	ldw	r3,-8(fp)
   10088:	180d883a 	mov	r6,r3
   1008c:	e17ffd17 	ldw	r5,-12(fp)
   10090:	1009883a 	mov	r4,r2
   10094:	00103500 	call	10350 <memcmp>
   10098:	1000021e 	bne	r2,zero,100a4 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   1009c:	e0bfff17 	ldw	r2,-4(fp)
   100a0:	00000706 	br	100c0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   100a4:	e0bfff17 	ldw	r2,-4(fp)
   100a8:	10800017 	ldw	r2,0(r2)
   100ac:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
   100b0:	e0ffff17 	ldw	r3,-4(fp)
   100b4:	e0bffc17 	ldw	r2,-16(fp)
   100b8:	18bff01e 	bne	r3,r2,1007c <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
   100bc:	0005883a 	mov	r2,zero
}
   100c0:	e037883a 	mov	sp,fp
   100c4:	dfc00117 	ldw	ra,4(sp)
   100c8:	df000017 	ldw	fp,0(sp)
   100cc:	dec00204 	addi	sp,sp,8
   100d0:	f800283a 	ret

000100d4 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   100d4:	defffb04 	addi	sp,sp,-20
   100d8:	dfc00415 	stw	ra,16(sp)
   100dc:	df000315 	stw	fp,12(sp)
   100e0:	df000304 	addi	fp,sp,12
   100e4:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   100e8:	d0a00417 	ldw	r2,-32752(gp)
   100ec:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   100f0:	00003106 	br	101b8 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   100f4:	e0bfff17 	ldw	r2,-4(fp)
   100f8:	10800217 	ldw	r2,8(r2)
   100fc:	1009883a 	mov	r4,r2
   10100:	00004140 	call	414 <strlen>
   10104:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   10108:	e0bfff17 	ldw	r2,-4(fp)
   1010c:	10c00217 	ldw	r3,8(r2)
   10110:	e0bffe17 	ldw	r2,-8(fp)
   10114:	10bfffc4 	addi	r2,r2,-1
   10118:	1885883a 	add	r2,r3,r2
   1011c:	10800003 	ldbu	r2,0(r2)
   10120:	10803fcc 	andi	r2,r2,255
   10124:	1080201c 	xori	r2,r2,128
   10128:	10bfe004 	addi	r2,r2,-128
   1012c:	10800bd8 	cmpnei	r2,r2,47
   10130:	1000031e 	bne	r2,zero,10140 <alt_find_file+0x6c>
    {
      len -= 1;
   10134:	e0bffe17 	ldw	r2,-8(fp)
   10138:	10bfffc4 	addi	r2,r2,-1
   1013c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   10140:	e0bffe17 	ldw	r2,-8(fp)
   10144:	e0fffd17 	ldw	r3,-12(fp)
   10148:	1885883a 	add	r2,r3,r2
   1014c:	10800003 	ldbu	r2,0(r2)
   10150:	10803fcc 	andi	r2,r2,255
   10154:	1080201c 	xori	r2,r2,128
   10158:	10bfe004 	addi	r2,r2,-128
   1015c:	10800be0 	cmpeqi	r2,r2,47
   10160:	1000081e 	bne	r2,zero,10184 <alt_find_file+0xb0>
   10164:	e0bffe17 	ldw	r2,-8(fp)
   10168:	e0fffd17 	ldw	r3,-12(fp)
   1016c:	1885883a 	add	r2,r3,r2
   10170:	10800003 	ldbu	r2,0(r2)
   10174:	10803fcc 	andi	r2,r2,255
   10178:	1080201c 	xori	r2,r2,128
   1017c:	10bfe004 	addi	r2,r2,-128
   10180:	10000a1e 	bne	r2,zero,101ac <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   10184:	e0bfff17 	ldw	r2,-4(fp)
   10188:	10800217 	ldw	r2,8(r2)
   1018c:	e0fffe17 	ldw	r3,-8(fp)
   10190:	180d883a 	mov	r6,r3
   10194:	e17ffd17 	ldw	r5,-12(fp)
   10198:	1009883a 	mov	r4,r2
   1019c:	00103500 	call	10350 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
   101a0:	1000021e 	bne	r2,zero,101ac <alt_find_file+0xd8>
    {
      /* match found */

      return next;
   101a4:	e0bfff17 	ldw	r2,-4(fp)
   101a8:	00000706 	br	101c8 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   101ac:	e0bfff17 	ldw	r2,-4(fp)
   101b0:	10800017 	ldw	r2,0(r2)
   101b4:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
   101b8:	e0ffff17 	ldw	r3,-4(fp)
   101bc:	d0a00404 	addi	r2,gp,-32752
   101c0:	18bfcc1e 	bne	r3,r2,100f4 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
   101c4:	0005883a 	mov	r2,zero
}
   101c8:	e037883a 	mov	sp,fp
   101cc:	dfc00117 	ldw	ra,4(sp)
   101d0:	df000017 	ldw	fp,0(sp)
   101d4:	dec00204 	addi	sp,sp,8
   101d8:	f800283a 	ret

000101dc <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   101dc:	defffc04 	addi	sp,sp,-16
   101e0:	df000315 	stw	fp,12(sp)
   101e4:	df000304 	addi	fp,sp,12
   101e8:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
   101ec:	00bffa04 	movi	r2,-24
   101f0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   101f4:	e03fff15 	stw	zero,-4(fp)
   101f8:	00001d06 	br	10270 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
   101fc:	e0ffff17 	ldw	r3,-4(fp)
   10200:	1805883a 	mov	r2,r3
   10204:	1085883a 	add	r2,r2,r2
   10208:	10c5883a 	add	r2,r2,r3
   1020c:	100490ba 	slli	r2,r2,2
   10210:	00c00074 	movhi	r3,1
   10214:	10c7883a 	add	r3,r2,r3
   10218:	18856d17 	ldw	r2,5556(r3)
   1021c:	1000111e 	bne	r2,zero,10264 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
   10220:	e0ffff17 	ldw	r3,-4(fp)
   10224:	1805883a 	mov	r2,r3
   10228:	1085883a 	add	r2,r2,r2
   1022c:	10c5883a 	add	r2,r2,r3
   10230:	100490ba 	slli	r2,r2,2
   10234:	e13ffd17 	ldw	r4,-12(fp)
   10238:	00c00074 	movhi	r3,1
   1023c:	10c7883a 	add	r3,r2,r3
   10240:	19056d15 	stw	r4,5556(r3)
      if (i > alt_max_fd)
   10244:	d0e00817 	ldw	r3,-32736(gp)
   10248:	e0bfff17 	ldw	r2,-4(fp)
   1024c:	1880020e 	bge	r3,r2,10258 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
   10250:	e0bfff17 	ldw	r2,-4(fp)
   10254:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
   10258:	e0bfff17 	ldw	r2,-4(fp)
   1025c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   10260:	00000706 	br	10280 <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
   10264:	e0bfff17 	ldw	r2,-4(fp)
   10268:	10800044 	addi	r2,r2,1
   1026c:	e0bfff15 	stw	r2,-4(fp)
   10270:	e0bfff17 	ldw	r2,-4(fp)
   10274:	10800810 	cmplti	r2,r2,32
   10278:	103fe01e 	bne	r2,zero,101fc <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
   1027c:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   10280:	e0bffe17 	ldw	r2,-8(fp)
}
   10284:	e037883a 	mov	sp,fp
   10288:	df000017 	ldw	fp,0(sp)
   1028c:	dec00104 	addi	sp,sp,4
   10290:	f800283a 	ret

00010294 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   10294:	defffe04 	addi	sp,sp,-8
   10298:	df000115 	stw	fp,4(sp)
   1029c:	df000104 	addi	fp,sp,4
   102a0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   102a4:	e0bfff17 	ldw	r2,-4(fp)
   102a8:	10bffe84 	addi	r2,r2,-6
   102ac:	10c00428 	cmpgeui	r3,r2,16
   102b0:	18c03fcc 	andi	r3,r3,255
   102b4:	18000f1e 	bne	r3,zero,102f4 <alt_exception_cause_generated_bad_addr+0x60>
   102b8:	00c00044 	movi	r3,1
   102bc:	1884983a 	sll	r2,r3,r2
   102c0:	10e2c8cc 	andi	r3,r2,35619
   102c4:	1806c03a 	cmpne	r3,r3,zero
   102c8:	18c03fcc 	andi	r3,r3,255
   102cc:	1800051e 	bne	r3,zero,102e4 <alt_exception_cause_generated_bad_addr+0x50>
   102d0:	1084100c 	andi	r2,r2,4160
   102d4:	1004c03a 	cmpne	r2,r2,zero
   102d8:	10803fcc 	andi	r2,r2,255
   102dc:	1000031e 	bne	r2,zero,102ec <alt_exception_cause_generated_bad_addr+0x58>
   102e0:	00000406 	br	102f4 <alt_exception_cause_generated_bad_addr+0x60>
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   102e4:	00800044 	movi	r2,1
   102e8:	00000306 	br	102f8 <alt_exception_cause_generated_bad_addr+0x64>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   102ec:	0005883a 	mov	r2,zero
   102f0:	00000106 	br	102f8 <alt_exception_cause_generated_bad_addr+0x64>

  default:
    return 0;
   102f4:	0005883a 	mov	r2,zero
  }
}
   102f8:	e037883a 	mov	sp,fp
   102fc:	df000017 	ldw	fp,0(sp)
   10300:	dec00104 	addi	sp,sp,4
   10304:	f800283a 	ret

00010308 <atexit>:
   10308:	200b883a 	mov	r5,r4
   1030c:	000f883a 	mov	r7,zero
   10310:	000d883a 	mov	r6,zero
   10314:	0009883a 	mov	r4,zero
   10318:	00103c81 	jmpi	103c8 <__register_exitproc>

0001031c <exit>:
   1031c:	defffe04 	addi	sp,sp,-8
   10320:	000b883a 	mov	r5,zero
   10324:	dc000015 	stw	r16,0(sp)
   10328:	dfc00115 	stw	ra,4(sp)
   1032c:	2021883a 	mov	r16,r4
   10330:	00104580 	call	10458 <__call_exitprocs>
   10334:	00800074 	movhi	r2,1
   10338:	1109e517 	ldw	r4,10132(r2)
   1033c:	20800f17 	ldw	r2,60(r4)
   10340:	10000126 	beq	r2,zero,10348 <exit+0x2c>
   10344:	103ee83a 	callr	r2
   10348:	8009883a 	mov	r4,r16
   1034c:	000da840 	call	da84 <_exit>

00010350 <memcmp>:
   10350:	30800128 	cmpgeui	r2,r6,4
   10354:	10000d26 	beq	r2,zero,1038c <memcmp+0x3c>
   10358:	2144b03a 	or	r2,r4,r5
   1035c:	108000cc 	andi	r2,r2,3
   10360:	10000726 	beq	r2,zero,10380 <memcmp+0x30>
   10364:	30bfffc4 	addi	r2,r6,-1
   10368:	00000a06 	br	10394 <memcmp+0x44>
   1036c:	31bfff04 	addi	r6,r6,-4
   10370:	30800128 	cmpgeui	r2,r6,4
   10374:	21000104 	addi	r4,r4,4
   10378:	29400104 	addi	r5,r5,4
   1037c:	10000326 	beq	r2,zero,1038c <memcmp+0x3c>
   10380:	20c00017 	ldw	r3,0(r4)
   10384:	28800017 	ldw	r2,0(r5)
   10388:	18bff826 	beq	r3,r2,1036c <memcmp+0x1c>
   1038c:	30bfffc4 	addi	r2,r6,-1
   10390:	30000b26 	beq	r6,zero,103c0 <memcmp+0x70>
   10394:	11800044 	addi	r6,r2,1
   10398:	218d883a 	add	r6,r4,r6
   1039c:	00000106 	br	103a4 <memcmp+0x54>
   103a0:	21800726 	beq	r4,r6,103c0 <memcmp+0x70>
   103a4:	20800003 	ldbu	r2,0(r4)
   103a8:	28c00003 	ldbu	r3,0(r5)
   103ac:	21000044 	addi	r4,r4,1
   103b0:	29400044 	addi	r5,r5,1
   103b4:	10fffa26 	beq	r2,r3,103a0 <memcmp+0x50>
   103b8:	10c5c83a 	sub	r2,r2,r3
   103bc:	f800283a 	ret
   103c0:	0005883a 	mov	r2,zero
   103c4:	f800283a 	ret

000103c8 <__register_exitproc>:
   103c8:	00800074 	movhi	r2,1
   103cc:	10c9e517 	ldw	r3,10132(r2)
   103d0:	18805217 	ldw	r2,328(r3)
   103d4:	10001726 	beq	r2,zero,10434 <__register_exitproc+0x6c>
   103d8:	10c00117 	ldw	r3,4(r2)
   103dc:	1a000808 	cmpgei	r8,r3,32
   103e0:	40001b1e 	bne	r8,zero,10450 <__register_exitproc+0x88>
   103e4:	20000b26 	beq	r4,zero,10414 <__register_exitproc+0x4c>
   103e8:	181090ba 	slli	r8,r3,2
   103ec:	02400044 	movi	r9,1
   103f0:	48d2983a 	sll	r9,r9,r3
   103f4:	1211883a 	add	r8,r2,r8
   103f8:	41802215 	stw	r6,136(r8)
   103fc:	11806217 	ldw	r6,392(r2)
   10400:	21000098 	cmpnei	r4,r4,2
   10404:	324cb03a 	or	r6,r6,r9
   10408:	11806215 	stw	r6,392(r2)
   1040c:	41c04215 	stw	r7,264(r8)
   10410:	20000b26 	beq	r4,zero,10440 <__register_exitproc+0x78>
   10414:	19000084 	addi	r4,r3,2
   10418:	200890ba 	slli	r4,r4,2
   1041c:	18c00044 	addi	r3,r3,1
   10420:	10c00115 	stw	r3,4(r2)
   10424:	1105883a 	add	r2,r2,r4
   10428:	11400015 	stw	r5,0(r2)
   1042c:	0005883a 	mov	r2,zero
   10430:	f800283a 	ret
   10434:	18805304 	addi	r2,r3,332
   10438:	18805215 	stw	r2,328(r3)
   1043c:	003fe606 	br	103d8 <__register_exitproc+0x10>
   10440:	11006317 	ldw	r4,396(r2)
   10444:	2248b03a 	or	r4,r4,r9
   10448:	11006315 	stw	r4,396(r2)
   1044c:	003ff106 	br	10414 <__register_exitproc+0x4c>
   10450:	00bfffc4 	movi	r2,-1
   10454:	f800283a 	ret

00010458 <__call_exitprocs>:
   10458:	defff704 	addi	sp,sp,-36
   1045c:	00800074 	movhi	r2,1
   10460:	dcc00315 	stw	r19,12(sp)
   10464:	14c9e517 	ldw	r19,10132(r2)
   10468:	dc800215 	stw	r18,8(sp)
   1046c:	dfc00815 	stw	ra,32(sp)
   10470:	9c805217 	ldw	r18,328(r19)
   10474:	ddc00715 	stw	r23,28(sp)
   10478:	dd800615 	stw	r22,24(sp)
   1047c:	dd400515 	stw	r21,20(sp)
   10480:	dd000415 	stw	r20,16(sp)
   10484:	dc400115 	stw	r17,4(sp)
   10488:	dc000015 	stw	r16,0(sp)
   1048c:	90001026 	beq	r18,zero,104d0 <__call_exitprocs+0x78>
   10490:	202b883a 	mov	r21,r4
   10494:	282d883a 	mov	r22,r5
   10498:	05000044 	movi	r20,1
   1049c:	94000117 	ldw	r16,4(r18)
   104a0:	847fffc4 	addi	r17,r16,-1
   104a4:	88000a16 	blt	r17,zero,104d0 <__call_exitprocs+0x78>
   104a8:	84000044 	addi	r16,r16,1
   104ac:	802090ba 	slli	r16,r16,2
   104b0:	9421883a 	add	r16,r18,r16
   104b4:	b0001126 	beq	r22,zero,104fc <__call_exitprocs+0xa4>
   104b8:	80804017 	ldw	r2,256(r16)
   104bc:	15800f26 	beq	r2,r22,104fc <__call_exitprocs+0xa4>
   104c0:	8c7fffc4 	addi	r17,r17,-1
   104c4:	88bfffd8 	cmpnei	r2,r17,-1
   104c8:	843fff04 	addi	r16,r16,-4
   104cc:	103ff91e 	bne	r2,zero,104b4 <__call_exitprocs+0x5c>
   104d0:	dfc00817 	ldw	ra,32(sp)
   104d4:	ddc00717 	ldw	r23,28(sp)
   104d8:	dd800617 	ldw	r22,24(sp)
   104dc:	dd400517 	ldw	r21,20(sp)
   104e0:	dd000417 	ldw	r20,16(sp)
   104e4:	dcc00317 	ldw	r19,12(sp)
   104e8:	dc800217 	ldw	r18,8(sp)
   104ec:	dc400117 	ldw	r17,4(sp)
   104f0:	dc000017 	ldw	r16,0(sp)
   104f4:	dec00904 	addi	sp,sp,36
   104f8:	f800283a 	ret
   104fc:	90800117 	ldw	r2,4(r18)
   10500:	81800017 	ldw	r6,0(r16)
   10504:	10bfffc4 	addi	r2,r2,-1
   10508:	14401726 	beq	r2,r17,10568 <__call_exitprocs+0x110>
   1050c:	80000015 	stw	zero,0(r16)
   10510:	303feb26 	beq	r6,zero,104c0 <__call_exitprocs+0x68>
   10514:	a446983a 	sll	r3,r20,r17
   10518:	90806217 	ldw	r2,392(r18)
   1051c:	95c00117 	ldw	r23,4(r18)
   10520:	1884703a 	and	r2,r3,r2
   10524:	1000081e 	bne	r2,zero,10548 <__call_exitprocs+0xf0>
   10528:	303ee83a 	callr	r6
   1052c:	90c00117 	ldw	r3,4(r18)
   10530:	98805217 	ldw	r2,328(r19)
   10534:	1dc0011e 	bne	r3,r23,1053c <__call_exitprocs+0xe4>
   10538:	14bfe126 	beq	r2,r18,104c0 <__call_exitprocs+0x68>
   1053c:	103fe426 	beq	r2,zero,104d0 <__call_exitprocs+0x78>
   10540:	1025883a 	mov	r18,r2
   10544:	003fd506 	br	1049c <__call_exitprocs+0x44>
   10548:	90806317 	ldw	r2,396(r18)
   1054c:	81002017 	ldw	r4,128(r16)
   10550:	1886703a 	and	r3,r3,r2
   10554:	1800061e 	bne	r3,zero,10570 <__call_exitprocs+0x118>
   10558:	200b883a 	mov	r5,r4
   1055c:	a809883a 	mov	r4,r21
   10560:	303ee83a 	callr	r6
   10564:	003ff106 	br	1052c <__call_exitprocs+0xd4>
   10568:	94400115 	stw	r17,4(r18)
   1056c:	003fe806 	br	10510 <__call_exitprocs+0xb8>
   10570:	303ee83a 	callr	r6
   10574:	003fed06 	br	1052c <__call_exitprocs+0xd4>
